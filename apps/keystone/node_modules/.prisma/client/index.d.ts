
/**
 * Client
**/

import * as runtime from './runtime/index';
declare const prisma: unique symbol
export type PrismaPromise<A> = Promise<A> & {[prisma]: true}
type UnwrapPromise<P extends any> = P extends Promise<infer R> ? R : P
type UnwrapTuple<Tuple extends readonly unknown[]> = {
  [K in keyof Tuple]: K extends `${number}` ? Tuple[K] extends PrismaPromise<infer X> ? X : UnwrapPromise<Tuple[K]> : UnwrapPromise<Tuple[K]>
};


/**
 * Model Post
 * 
 */
export type Post = {
  id: string
  title: string
  slug: string
  published: boolean
  publishedDate: Date | null
  editedDate: Date | null
  role: PostRoleType | null
  content: Prisma.JsonValue
  intro: string
  eventId: string | null
}

/**
 * Model User
 * 
 */
export type User = {
  id: string
  name: string
  username: string
  email: string
  password: string
  accountCreated: Date | null
  dateOfBirth: Date | null
  pronouns: string
  verified: boolean
  state: UserStateType | null
  sentVerification: Date | null
  discord: string
  twitter: string
  twitch: string
  passwordResetToken: string | null
  passwordResetIssuedAt: Date | null
  passwordResetRedeemedAt: Date | null
}

/**
 * Model Submission
 * 
 */
export type Submission = {
  id: string
  runnerId: string | null
  created: Date | null
  game: string
  category: string
  platform: string
  estimate: string
  ageRating: SubmissionAgeRatingType | null
  donationIncentive: string
  specialReqs: string
  availability: Prisma.JsonValue | null
  race: SubmissionRaceType | null
  racer: string
  coop: boolean
  video: string
  status: SubmissionStatusType | null
  eventId: string | null
  willingBackup: boolean
}

/**
 * Model Event
 * 
 */
export type Event = {
  id: string
  name: string
  shortname: string
  published: boolean
  acceptingSubmissions: boolean
  acceptingTickets: boolean
  scheduleReleased: boolean
  acceptingVolunteers: boolean
  acceptingBackups: boolean
  acceptingShirts: boolean
  eventTimezone: string
  startDate: Date | null
  endDate: Date | null
  raised: number | null
  postEventPage: Prisma.JsonValue
  logo_filesize: number | null
  logo_extension: string | null
  logo_width: number | null
  logo_height: number | null
  logo_id: string | null
  darkModeLogo_filesize: number | null
  darkModeLogo_extension: string | null
  darkModeLogo_width: number | null
  darkModeLogo_height: number | null
  darkModeLogo_id: string | null
  heroImage_filesize: number | null
  heroImage_extension: string | null
  heroImage_width: number | null
  heroImage_height: number | null
  heroImage_id: string | null
  ogImage_filesize: number | null
  ogImage_extension: string | null
  ogImage_width: number | null
  ogImage_height: number | null
  ogImage_id: string | null
  postEventBackground_filesize: number | null
  postEventBackground_extension: string | null
  postEventBackground_width: number | null
  postEventBackground_height: number | null
  postEventBackground_id: string | null
  pressKit_filename: string | null
  pressKit_filesize: number | null
  submissionInstructions: Prisma.JsonValue
  eventPage: Prisma.JsonValue
}

/**
 * Model Role
 * 
 */
export type Role = {
  id: string
  name: string
  admin: boolean
  canManageContent: boolean
  canManageUsers: boolean
  runner: boolean
  volunteer: boolean
  eventId: string | null
  show: boolean
  colour: string
  textColour: RoleTextColourType | null
}

/**
 * Model Run
 * 
 */
export type Run = {
  id: string
  originalSubmissionId: string | null
  game: string
  category: string
  platform: string
  estimate: string
  finalTime: string
  donationIncentive: string
  race: boolean
  racer: string
  coop: boolean
  twitchVOD: string
  youtubeVOD: string
  eventId: string | null
  scheduledTime: Date | null
}

/**
 * Model Verification
 * 
 */
export type Verification = {
  id: string
  code: string
  account: string
}

/**
 * Model Ticket
 * 
 */
export type Ticket = {
  id: string
  userId: string | null
  eventId: string | null
  taken: boolean
  method: TicketMethodType
  ticketID: string
  paid: boolean
  notes: string
  numberOfTickets: number | null
  stripeID: string
  created: Date | null
}

/**
 * Model Volunteer
 * 
 */
export type Volunteer = {
  id: string
  volunteerId: string | null
  jobType: VolunteerJobTypeType | null
  eventHostTime: number | null
  maxDailyHostTime: number | null
  dayTimes: Prisma.JsonValue | null
  specificGame: string
  specificRunner: string
  additionalInfo: string
  experience: string
  favMeme: string
  runnerManagementAvailability: string
  techAvailablity: string
  techExperience: string
  eventId: string | null
}

/**
 * Model ShirtOrder
 * 
 */
export type ShirtOrder = {
  id: string
  userId: string | null
  taken: boolean
  method: ShirtOrderMethodType
  shirtID: string
  paid: boolean
  notes: string
  size: ShirtOrderSizeType
  colour: ShirtOrderColourType
  stripeID: string
  created: Date | null
}

/**
 * Model Incentive
 * 
 */
export type Incentive = {
  id: string
  runId: string | null
  eventId: string | null
  title: string
  notes: string
  type: string
  data: Prisma.JsonValue | null
  active: boolean
}


/**
 * Enums
 */

// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275

export const PostRoleType: {
  public: 'public',
  runner: 'runner',
  staff: 'staff'
};

export type PostRoleType = (typeof PostRoleType)[keyof typeof PostRoleType]


export const RoleTextColourType: {
  white: 'white',
  black: 'black'
};

export type RoleTextColourType = (typeof RoleTextColourType)[keyof typeof RoleTextColourType]


export const ShirtOrderColourType: {
  blue: 'blue',
  purple: 'purple'
};

export type ShirtOrderColourType = (typeof ShirtOrderColourType)[keyof typeof ShirtOrderColourType]


export const ShirtOrderMethodType: {
  bank: 'bank',
  stripe: 'stripe'
};

export type ShirtOrderMethodType = (typeof ShirtOrderMethodType)[keyof typeof ShirtOrderMethodType]


export const ShirtOrderSizeType: {
  xs: 'xs',
  s: 's',
  m: 'm',
  l: 'l',
  xl: 'xl',
  xl2: 'xl2',
  xl3: 'xl3'
};

export type ShirtOrderSizeType = (typeof ShirtOrderSizeType)[keyof typeof ShirtOrderSizeType]


export const SubmissionAgeRatingType: {
  m_or_lower: 'm_or_lower',
  ma15: 'ma15',
  ra18: 'ra18'
};

export type SubmissionAgeRatingType = (typeof SubmissionAgeRatingType)[keyof typeof SubmissionAgeRatingType]


export const SubmissionRaceType: {
  no: 'no',
  solo: 'solo',
  only: 'only'
};

export type SubmissionRaceType = (typeof SubmissionRaceType)[keyof typeof SubmissionRaceType]


export const SubmissionStatusType: {
  submitted: 'submitted',
  accepted: 'accepted',
  backup: 'backup',
  rejected: 'rejected'
};

export type SubmissionStatusType = (typeof SubmissionStatusType)[keyof typeof SubmissionStatusType]


export const TicketMethodType: {
  bank: 'bank',
  stripe: 'stripe'
};

export type TicketMethodType = (typeof TicketMethodType)[keyof typeof TicketMethodType]


export const UserStateType: {
  none: 'none',
  vic: 'vic',
  nsw: 'nsw',
  qld: 'qld',
  sa: 'sa',
  wa: 'wa',
  act: 'act',
  nt: 'nt',
  tas: 'tas',
  outer: 'outer'
};

export type UserStateType = (typeof UserStateType)[keyof typeof UserStateType]


export const VolunteerJobTypeType: {
  host: 'host',
  social: 'social',
  runMgmt: 'runMgmt',
  tech: 'tech'
};

export type VolunteerJobTypeType = (typeof VolunteerJobTypeType)[keyof typeof VolunteerJobTypeType]


/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Posts
 * const posts = await prisma.post.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  GlobalReject extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined = 'rejectOnNotFound' extends keyof T
    ? T['rejectOnNotFound']
    : false
      > {
      /**
       * @private
       */
      private fetcher;
      /**
       * @private
       */
      private readonly dmmf;
      /**
       * @private
       */
      private connectionPromise?;
      /**
       * @private
       */
      private disconnectionPromise?;
      /**
       * @private
       */
      private readonly engineConfig;
      /**
       * @private
       */
      private readonly measurePerformance;

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Posts
   * const posts = await prisma.post.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends (U | 'beforeExit')>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : V extends 'beforeExit' ? () => Promise<void> : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): Promise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): Promise<void>;

  /**
   * Add a middleware
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends PrismaPromise<any>[]>(arg: [...P]): Promise<UnwrapTuple<P>>;

      /**
   * `prisma.post`: Exposes CRUD operations for the **Post** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Posts
    * const posts = await prisma.post.findMany()
    * ```
    */
  get post(): Prisma.PostDelegate<GlobalReject>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<GlobalReject>;

  /**
   * `prisma.submission`: Exposes CRUD operations for the **Submission** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Submissions
    * const submissions = await prisma.submission.findMany()
    * ```
    */
  get submission(): Prisma.SubmissionDelegate<GlobalReject>;

  /**
   * `prisma.event`: Exposes CRUD operations for the **Event** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Events
    * const events = await prisma.event.findMany()
    * ```
    */
  get event(): Prisma.EventDelegate<GlobalReject>;

  /**
   * `prisma.role`: Exposes CRUD operations for the **Role** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Roles
    * const roles = await prisma.role.findMany()
    * ```
    */
  get role(): Prisma.RoleDelegate<GlobalReject>;

  /**
   * `prisma.run`: Exposes CRUD operations for the **Run** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Runs
    * const runs = await prisma.run.findMany()
    * ```
    */
  get run(): Prisma.RunDelegate<GlobalReject>;

  /**
   * `prisma.verification`: Exposes CRUD operations for the **Verification** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Verifications
    * const verifications = await prisma.verification.findMany()
    * ```
    */
  get verification(): Prisma.VerificationDelegate<GlobalReject>;

  /**
   * `prisma.ticket`: Exposes CRUD operations for the **Ticket** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tickets
    * const tickets = await prisma.ticket.findMany()
    * ```
    */
  get ticket(): Prisma.TicketDelegate<GlobalReject>;

  /**
   * `prisma.volunteer`: Exposes CRUD operations for the **Volunteer** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Volunteers
    * const volunteers = await prisma.volunteer.findMany()
    * ```
    */
  get volunteer(): Prisma.VolunteerDelegate<GlobalReject>;

  /**
   * `prisma.shirtOrder`: Exposes CRUD operations for the **ShirtOrder** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ShirtOrders
    * const shirtOrders = await prisma.shirtOrder.findMany()
    * ```
    */
  get shirtOrder(): Prisma.ShirtOrderDelegate<GlobalReject>;

  /**
   * `prisma.incentive`: Exposes CRUD operations for the **Incentive** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Incentives
    * const incentives = await prisma.incentive.findMany()
    * ```
    */
  get incentive(): Prisma.IncentiveDelegate<GlobalReject>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export import Metrics = runtime.Metrics
  export import Metric = runtime.Metric
  export import MetricHistogram = runtime.MetricHistogram
  export import MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
   * Prisma Client JS version: 4.3.1
   * Query Engine version: c875e43600dfe042452e0b868f7a48b817b9640b
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }
  type HasSelect = {
    select: any
  }
  type HasInclude = {
    include: any
  }
  type CheckSelect<T, S, U> = T extends SelectAndInclude
    ? 'Please either choose `select` or `include`'
    : T extends HasSelect
    ? U
    : T extends HasInclude
    ? U
    : S

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => Promise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = {
    [key in keyof T]: T[key] extends false | undefined | null ? never : key
  }[keyof T]

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Exact<A, W = unknown> = 
  W extends unknown ? A extends Narrowable ? Cast<A, W> : Cast<
  {[K in keyof A]: K extends keyof W ? Exact<A[K], W[K]> : never},
  {[K in keyof W]: K extends keyof A ? Exact<A[K], W[K]> : W[K]}>
  : never;

  type Narrowable = string | number | boolean | bigint;

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;

  export function validator<V>(): <S>(select: Exact<S, V>) => S;

  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but with an array
   */
  type PickArray<T, K extends Array<keyof T>> = Prisma__Pick<T, TupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export import FieldRef = runtime.FieldRef

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>

  class PrismaClientFetcher {
    private readonly prisma;
    private readonly debug;
    private readonly hooks?;
    constructor(prisma: PrismaClient<any, any>, debug?: boolean, hooks?: Hooks | undefined);
    request<T>(document: any, dataPath?: string[], rootField?: string, typeName?: string, isList?: boolean, callsite?: string): Promise<T>;
    sanitizeMessage(message: string): string;
    protected unpack(document: any, data: any, path: string[], rootField?: string, isList?: boolean): any;
  }

  export const ModelName: {
    Post: 'Post',
    User: 'User',
    Submission: 'Submission',
    Event: 'Event',
    Role: 'Role',
    Run: 'Run',
    Verification: 'Verification',
    Ticket: 'Ticket',
    Volunteer: 'Volunteer',
    ShirtOrder: 'ShirtOrder',
    Incentive: 'Incentive'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    postgresql?: Datasource
  }

  export type RejectOnNotFound = boolean | ((error: Error) => Error)
  export type RejectPerModel = { [P in ModelName]?: RejectOnNotFound }
  export type RejectPerOperation =  { [P in "findUnique" | "findFirst"]?: RejectPerModel | RejectOnNotFound } 
  type IsReject<T> = T extends true ? True : T extends (err: Error) => Error ? True : False
  export type HasReject<
    GlobalRejectSettings extends Prisma.PrismaClientOptions['rejectOnNotFound'],
    LocalRejectSettings,
    Action extends PrismaAction,
    Model extends ModelName
  > = LocalRejectSettings extends RejectOnNotFound
    ? IsReject<LocalRejectSettings>
    : GlobalRejectSettings extends RejectPerOperation
    ? Action extends keyof GlobalRejectSettings
      ? GlobalRejectSettings[Action] extends RejectOnNotFound
        ? IsReject<GlobalRejectSettings[Action]>
        : GlobalRejectSettings[Action] extends RejectPerModel
        ? Model extends keyof GlobalRejectSettings[Action]
          ? IsReject<GlobalRejectSettings[Action][Model]>
          : False
        : False
      : False
    : IsReject<GlobalRejectSettings>
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'

  export interface PrismaClientOptions {
    /**
     * Configure findUnique/findFirst to throw an error if the query returns null. 
     * @deprecated since 4.0.0. Use `findUniqueOrThrow`/`findFirstOrThrow` methods instead.
     * @example
     * ```
     * // Reject on both findUnique/findFirst
     * rejectOnNotFound: true
     * // Reject only on findFirst with a custom error
     * rejectOnNotFound: { findFirst: (err) => new Error("Custom Error")}
     * // Reject on user.findUnique with a custom error
     * rejectOnNotFound: { findUnique: {User: (err) => new Error("User not found")}}
     * ```
     */
    rejectOnNotFound?: RejectOnNotFound | RejectPerOperation
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources

    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat

    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: Array<LogLevel | LogDefinition>
  }

  export type Hooks = {
    beforeRequest?: (options: { query: string, path: string[], rootField?: string, typeName?: string, document: any }) => any
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findMany'
    | 'findFirst'
    | 'create'
    | 'createMany'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'

  /**
   * These options are being passed in to the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => Promise<T>,
  ) => Promise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type PostCountOutputType
   */


  export type PostCountOutputType = {
    author: number
  }

  export type PostCountOutputTypeSelect = {
    author?: boolean
  }

  export type PostCountOutputTypeGetPayload<
    S extends boolean | null | undefined | PostCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? PostCountOutputType
    : S extends undefined
    ? never
    : S extends PostCountOutputTypeArgs
    ?'include' extends U
    ? PostCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof PostCountOutputType ? PostCountOutputType[P] : never
  } 
    : PostCountOutputType
  : PostCountOutputType




  // Custom InputTypes

  /**
   * PostCountOutputType without action
   */
  export type PostCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the PostCountOutputType
     * 
    **/
    select?: PostCountOutputTypeSelect | null
  }



  /**
   * Count Type UserCountOutputType
   */


  export type UserCountOutputType = {
    submissions: number
    roles: number
    runs: number
    tickets: number
    volunteer: number
    shirts: number
    from_Post_author: number
  }

  export type UserCountOutputTypeSelect = {
    submissions?: boolean
    roles?: boolean
    runs?: boolean
    tickets?: boolean
    volunteer?: boolean
    shirts?: boolean
    from_Post_author?: boolean
  }

  export type UserCountOutputTypeGetPayload<
    S extends boolean | null | undefined | UserCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? UserCountOutputType
    : S extends undefined
    ? never
    : S extends UserCountOutputTypeArgs
    ?'include' extends U
    ? UserCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof UserCountOutputType ? UserCountOutputType[P] : never
  } 
    : UserCountOutputType
  : UserCountOutputType




  // Custom InputTypes

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     * 
    **/
    select?: UserCountOutputTypeSelect | null
  }



  /**
   * Count Type SubmissionCountOutputType
   */


  export type SubmissionCountOutputType = {
    from_Run_originalSubmission: number
  }

  export type SubmissionCountOutputTypeSelect = {
    from_Run_originalSubmission?: boolean
  }

  export type SubmissionCountOutputTypeGetPayload<
    S extends boolean | null | undefined | SubmissionCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? SubmissionCountOutputType
    : S extends undefined
    ? never
    : S extends SubmissionCountOutputTypeArgs
    ?'include' extends U
    ? SubmissionCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof SubmissionCountOutputType ? SubmissionCountOutputType[P] : never
  } 
    : SubmissionCountOutputType
  : SubmissionCountOutputType




  // Custom InputTypes

  /**
   * SubmissionCountOutputType without action
   */
  export type SubmissionCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the SubmissionCountOutputType
     * 
    **/
    select?: SubmissionCountOutputTypeSelect | null
  }



  /**
   * Count Type EventCountOutputType
   */


  export type EventCountOutputType = {
    submissions: number
    runs: number
    tickets: number
    volunteer: number
    donationIncentives: number
    from_Post_event: number
    from_Role_event: number
  }

  export type EventCountOutputTypeSelect = {
    submissions?: boolean
    runs?: boolean
    tickets?: boolean
    volunteer?: boolean
    donationIncentives?: boolean
    from_Post_event?: boolean
    from_Role_event?: boolean
  }

  export type EventCountOutputTypeGetPayload<
    S extends boolean | null | undefined | EventCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? EventCountOutputType
    : S extends undefined
    ? never
    : S extends EventCountOutputTypeArgs
    ?'include' extends U
    ? EventCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof EventCountOutputType ? EventCountOutputType[P] : never
  } 
    : EventCountOutputType
  : EventCountOutputType




  // Custom InputTypes

  /**
   * EventCountOutputType without action
   */
  export type EventCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the EventCountOutputType
     * 
    **/
    select?: EventCountOutputTypeSelect | null
  }



  /**
   * Count Type RoleCountOutputType
   */


  export type RoleCountOutputType = {
    users: number
  }

  export type RoleCountOutputTypeSelect = {
    users?: boolean
  }

  export type RoleCountOutputTypeGetPayload<
    S extends boolean | null | undefined | RoleCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? RoleCountOutputType
    : S extends undefined
    ? never
    : S extends RoleCountOutputTypeArgs
    ?'include' extends U
    ? RoleCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof RoleCountOutputType ? RoleCountOutputType[P] : never
  } 
    : RoleCountOutputType
  : RoleCountOutputType




  // Custom InputTypes

  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the RoleCountOutputType
     * 
    **/
    select?: RoleCountOutputTypeSelect | null
  }



  /**
   * Count Type RunCountOutputType
   */


  export type RunCountOutputType = {
    runners: number
    donationIncentiveObject: number
  }

  export type RunCountOutputTypeSelect = {
    runners?: boolean
    donationIncentiveObject?: boolean
  }

  export type RunCountOutputTypeGetPayload<
    S extends boolean | null | undefined | RunCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? RunCountOutputType
    : S extends undefined
    ? never
    : S extends RunCountOutputTypeArgs
    ?'include' extends U
    ? RunCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof RunCountOutputType ? RunCountOutputType[P] : never
  } 
    : RunCountOutputType
  : RunCountOutputType




  // Custom InputTypes

  /**
   * RunCountOutputType without action
   */
  export type RunCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the RunCountOutputType
     * 
    **/
    select?: RunCountOutputTypeSelect | null
  }



  /**
   * Models
   */

  /**
   * Model Post
   */


  export type AggregatePost = {
    _count: PostCountAggregateOutputType | null
    _min: PostMinAggregateOutputType | null
    _max: PostMaxAggregateOutputType | null
  }

  export type PostMinAggregateOutputType = {
    id: string | null
    title: string | null
    slug: string | null
    published: boolean | null
    publishedDate: Date | null
    editedDate: Date | null
    role: PostRoleType | null
    intro: string | null
    eventId: string | null
  }

  export type PostMaxAggregateOutputType = {
    id: string | null
    title: string | null
    slug: string | null
    published: boolean | null
    publishedDate: Date | null
    editedDate: Date | null
    role: PostRoleType | null
    intro: string | null
    eventId: string | null
  }

  export type PostCountAggregateOutputType = {
    id: number
    title: number
    slug: number
    published: number
    publishedDate: number
    editedDate: number
    role: number
    content: number
    intro: number
    eventId: number
    _all: number
  }


  export type PostMinAggregateInputType = {
    id?: true
    title?: true
    slug?: true
    published?: true
    publishedDate?: true
    editedDate?: true
    role?: true
    intro?: true
    eventId?: true
  }

  export type PostMaxAggregateInputType = {
    id?: true
    title?: true
    slug?: true
    published?: true
    publishedDate?: true
    editedDate?: true
    role?: true
    intro?: true
    eventId?: true
  }

  export type PostCountAggregateInputType = {
    id?: true
    title?: true
    slug?: true
    published?: true
    publishedDate?: true
    editedDate?: true
    role?: true
    content?: true
    intro?: true
    eventId?: true
    _all?: true
  }

  export type PostAggregateArgs = {
    /**
     * Filter which Post to aggregate.
     * 
    **/
    where?: PostWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Posts to fetch.
     * 
    **/
    orderBy?: Enumerable<PostOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: PostWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Posts from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Posts.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Posts
    **/
    _count?: true | PostCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PostMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PostMaxAggregateInputType
  }

  export type GetPostAggregateType<T extends PostAggregateArgs> = {
        [P in keyof T & keyof AggregatePost]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePost[P]>
      : GetScalarType<T[P], AggregatePost[P]>
  }




  export type PostGroupByArgs = {
    where?: PostWhereInput
    orderBy?: Enumerable<PostOrderByWithAggregationInput>
    by: Array<PostScalarFieldEnum>
    having?: PostScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PostCountAggregateInputType | true
    _min?: PostMinAggregateInputType
    _max?: PostMaxAggregateInputType
  }


  export type PostGroupByOutputType = {
    id: string
    title: string
    slug: string
    published: boolean
    publishedDate: Date | null
    editedDate: Date | null
    role: PostRoleType | null
    content: JsonValue
    intro: string
    eventId: string | null
    _count: PostCountAggregateOutputType | null
    _min: PostMinAggregateOutputType | null
    _max: PostMaxAggregateOutputType | null
  }

  type GetPostGroupByPayload<T extends PostGroupByArgs> = PrismaPromise<
    Array<
      PickArray<PostGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PostGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PostGroupByOutputType[P]>
            : GetScalarType<T[P], PostGroupByOutputType[P]>
        }
      >
    >


  export type PostSelect = {
    id?: boolean
    title?: boolean
    slug?: boolean
    author?: boolean | UserFindManyArgs
    published?: boolean
    publishedDate?: boolean
    editedDate?: boolean
    role?: boolean
    content?: boolean
    intro?: boolean
    event?: boolean | EventArgs
    eventId?: boolean
    _count?: boolean | PostCountOutputTypeArgs
  }

  export type PostInclude = {
    author?: boolean | UserFindManyArgs
    event?: boolean | EventArgs
    _count?: boolean | PostCountOutputTypeArgs
  }

  export type PostGetPayload<
    S extends boolean | null | undefined | PostArgs,
    U = keyof S
      > = S extends true
        ? Post
    : S extends undefined
    ? never
    : S extends PostArgs | PostFindManyArgs
    ?'include' extends U
    ? Post  & {
    [P in TrueKeys<S['include']>]:
        P extends 'author' ? Array < UserGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'event' ? EventGetPayload<Exclude<S['include'], undefined | null>[P]> | null :
        P extends '_count' ? PostCountOutputTypeGetPayload<Exclude<S['include'], undefined | null>[P]> :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'author' ? Array < UserGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'event' ? EventGetPayload<Exclude<S['select'], undefined | null>[P]> | null :
        P extends '_count' ? PostCountOutputTypeGetPayload<Exclude<S['select'], undefined | null>[P]> :  P extends keyof Post ? Post[P] : never
  } 
    : Post
  : Post


  type PostCountArgs = Merge<
    Omit<PostFindManyArgs, 'select' | 'include'> & {
      select?: PostCountAggregateInputType | true
    }
  >

  export interface PostDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Post that matches the filter.
     * @param {PostFindUniqueArgs} args - Arguments to find a Post
     * @example
     * // Get one Post
     * const post = await prisma.post.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends PostFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, PostFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Post'> extends True ? CheckSelect<T, Prisma__PostClient<Post>, Prisma__PostClient<PostGetPayload<T>>> : CheckSelect<T, Prisma__PostClient<Post | null >, Prisma__PostClient<PostGetPayload<T> | null >>

    /**
     * Find the first Post that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostFindFirstArgs} args - Arguments to find a Post
     * @example
     * // Get one Post
     * const post = await prisma.post.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends PostFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, PostFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Post'> extends True ? CheckSelect<T, Prisma__PostClient<Post>, Prisma__PostClient<PostGetPayload<T>>> : CheckSelect<T, Prisma__PostClient<Post | null >, Prisma__PostClient<PostGetPayload<T> | null >>

    /**
     * Find zero or more Posts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Posts
     * const posts = await prisma.post.findMany()
     * 
     * // Get first 10 Posts
     * const posts = await prisma.post.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const postWithIdOnly = await prisma.post.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends PostFindManyArgs>(
      args?: SelectSubset<T, PostFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<Post>>, PrismaPromise<Array<PostGetPayload<T>>>>

    /**
     * Create a Post.
     * @param {PostCreateArgs} args - Arguments to create a Post.
     * @example
     * // Create one Post
     * const Post = await prisma.post.create({
     *   data: {
     *     // ... data to create a Post
     *   }
     * })
     * 
    **/
    create<T extends PostCreateArgs>(
      args: SelectSubset<T, PostCreateArgs>
    ): CheckSelect<T, Prisma__PostClient<Post>, Prisma__PostClient<PostGetPayload<T>>>

    /**
     * Create many Posts.
     *     @param {PostCreateManyArgs} args - Arguments to create many Posts.
     *     @example
     *     // Create many Posts
     *     const post = await prisma.post.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends PostCreateManyArgs>(
      args?: SelectSubset<T, PostCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Post.
     * @param {PostDeleteArgs} args - Arguments to delete one Post.
     * @example
     * // Delete one Post
     * const Post = await prisma.post.delete({
     *   where: {
     *     // ... filter to delete one Post
     *   }
     * })
     * 
    **/
    delete<T extends PostDeleteArgs>(
      args: SelectSubset<T, PostDeleteArgs>
    ): CheckSelect<T, Prisma__PostClient<Post>, Prisma__PostClient<PostGetPayload<T>>>

    /**
     * Update one Post.
     * @param {PostUpdateArgs} args - Arguments to update one Post.
     * @example
     * // Update one Post
     * const post = await prisma.post.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends PostUpdateArgs>(
      args: SelectSubset<T, PostUpdateArgs>
    ): CheckSelect<T, Prisma__PostClient<Post>, Prisma__PostClient<PostGetPayload<T>>>

    /**
     * Delete zero or more Posts.
     * @param {PostDeleteManyArgs} args - Arguments to filter Posts to delete.
     * @example
     * // Delete a few Posts
     * const { count } = await prisma.post.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends PostDeleteManyArgs>(
      args?: SelectSubset<T, PostDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Posts
     * const post = await prisma.post.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends PostUpdateManyArgs>(
      args: SelectSubset<T, PostUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Post.
     * @param {PostUpsertArgs} args - Arguments to update or create a Post.
     * @example
     * // Update or create a Post
     * const post = await prisma.post.upsert({
     *   create: {
     *     // ... data to create a Post
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Post we want to update
     *   }
     * })
    **/
    upsert<T extends PostUpsertArgs>(
      args: SelectSubset<T, PostUpsertArgs>
    ): CheckSelect<T, Prisma__PostClient<Post>, Prisma__PostClient<PostGetPayload<T>>>

    /**
     * Find one Post that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {PostFindUniqueOrThrowArgs} args - Arguments to find a Post
     * @example
     * // Get one Post
     * const post = await prisma.post.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends PostFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, PostFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__PostClient<Post>, Prisma__PostClient<PostGetPayload<T>>>

    /**
     * Find the first Post that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostFindFirstOrThrowArgs} args - Arguments to find a Post
     * @example
     * // Get one Post
     * const post = await prisma.post.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends PostFindFirstOrThrowArgs>(
      args?: SelectSubset<T, PostFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__PostClient<Post>, Prisma__PostClient<PostGetPayload<T>>>

    /**
     * Count the number of Posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostCountArgs} args - Arguments to filter Posts to count.
     * @example
     * // Count the number of Posts
     * const count = await prisma.post.count({
     *   where: {
     *     // ... the filter for the Posts we want to count
     *   }
     * })
    **/
    count<T extends PostCountArgs>(
      args?: Subset<T, PostCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PostCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Post.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PostAggregateArgs>(args: Subset<T, PostAggregateArgs>): PrismaPromise<GetPostAggregateType<T>>

    /**
     * Group by Post.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PostGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PostGroupByArgs['orderBy'] }
        : { orderBy?: PostGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PostGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPostGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Post.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__PostClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    author<T extends UserFindManyArgs = {}>(args?: Subset<T, UserFindManyArgs>): CheckSelect<T, PrismaPromise<Array<User>>, PrismaPromise<Array<UserGetPayload<T>>>>;

    event<T extends EventArgs = {}>(args?: Subset<T, EventArgs>): CheckSelect<T, Prisma__EventClient<Event | null >, Prisma__EventClient<EventGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Post base type for findUnique actions
   */
  export type PostFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Post
     * 
    **/
    select?: PostSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: PostInclude | null
    /**
     * Filter, which Post to fetch.
     * 
    **/
    where: PostWhereUniqueInput
  }

  /**
   * Post: findUnique
   */
  export interface PostFindUniqueArgs extends PostFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Post base type for findFirst actions
   */
  export type PostFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Post
     * 
    **/
    select?: PostSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: PostInclude | null
    /**
     * Filter, which Post to fetch.
     * 
    **/
    where?: PostWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Posts to fetch.
     * 
    **/
    orderBy?: Enumerable<PostOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Posts.
     * 
    **/
    cursor?: PostWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Posts from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Posts.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Posts.
     * 
    **/
    distinct?: Enumerable<PostScalarFieldEnum>
  }

  /**
   * Post: findFirst
   */
  export interface PostFindFirstArgs extends PostFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Post findMany
   */
  export type PostFindManyArgs = {
    /**
     * Select specific fields to fetch from the Post
     * 
    **/
    select?: PostSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: PostInclude | null
    /**
     * Filter, which Posts to fetch.
     * 
    **/
    where?: PostWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Posts to fetch.
     * 
    **/
    orderBy?: Enumerable<PostOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Posts.
     * 
    **/
    cursor?: PostWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Posts from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Posts.
     * 
    **/
    skip?: number
    distinct?: Enumerable<PostScalarFieldEnum>
  }


  /**
   * Post create
   */
  export type PostCreateArgs = {
    /**
     * Select specific fields to fetch from the Post
     * 
    **/
    select?: PostSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: PostInclude | null
    /**
     * The data needed to create a Post.
     * 
    **/
    data: XOR<PostCreateInput, PostUncheckedCreateInput>
  }


  /**
   * Post createMany
   */
  export type PostCreateManyArgs = {
    /**
     * The data used to create many Posts.
     * 
    **/
    data: Enumerable<PostCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Post update
   */
  export type PostUpdateArgs = {
    /**
     * Select specific fields to fetch from the Post
     * 
    **/
    select?: PostSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: PostInclude | null
    /**
     * The data needed to update a Post.
     * 
    **/
    data: XOR<PostUpdateInput, PostUncheckedUpdateInput>
    /**
     * Choose, which Post to update.
     * 
    **/
    where: PostWhereUniqueInput
  }


  /**
   * Post updateMany
   */
  export type PostUpdateManyArgs = {
    /**
     * The data used to update Posts.
     * 
    **/
    data: XOR<PostUpdateManyMutationInput, PostUncheckedUpdateManyInput>
    /**
     * Filter which Posts to update
     * 
    **/
    where?: PostWhereInput
  }


  /**
   * Post upsert
   */
  export type PostUpsertArgs = {
    /**
     * Select specific fields to fetch from the Post
     * 
    **/
    select?: PostSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: PostInclude | null
    /**
     * The filter to search for the Post to update in case it exists.
     * 
    **/
    where: PostWhereUniqueInput
    /**
     * In case the Post found by the `where` argument doesn't exist, create a new Post with this data.
     * 
    **/
    create: XOR<PostCreateInput, PostUncheckedCreateInput>
    /**
     * In case the Post was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<PostUpdateInput, PostUncheckedUpdateInput>
  }


  /**
   * Post delete
   */
  export type PostDeleteArgs = {
    /**
     * Select specific fields to fetch from the Post
     * 
    **/
    select?: PostSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: PostInclude | null
    /**
     * Filter which Post to delete.
     * 
    **/
    where: PostWhereUniqueInput
  }


  /**
   * Post deleteMany
   */
  export type PostDeleteManyArgs = {
    /**
     * Filter which Posts to delete
     * 
    **/
    where?: PostWhereInput
  }


  /**
   * Post: findUniqueOrThrow
   */
  export type PostFindUniqueOrThrowArgs = PostFindUniqueArgsBase
      

  /**
   * Post: findFirstOrThrow
   */
  export type PostFindFirstOrThrowArgs = PostFindFirstArgsBase
      

  /**
   * Post without action
   */
  export type PostArgs = {
    /**
     * Select specific fields to fetch from the Post
     * 
    **/
    select?: PostSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: PostInclude | null
  }



  /**
   * Model User
   */


  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    name: string | null
    username: string | null
    email: string | null
    password: string | null
    accountCreated: Date | null
    dateOfBirth: Date | null
    pronouns: string | null
    verified: boolean | null
    state: UserStateType | null
    sentVerification: Date | null
    discord: string | null
    twitter: string | null
    twitch: string | null
    passwordResetToken: string | null
    passwordResetIssuedAt: Date | null
    passwordResetRedeemedAt: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    name: string | null
    username: string | null
    email: string | null
    password: string | null
    accountCreated: Date | null
    dateOfBirth: Date | null
    pronouns: string | null
    verified: boolean | null
    state: UserStateType | null
    sentVerification: Date | null
    discord: string | null
    twitter: string | null
    twitch: string | null
    passwordResetToken: string | null
    passwordResetIssuedAt: Date | null
    passwordResetRedeemedAt: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    name: number
    username: number
    email: number
    password: number
    accountCreated: number
    dateOfBirth: number
    pronouns: number
    verified: number
    state: number
    sentVerification: number
    discord: number
    twitter: number
    twitch: number
    passwordResetToken: number
    passwordResetIssuedAt: number
    passwordResetRedeemedAt: number
    _all: number
  }


  export type UserMinAggregateInputType = {
    id?: true
    name?: true
    username?: true
    email?: true
    password?: true
    accountCreated?: true
    dateOfBirth?: true
    pronouns?: true
    verified?: true
    state?: true
    sentVerification?: true
    discord?: true
    twitter?: true
    twitch?: true
    passwordResetToken?: true
    passwordResetIssuedAt?: true
    passwordResetRedeemedAt?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    name?: true
    username?: true
    email?: true
    password?: true
    accountCreated?: true
    dateOfBirth?: true
    pronouns?: true
    verified?: true
    state?: true
    sentVerification?: true
    discord?: true
    twitter?: true
    twitch?: true
    passwordResetToken?: true
    passwordResetIssuedAt?: true
    passwordResetRedeemedAt?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    name?: true
    username?: true
    email?: true
    password?: true
    accountCreated?: true
    dateOfBirth?: true
    pronouns?: true
    verified?: true
    state?: true
    sentVerification?: true
    discord?: true
    twitter?: true
    twitch?: true
    passwordResetToken?: true
    passwordResetIssuedAt?: true
    passwordResetRedeemedAt?: true
    _all?: true
  }

  export type UserAggregateArgs = {
    /**
     * Filter which User to aggregate.
     * 
    **/
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     * 
    **/
    orderBy?: Enumerable<UserOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs = {
    where?: UserWhereInput
    orderBy?: Enumerable<UserOrderByWithAggregationInput>
    by: Array<UserScalarFieldEnum>
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }


  export type UserGroupByOutputType = {
    id: string
    name: string
    username: string
    email: string
    password: string
    accountCreated: Date | null
    dateOfBirth: Date | null
    pronouns: string
    verified: boolean
    state: UserStateType | null
    sentVerification: Date | null
    discord: string
    twitter: string
    twitch: string
    passwordResetToken: string | null
    passwordResetIssuedAt: Date | null
    passwordResetRedeemedAt: Date | null
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = PrismaPromise<
    Array<
      PickArray<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect = {
    id?: boolean
    name?: boolean
    username?: boolean
    email?: boolean
    password?: boolean
    accountCreated?: boolean
    dateOfBirth?: boolean
    pronouns?: boolean
    submissions?: boolean | SubmissionFindManyArgs
    roles?: boolean | RoleFindManyArgs
    runs?: boolean | RunFindManyArgs
    verified?: boolean
    state?: boolean
    sentVerification?: boolean
    discord?: boolean
    twitter?: boolean
    twitch?: boolean
    tickets?: boolean | TicketFindManyArgs
    volunteer?: boolean | VolunteerFindManyArgs
    shirts?: boolean | ShirtOrderFindManyArgs
    passwordResetToken?: boolean
    passwordResetIssuedAt?: boolean
    passwordResetRedeemedAt?: boolean
    from_Post_author?: boolean | PostFindManyArgs
    _count?: boolean | UserCountOutputTypeArgs
  }

  export type UserInclude = {
    submissions?: boolean | SubmissionFindManyArgs
    roles?: boolean | RoleFindManyArgs
    runs?: boolean | RunFindManyArgs
    tickets?: boolean | TicketFindManyArgs
    volunteer?: boolean | VolunteerFindManyArgs
    shirts?: boolean | ShirtOrderFindManyArgs
    from_Post_author?: boolean | PostFindManyArgs
    _count?: boolean | UserCountOutputTypeArgs
  }

  export type UserGetPayload<
    S extends boolean | null | undefined | UserArgs,
    U = keyof S
      > = S extends true
        ? User
    : S extends undefined
    ? never
    : S extends UserArgs | UserFindManyArgs
    ?'include' extends U
    ? User  & {
    [P in TrueKeys<S['include']>]:
        P extends 'submissions' ? Array < SubmissionGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'roles' ? Array < RoleGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'runs' ? Array < RunGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'tickets' ? Array < TicketGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'volunteer' ? Array < VolunteerGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'shirts' ? Array < ShirtOrderGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'from_Post_author' ? Array < PostGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends '_count' ? UserCountOutputTypeGetPayload<Exclude<S['include'], undefined | null>[P]> :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'submissions' ? Array < SubmissionGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'roles' ? Array < RoleGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'runs' ? Array < RunGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'tickets' ? Array < TicketGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'volunteer' ? Array < VolunteerGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'shirts' ? Array < ShirtOrderGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'from_Post_author' ? Array < PostGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends '_count' ? UserCountOutputTypeGetPayload<Exclude<S['select'], undefined | null>[P]> :  P extends keyof User ? User[P] : never
  } 
    : User
  : User


  type UserCountArgs = Merge<
    Omit<UserFindManyArgs, 'select' | 'include'> & {
      select?: UserCountAggregateInputType | true
    }
  >

  export interface UserDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends UserFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, UserFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'User'> extends True ? CheckSelect<T, Prisma__UserClient<User>, Prisma__UserClient<UserGetPayload<T>>> : CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends UserFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, UserFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'User'> extends True ? CheckSelect<T, Prisma__UserClient<User>, Prisma__UserClient<UserGetPayload<T>>> : CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends UserFindManyArgs>(
      args?: SelectSubset<T, UserFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<User>>, PrismaPromise<Array<UserGetPayload<T>>>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
    **/
    create<T extends UserCreateArgs>(
      args: SelectSubset<T, UserCreateArgs>
    ): CheckSelect<T, Prisma__UserClient<User>, Prisma__UserClient<UserGetPayload<T>>>

    /**
     * Create many Users.
     *     @param {UserCreateManyArgs} args - Arguments to create many Users.
     *     @example
     *     // Create many Users
     *     const user = await prisma.user.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends UserCreateManyArgs>(
      args?: SelectSubset<T, UserCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
    **/
    delete<T extends UserDeleteArgs>(
      args: SelectSubset<T, UserDeleteArgs>
    ): CheckSelect<T, Prisma__UserClient<User>, Prisma__UserClient<UserGetPayload<T>>>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends UserUpdateArgs>(
      args: SelectSubset<T, UserUpdateArgs>
    ): CheckSelect<T, Prisma__UserClient<User>, Prisma__UserClient<UserGetPayload<T>>>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends UserDeleteManyArgs>(
      args?: SelectSubset<T, UserDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends UserUpdateManyArgs>(
      args: SelectSubset<T, UserUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
    **/
    upsert<T extends UserUpsertArgs>(
      args: SelectSubset<T, UserUpsertArgs>
    ): CheckSelect<T, Prisma__UserClient<User>, Prisma__UserClient<UserGetPayload<T>>>

    /**
     * Find one User that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, UserFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__UserClient<User>, Prisma__UserClient<UserGetPayload<T>>>

    /**
     * Find the first User that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(
      args?: SelectSubset<T, UserFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__UserClient<User>, Prisma__UserClient<UserGetPayload<T>>>

    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__UserClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    submissions<T extends SubmissionFindManyArgs = {}>(args?: Subset<T, SubmissionFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Submission>>, PrismaPromise<Array<SubmissionGetPayload<T>>>>;

    roles<T extends RoleFindManyArgs = {}>(args?: Subset<T, RoleFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Role>>, PrismaPromise<Array<RoleGetPayload<T>>>>;

    runs<T extends RunFindManyArgs = {}>(args?: Subset<T, RunFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Run>>, PrismaPromise<Array<RunGetPayload<T>>>>;

    tickets<T extends TicketFindManyArgs = {}>(args?: Subset<T, TicketFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Ticket>>, PrismaPromise<Array<TicketGetPayload<T>>>>;

    volunteer<T extends VolunteerFindManyArgs = {}>(args?: Subset<T, VolunteerFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Volunteer>>, PrismaPromise<Array<VolunteerGetPayload<T>>>>;

    shirts<T extends ShirtOrderFindManyArgs = {}>(args?: Subset<T, ShirtOrderFindManyArgs>): CheckSelect<T, PrismaPromise<Array<ShirtOrder>>, PrismaPromise<Array<ShirtOrderGetPayload<T>>>>;

    from_Post_author<T extends PostFindManyArgs = {}>(args?: Subset<T, PostFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Post>>, PrismaPromise<Array<PostGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * User base type for findUnique actions
   */
  export type UserFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the User
     * 
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserInclude | null
    /**
     * Filter, which User to fetch.
     * 
    **/
    where: UserWhereUniqueInput
  }

  /**
   * User: findUnique
   */
  export interface UserFindUniqueArgs extends UserFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * User base type for findFirst actions
   */
  export type UserFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the User
     * 
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserInclude | null
    /**
     * Filter, which User to fetch.
     * 
    **/
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     * 
    **/
    orderBy?: Enumerable<UserOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     * 
    **/
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     * 
    **/
    distinct?: Enumerable<UserScalarFieldEnum>
  }

  /**
   * User: findFirst
   */
  export interface UserFindFirstArgs extends UserFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * User findMany
   */
  export type UserFindManyArgs = {
    /**
     * Select specific fields to fetch from the User
     * 
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserInclude | null
    /**
     * Filter, which Users to fetch.
     * 
    **/
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     * 
    **/
    orderBy?: Enumerable<UserOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     * 
    **/
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     * 
    **/
    skip?: number
    distinct?: Enumerable<UserScalarFieldEnum>
  }


  /**
   * User create
   */
  export type UserCreateArgs = {
    /**
     * Select specific fields to fetch from the User
     * 
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserInclude | null
    /**
     * The data needed to create a User.
     * 
    **/
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }


  /**
   * User createMany
   */
  export type UserCreateManyArgs = {
    /**
     * The data used to create many Users.
     * 
    **/
    data: Enumerable<UserCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * User update
   */
  export type UserUpdateArgs = {
    /**
     * Select specific fields to fetch from the User
     * 
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserInclude | null
    /**
     * The data needed to update a User.
     * 
    **/
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     * 
    **/
    where: UserWhereUniqueInput
  }


  /**
   * User updateMany
   */
  export type UserUpdateManyArgs = {
    /**
     * The data used to update Users.
     * 
    **/
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     * 
    **/
    where?: UserWhereInput
  }


  /**
   * User upsert
   */
  export type UserUpsertArgs = {
    /**
     * Select specific fields to fetch from the User
     * 
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserInclude | null
    /**
     * The filter to search for the User to update in case it exists.
     * 
    **/
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     * 
    **/
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }


  /**
   * User delete
   */
  export type UserDeleteArgs = {
    /**
     * Select specific fields to fetch from the User
     * 
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserInclude | null
    /**
     * Filter which User to delete.
     * 
    **/
    where: UserWhereUniqueInput
  }


  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs = {
    /**
     * Filter which Users to delete
     * 
    **/
    where?: UserWhereInput
  }


  /**
   * User: findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs = UserFindUniqueArgsBase
      

  /**
   * User: findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs = UserFindFirstArgsBase
      

  /**
   * User without action
   */
  export type UserArgs = {
    /**
     * Select specific fields to fetch from the User
     * 
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserInclude | null
  }



  /**
   * Model Submission
   */


  export type AggregateSubmission = {
    _count: SubmissionCountAggregateOutputType | null
    _min: SubmissionMinAggregateOutputType | null
    _max: SubmissionMaxAggregateOutputType | null
  }

  export type SubmissionMinAggregateOutputType = {
    id: string | null
    runnerId: string | null
    created: Date | null
    game: string | null
    category: string | null
    platform: string | null
    estimate: string | null
    ageRating: SubmissionAgeRatingType | null
    donationIncentive: string | null
    specialReqs: string | null
    race: SubmissionRaceType | null
    racer: string | null
    coop: boolean | null
    video: string | null
    status: SubmissionStatusType | null
    eventId: string | null
    willingBackup: boolean | null
  }

  export type SubmissionMaxAggregateOutputType = {
    id: string | null
    runnerId: string | null
    created: Date | null
    game: string | null
    category: string | null
    platform: string | null
    estimate: string | null
    ageRating: SubmissionAgeRatingType | null
    donationIncentive: string | null
    specialReqs: string | null
    race: SubmissionRaceType | null
    racer: string | null
    coop: boolean | null
    video: string | null
    status: SubmissionStatusType | null
    eventId: string | null
    willingBackup: boolean | null
  }

  export type SubmissionCountAggregateOutputType = {
    id: number
    runnerId: number
    created: number
    game: number
    category: number
    platform: number
    estimate: number
    ageRating: number
    donationIncentive: number
    specialReqs: number
    availability: number
    race: number
    racer: number
    coop: number
    video: number
    status: number
    eventId: number
    willingBackup: number
    _all: number
  }


  export type SubmissionMinAggregateInputType = {
    id?: true
    runnerId?: true
    created?: true
    game?: true
    category?: true
    platform?: true
    estimate?: true
    ageRating?: true
    donationIncentive?: true
    specialReqs?: true
    race?: true
    racer?: true
    coop?: true
    video?: true
    status?: true
    eventId?: true
    willingBackup?: true
  }

  export type SubmissionMaxAggregateInputType = {
    id?: true
    runnerId?: true
    created?: true
    game?: true
    category?: true
    platform?: true
    estimate?: true
    ageRating?: true
    donationIncentive?: true
    specialReqs?: true
    race?: true
    racer?: true
    coop?: true
    video?: true
    status?: true
    eventId?: true
    willingBackup?: true
  }

  export type SubmissionCountAggregateInputType = {
    id?: true
    runnerId?: true
    created?: true
    game?: true
    category?: true
    platform?: true
    estimate?: true
    ageRating?: true
    donationIncentive?: true
    specialReqs?: true
    availability?: true
    race?: true
    racer?: true
    coop?: true
    video?: true
    status?: true
    eventId?: true
    willingBackup?: true
    _all?: true
  }

  export type SubmissionAggregateArgs = {
    /**
     * Filter which Submission to aggregate.
     * 
    **/
    where?: SubmissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Submissions to fetch.
     * 
    **/
    orderBy?: Enumerable<SubmissionOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: SubmissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Submissions from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Submissions.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Submissions
    **/
    _count?: true | SubmissionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SubmissionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SubmissionMaxAggregateInputType
  }

  export type GetSubmissionAggregateType<T extends SubmissionAggregateArgs> = {
        [P in keyof T & keyof AggregateSubmission]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSubmission[P]>
      : GetScalarType<T[P], AggregateSubmission[P]>
  }




  export type SubmissionGroupByArgs = {
    where?: SubmissionWhereInput
    orderBy?: Enumerable<SubmissionOrderByWithAggregationInput>
    by: Array<SubmissionScalarFieldEnum>
    having?: SubmissionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SubmissionCountAggregateInputType | true
    _min?: SubmissionMinAggregateInputType
    _max?: SubmissionMaxAggregateInputType
  }


  export type SubmissionGroupByOutputType = {
    id: string
    runnerId: string | null
    created: Date | null
    game: string
    category: string
    platform: string
    estimate: string
    ageRating: SubmissionAgeRatingType | null
    donationIncentive: string
    specialReqs: string
    availability: JsonValue | null
    race: SubmissionRaceType | null
    racer: string
    coop: boolean
    video: string
    status: SubmissionStatusType | null
    eventId: string | null
    willingBackup: boolean
    _count: SubmissionCountAggregateOutputType | null
    _min: SubmissionMinAggregateOutputType | null
    _max: SubmissionMaxAggregateOutputType | null
  }

  type GetSubmissionGroupByPayload<T extends SubmissionGroupByArgs> = PrismaPromise<
    Array<
      PickArray<SubmissionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SubmissionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SubmissionGroupByOutputType[P]>
            : GetScalarType<T[P], SubmissionGroupByOutputType[P]>
        }
      >
    >


  export type SubmissionSelect = {
    id?: boolean
    runner?: boolean | UserArgs
    runnerId?: boolean
    created?: boolean
    game?: boolean
    category?: boolean
    platform?: boolean
    estimate?: boolean
    ageRating?: boolean
    donationIncentive?: boolean
    specialReqs?: boolean
    availability?: boolean
    race?: boolean
    racer?: boolean
    coop?: boolean
    video?: boolean
    status?: boolean
    event?: boolean | EventArgs
    eventId?: boolean
    willingBackup?: boolean
    from_Run_originalSubmission?: boolean | RunFindManyArgs
    _count?: boolean | SubmissionCountOutputTypeArgs
  }

  export type SubmissionInclude = {
    runner?: boolean | UserArgs
    event?: boolean | EventArgs
    from_Run_originalSubmission?: boolean | RunFindManyArgs
    _count?: boolean | SubmissionCountOutputTypeArgs
  }

  export type SubmissionGetPayload<
    S extends boolean | null | undefined | SubmissionArgs,
    U = keyof S
      > = S extends true
        ? Submission
    : S extends undefined
    ? never
    : S extends SubmissionArgs | SubmissionFindManyArgs
    ?'include' extends U
    ? Submission  & {
    [P in TrueKeys<S['include']>]:
        P extends 'runner' ? UserGetPayload<Exclude<S['include'], undefined | null>[P]> | null :
        P extends 'event' ? EventGetPayload<Exclude<S['include'], undefined | null>[P]> | null :
        P extends 'from_Run_originalSubmission' ? Array < RunGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends '_count' ? SubmissionCountOutputTypeGetPayload<Exclude<S['include'], undefined | null>[P]> :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'runner' ? UserGetPayload<Exclude<S['select'], undefined | null>[P]> | null :
        P extends 'event' ? EventGetPayload<Exclude<S['select'], undefined | null>[P]> | null :
        P extends 'from_Run_originalSubmission' ? Array < RunGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends '_count' ? SubmissionCountOutputTypeGetPayload<Exclude<S['select'], undefined | null>[P]> :  P extends keyof Submission ? Submission[P] : never
  } 
    : Submission
  : Submission


  type SubmissionCountArgs = Merge<
    Omit<SubmissionFindManyArgs, 'select' | 'include'> & {
      select?: SubmissionCountAggregateInputType | true
    }
  >

  export interface SubmissionDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Submission that matches the filter.
     * @param {SubmissionFindUniqueArgs} args - Arguments to find a Submission
     * @example
     * // Get one Submission
     * const submission = await prisma.submission.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends SubmissionFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, SubmissionFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Submission'> extends True ? CheckSelect<T, Prisma__SubmissionClient<Submission>, Prisma__SubmissionClient<SubmissionGetPayload<T>>> : CheckSelect<T, Prisma__SubmissionClient<Submission | null >, Prisma__SubmissionClient<SubmissionGetPayload<T> | null >>

    /**
     * Find the first Submission that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubmissionFindFirstArgs} args - Arguments to find a Submission
     * @example
     * // Get one Submission
     * const submission = await prisma.submission.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends SubmissionFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, SubmissionFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Submission'> extends True ? CheckSelect<T, Prisma__SubmissionClient<Submission>, Prisma__SubmissionClient<SubmissionGetPayload<T>>> : CheckSelect<T, Prisma__SubmissionClient<Submission | null >, Prisma__SubmissionClient<SubmissionGetPayload<T> | null >>

    /**
     * Find zero or more Submissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubmissionFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Submissions
     * const submissions = await prisma.submission.findMany()
     * 
     * // Get first 10 Submissions
     * const submissions = await prisma.submission.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const submissionWithIdOnly = await prisma.submission.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends SubmissionFindManyArgs>(
      args?: SelectSubset<T, SubmissionFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<Submission>>, PrismaPromise<Array<SubmissionGetPayload<T>>>>

    /**
     * Create a Submission.
     * @param {SubmissionCreateArgs} args - Arguments to create a Submission.
     * @example
     * // Create one Submission
     * const Submission = await prisma.submission.create({
     *   data: {
     *     // ... data to create a Submission
     *   }
     * })
     * 
    **/
    create<T extends SubmissionCreateArgs>(
      args: SelectSubset<T, SubmissionCreateArgs>
    ): CheckSelect<T, Prisma__SubmissionClient<Submission>, Prisma__SubmissionClient<SubmissionGetPayload<T>>>

    /**
     * Create many Submissions.
     *     @param {SubmissionCreateManyArgs} args - Arguments to create many Submissions.
     *     @example
     *     // Create many Submissions
     *     const submission = await prisma.submission.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends SubmissionCreateManyArgs>(
      args?: SelectSubset<T, SubmissionCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Submission.
     * @param {SubmissionDeleteArgs} args - Arguments to delete one Submission.
     * @example
     * // Delete one Submission
     * const Submission = await prisma.submission.delete({
     *   where: {
     *     // ... filter to delete one Submission
     *   }
     * })
     * 
    **/
    delete<T extends SubmissionDeleteArgs>(
      args: SelectSubset<T, SubmissionDeleteArgs>
    ): CheckSelect<T, Prisma__SubmissionClient<Submission>, Prisma__SubmissionClient<SubmissionGetPayload<T>>>

    /**
     * Update one Submission.
     * @param {SubmissionUpdateArgs} args - Arguments to update one Submission.
     * @example
     * // Update one Submission
     * const submission = await prisma.submission.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends SubmissionUpdateArgs>(
      args: SelectSubset<T, SubmissionUpdateArgs>
    ): CheckSelect<T, Prisma__SubmissionClient<Submission>, Prisma__SubmissionClient<SubmissionGetPayload<T>>>

    /**
     * Delete zero or more Submissions.
     * @param {SubmissionDeleteManyArgs} args - Arguments to filter Submissions to delete.
     * @example
     * // Delete a few Submissions
     * const { count } = await prisma.submission.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends SubmissionDeleteManyArgs>(
      args?: SelectSubset<T, SubmissionDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Submissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubmissionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Submissions
     * const submission = await prisma.submission.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends SubmissionUpdateManyArgs>(
      args: SelectSubset<T, SubmissionUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Submission.
     * @param {SubmissionUpsertArgs} args - Arguments to update or create a Submission.
     * @example
     * // Update or create a Submission
     * const submission = await prisma.submission.upsert({
     *   create: {
     *     // ... data to create a Submission
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Submission we want to update
     *   }
     * })
    **/
    upsert<T extends SubmissionUpsertArgs>(
      args: SelectSubset<T, SubmissionUpsertArgs>
    ): CheckSelect<T, Prisma__SubmissionClient<Submission>, Prisma__SubmissionClient<SubmissionGetPayload<T>>>

    /**
     * Find one Submission that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {SubmissionFindUniqueOrThrowArgs} args - Arguments to find a Submission
     * @example
     * // Get one Submission
     * const submission = await prisma.submission.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends SubmissionFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, SubmissionFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__SubmissionClient<Submission>, Prisma__SubmissionClient<SubmissionGetPayload<T>>>

    /**
     * Find the first Submission that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubmissionFindFirstOrThrowArgs} args - Arguments to find a Submission
     * @example
     * // Get one Submission
     * const submission = await prisma.submission.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends SubmissionFindFirstOrThrowArgs>(
      args?: SelectSubset<T, SubmissionFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__SubmissionClient<Submission>, Prisma__SubmissionClient<SubmissionGetPayload<T>>>

    /**
     * Count the number of Submissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubmissionCountArgs} args - Arguments to filter Submissions to count.
     * @example
     * // Count the number of Submissions
     * const count = await prisma.submission.count({
     *   where: {
     *     // ... the filter for the Submissions we want to count
     *   }
     * })
    **/
    count<T extends SubmissionCountArgs>(
      args?: Subset<T, SubmissionCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SubmissionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Submission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubmissionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SubmissionAggregateArgs>(args: Subset<T, SubmissionAggregateArgs>): PrismaPromise<GetSubmissionAggregateType<T>>

    /**
     * Group by Submission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubmissionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SubmissionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SubmissionGroupByArgs['orderBy'] }
        : { orderBy?: SubmissionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SubmissionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSubmissionGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Submission.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__SubmissionClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    runner<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    event<T extends EventArgs = {}>(args?: Subset<T, EventArgs>): CheckSelect<T, Prisma__EventClient<Event | null >, Prisma__EventClient<EventGetPayload<T> | null >>;

    from_Run_originalSubmission<T extends RunFindManyArgs = {}>(args?: Subset<T, RunFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Run>>, PrismaPromise<Array<RunGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Submission base type for findUnique actions
   */
  export type SubmissionFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Submission
     * 
    **/
    select?: SubmissionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: SubmissionInclude | null
    /**
     * Filter, which Submission to fetch.
     * 
    **/
    where: SubmissionWhereUniqueInput
  }

  /**
   * Submission: findUnique
   */
  export interface SubmissionFindUniqueArgs extends SubmissionFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Submission base type for findFirst actions
   */
  export type SubmissionFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Submission
     * 
    **/
    select?: SubmissionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: SubmissionInclude | null
    /**
     * Filter, which Submission to fetch.
     * 
    **/
    where?: SubmissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Submissions to fetch.
     * 
    **/
    orderBy?: Enumerable<SubmissionOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Submissions.
     * 
    **/
    cursor?: SubmissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Submissions from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Submissions.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Submissions.
     * 
    **/
    distinct?: Enumerable<SubmissionScalarFieldEnum>
  }

  /**
   * Submission: findFirst
   */
  export interface SubmissionFindFirstArgs extends SubmissionFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Submission findMany
   */
  export type SubmissionFindManyArgs = {
    /**
     * Select specific fields to fetch from the Submission
     * 
    **/
    select?: SubmissionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: SubmissionInclude | null
    /**
     * Filter, which Submissions to fetch.
     * 
    **/
    where?: SubmissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Submissions to fetch.
     * 
    **/
    orderBy?: Enumerable<SubmissionOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Submissions.
     * 
    **/
    cursor?: SubmissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Submissions from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Submissions.
     * 
    **/
    skip?: number
    distinct?: Enumerable<SubmissionScalarFieldEnum>
  }


  /**
   * Submission create
   */
  export type SubmissionCreateArgs = {
    /**
     * Select specific fields to fetch from the Submission
     * 
    **/
    select?: SubmissionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: SubmissionInclude | null
    /**
     * The data needed to create a Submission.
     * 
    **/
    data: XOR<SubmissionCreateInput, SubmissionUncheckedCreateInput>
  }


  /**
   * Submission createMany
   */
  export type SubmissionCreateManyArgs = {
    /**
     * The data used to create many Submissions.
     * 
    **/
    data: Enumerable<SubmissionCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Submission update
   */
  export type SubmissionUpdateArgs = {
    /**
     * Select specific fields to fetch from the Submission
     * 
    **/
    select?: SubmissionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: SubmissionInclude | null
    /**
     * The data needed to update a Submission.
     * 
    **/
    data: XOR<SubmissionUpdateInput, SubmissionUncheckedUpdateInput>
    /**
     * Choose, which Submission to update.
     * 
    **/
    where: SubmissionWhereUniqueInput
  }


  /**
   * Submission updateMany
   */
  export type SubmissionUpdateManyArgs = {
    /**
     * The data used to update Submissions.
     * 
    **/
    data: XOR<SubmissionUpdateManyMutationInput, SubmissionUncheckedUpdateManyInput>
    /**
     * Filter which Submissions to update
     * 
    **/
    where?: SubmissionWhereInput
  }


  /**
   * Submission upsert
   */
  export type SubmissionUpsertArgs = {
    /**
     * Select specific fields to fetch from the Submission
     * 
    **/
    select?: SubmissionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: SubmissionInclude | null
    /**
     * The filter to search for the Submission to update in case it exists.
     * 
    **/
    where: SubmissionWhereUniqueInput
    /**
     * In case the Submission found by the `where` argument doesn't exist, create a new Submission with this data.
     * 
    **/
    create: XOR<SubmissionCreateInput, SubmissionUncheckedCreateInput>
    /**
     * In case the Submission was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<SubmissionUpdateInput, SubmissionUncheckedUpdateInput>
  }


  /**
   * Submission delete
   */
  export type SubmissionDeleteArgs = {
    /**
     * Select specific fields to fetch from the Submission
     * 
    **/
    select?: SubmissionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: SubmissionInclude | null
    /**
     * Filter which Submission to delete.
     * 
    **/
    where: SubmissionWhereUniqueInput
  }


  /**
   * Submission deleteMany
   */
  export type SubmissionDeleteManyArgs = {
    /**
     * Filter which Submissions to delete
     * 
    **/
    where?: SubmissionWhereInput
  }


  /**
   * Submission: findUniqueOrThrow
   */
  export type SubmissionFindUniqueOrThrowArgs = SubmissionFindUniqueArgsBase
      

  /**
   * Submission: findFirstOrThrow
   */
  export type SubmissionFindFirstOrThrowArgs = SubmissionFindFirstArgsBase
      

  /**
   * Submission without action
   */
  export type SubmissionArgs = {
    /**
     * Select specific fields to fetch from the Submission
     * 
    **/
    select?: SubmissionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: SubmissionInclude | null
  }



  /**
   * Model Event
   */


  export type AggregateEvent = {
    _count: EventCountAggregateOutputType | null
    _avg: EventAvgAggregateOutputType | null
    _sum: EventSumAggregateOutputType | null
    _min: EventMinAggregateOutputType | null
    _max: EventMaxAggregateOutputType | null
  }

  export type EventAvgAggregateOutputType = {
    raised: number | null
    logo_filesize: number | null
    logo_width: number | null
    logo_height: number | null
    darkModeLogo_filesize: number | null
    darkModeLogo_width: number | null
    darkModeLogo_height: number | null
    heroImage_filesize: number | null
    heroImage_width: number | null
    heroImage_height: number | null
    ogImage_filesize: number | null
    ogImage_width: number | null
    ogImage_height: number | null
    postEventBackground_filesize: number | null
    postEventBackground_width: number | null
    postEventBackground_height: number | null
    pressKit_filesize: number | null
  }

  export type EventSumAggregateOutputType = {
    raised: number | null
    logo_filesize: number | null
    logo_width: number | null
    logo_height: number | null
    darkModeLogo_filesize: number | null
    darkModeLogo_width: number | null
    darkModeLogo_height: number | null
    heroImage_filesize: number | null
    heroImage_width: number | null
    heroImage_height: number | null
    ogImage_filesize: number | null
    ogImage_width: number | null
    ogImage_height: number | null
    postEventBackground_filesize: number | null
    postEventBackground_width: number | null
    postEventBackground_height: number | null
    pressKit_filesize: number | null
  }

  export type EventMinAggregateOutputType = {
    id: string | null
    name: string | null
    shortname: string | null
    published: boolean | null
    acceptingSubmissions: boolean | null
    acceptingTickets: boolean | null
    scheduleReleased: boolean | null
    acceptingVolunteers: boolean | null
    acceptingBackups: boolean | null
    acceptingShirts: boolean | null
    eventTimezone: string | null
    startDate: Date | null
    endDate: Date | null
    raised: number | null
    logo_filesize: number | null
    logo_extension: string | null
    logo_width: number | null
    logo_height: number | null
    logo_id: string | null
    darkModeLogo_filesize: number | null
    darkModeLogo_extension: string | null
    darkModeLogo_width: number | null
    darkModeLogo_height: number | null
    darkModeLogo_id: string | null
    heroImage_filesize: number | null
    heroImage_extension: string | null
    heroImage_width: number | null
    heroImage_height: number | null
    heroImage_id: string | null
    ogImage_filesize: number | null
    ogImage_extension: string | null
    ogImage_width: number | null
    ogImage_height: number | null
    ogImage_id: string | null
    postEventBackground_filesize: number | null
    postEventBackground_extension: string | null
    postEventBackground_width: number | null
    postEventBackground_height: number | null
    postEventBackground_id: string | null
    pressKit_filename: string | null
    pressKit_filesize: number | null
  }

  export type EventMaxAggregateOutputType = {
    id: string | null
    name: string | null
    shortname: string | null
    published: boolean | null
    acceptingSubmissions: boolean | null
    acceptingTickets: boolean | null
    scheduleReleased: boolean | null
    acceptingVolunteers: boolean | null
    acceptingBackups: boolean | null
    acceptingShirts: boolean | null
    eventTimezone: string | null
    startDate: Date | null
    endDate: Date | null
    raised: number | null
    logo_filesize: number | null
    logo_extension: string | null
    logo_width: number | null
    logo_height: number | null
    logo_id: string | null
    darkModeLogo_filesize: number | null
    darkModeLogo_extension: string | null
    darkModeLogo_width: number | null
    darkModeLogo_height: number | null
    darkModeLogo_id: string | null
    heroImage_filesize: number | null
    heroImage_extension: string | null
    heroImage_width: number | null
    heroImage_height: number | null
    heroImage_id: string | null
    ogImage_filesize: number | null
    ogImage_extension: string | null
    ogImage_width: number | null
    ogImage_height: number | null
    ogImage_id: string | null
    postEventBackground_filesize: number | null
    postEventBackground_extension: string | null
    postEventBackground_width: number | null
    postEventBackground_height: number | null
    postEventBackground_id: string | null
    pressKit_filename: string | null
    pressKit_filesize: number | null
  }

  export type EventCountAggregateOutputType = {
    id: number
    name: number
    shortname: number
    published: number
    acceptingSubmissions: number
    acceptingTickets: number
    scheduleReleased: number
    acceptingVolunteers: number
    acceptingBackups: number
    acceptingShirts: number
    eventTimezone: number
    startDate: number
    endDate: number
    raised: number
    postEventPage: number
    logo_filesize: number
    logo_extension: number
    logo_width: number
    logo_height: number
    logo_id: number
    darkModeLogo_filesize: number
    darkModeLogo_extension: number
    darkModeLogo_width: number
    darkModeLogo_height: number
    darkModeLogo_id: number
    heroImage_filesize: number
    heroImage_extension: number
    heroImage_width: number
    heroImage_height: number
    heroImage_id: number
    ogImage_filesize: number
    ogImage_extension: number
    ogImage_width: number
    ogImage_height: number
    ogImage_id: number
    postEventBackground_filesize: number
    postEventBackground_extension: number
    postEventBackground_width: number
    postEventBackground_height: number
    postEventBackground_id: number
    pressKit_filename: number
    pressKit_filesize: number
    submissionInstructions: number
    eventPage: number
    _all: number
  }


  export type EventAvgAggregateInputType = {
    raised?: true
    logo_filesize?: true
    logo_width?: true
    logo_height?: true
    darkModeLogo_filesize?: true
    darkModeLogo_width?: true
    darkModeLogo_height?: true
    heroImage_filesize?: true
    heroImage_width?: true
    heroImage_height?: true
    ogImage_filesize?: true
    ogImage_width?: true
    ogImage_height?: true
    postEventBackground_filesize?: true
    postEventBackground_width?: true
    postEventBackground_height?: true
    pressKit_filesize?: true
  }

  export type EventSumAggregateInputType = {
    raised?: true
    logo_filesize?: true
    logo_width?: true
    logo_height?: true
    darkModeLogo_filesize?: true
    darkModeLogo_width?: true
    darkModeLogo_height?: true
    heroImage_filesize?: true
    heroImage_width?: true
    heroImage_height?: true
    ogImage_filesize?: true
    ogImage_width?: true
    ogImage_height?: true
    postEventBackground_filesize?: true
    postEventBackground_width?: true
    postEventBackground_height?: true
    pressKit_filesize?: true
  }

  export type EventMinAggregateInputType = {
    id?: true
    name?: true
    shortname?: true
    published?: true
    acceptingSubmissions?: true
    acceptingTickets?: true
    scheduleReleased?: true
    acceptingVolunteers?: true
    acceptingBackups?: true
    acceptingShirts?: true
    eventTimezone?: true
    startDate?: true
    endDate?: true
    raised?: true
    logo_filesize?: true
    logo_extension?: true
    logo_width?: true
    logo_height?: true
    logo_id?: true
    darkModeLogo_filesize?: true
    darkModeLogo_extension?: true
    darkModeLogo_width?: true
    darkModeLogo_height?: true
    darkModeLogo_id?: true
    heroImage_filesize?: true
    heroImage_extension?: true
    heroImage_width?: true
    heroImage_height?: true
    heroImage_id?: true
    ogImage_filesize?: true
    ogImage_extension?: true
    ogImage_width?: true
    ogImage_height?: true
    ogImage_id?: true
    postEventBackground_filesize?: true
    postEventBackground_extension?: true
    postEventBackground_width?: true
    postEventBackground_height?: true
    postEventBackground_id?: true
    pressKit_filename?: true
    pressKit_filesize?: true
  }

  export type EventMaxAggregateInputType = {
    id?: true
    name?: true
    shortname?: true
    published?: true
    acceptingSubmissions?: true
    acceptingTickets?: true
    scheduleReleased?: true
    acceptingVolunteers?: true
    acceptingBackups?: true
    acceptingShirts?: true
    eventTimezone?: true
    startDate?: true
    endDate?: true
    raised?: true
    logo_filesize?: true
    logo_extension?: true
    logo_width?: true
    logo_height?: true
    logo_id?: true
    darkModeLogo_filesize?: true
    darkModeLogo_extension?: true
    darkModeLogo_width?: true
    darkModeLogo_height?: true
    darkModeLogo_id?: true
    heroImage_filesize?: true
    heroImage_extension?: true
    heroImage_width?: true
    heroImage_height?: true
    heroImage_id?: true
    ogImage_filesize?: true
    ogImage_extension?: true
    ogImage_width?: true
    ogImage_height?: true
    ogImage_id?: true
    postEventBackground_filesize?: true
    postEventBackground_extension?: true
    postEventBackground_width?: true
    postEventBackground_height?: true
    postEventBackground_id?: true
    pressKit_filename?: true
    pressKit_filesize?: true
  }

  export type EventCountAggregateInputType = {
    id?: true
    name?: true
    shortname?: true
    published?: true
    acceptingSubmissions?: true
    acceptingTickets?: true
    scheduleReleased?: true
    acceptingVolunteers?: true
    acceptingBackups?: true
    acceptingShirts?: true
    eventTimezone?: true
    startDate?: true
    endDate?: true
    raised?: true
    postEventPage?: true
    logo_filesize?: true
    logo_extension?: true
    logo_width?: true
    logo_height?: true
    logo_id?: true
    darkModeLogo_filesize?: true
    darkModeLogo_extension?: true
    darkModeLogo_width?: true
    darkModeLogo_height?: true
    darkModeLogo_id?: true
    heroImage_filesize?: true
    heroImage_extension?: true
    heroImage_width?: true
    heroImage_height?: true
    heroImage_id?: true
    ogImage_filesize?: true
    ogImage_extension?: true
    ogImage_width?: true
    ogImage_height?: true
    ogImage_id?: true
    postEventBackground_filesize?: true
    postEventBackground_extension?: true
    postEventBackground_width?: true
    postEventBackground_height?: true
    postEventBackground_id?: true
    pressKit_filename?: true
    pressKit_filesize?: true
    submissionInstructions?: true
    eventPage?: true
    _all?: true
  }

  export type EventAggregateArgs = {
    /**
     * Filter which Event to aggregate.
     * 
    **/
    where?: EventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Events to fetch.
     * 
    **/
    orderBy?: Enumerable<EventOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: EventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Events from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Events.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Events
    **/
    _count?: true | EventCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EventAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EventSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EventMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EventMaxAggregateInputType
  }

  export type GetEventAggregateType<T extends EventAggregateArgs> = {
        [P in keyof T & keyof AggregateEvent]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEvent[P]>
      : GetScalarType<T[P], AggregateEvent[P]>
  }




  export type EventGroupByArgs = {
    where?: EventWhereInput
    orderBy?: Enumerable<EventOrderByWithAggregationInput>
    by: Array<EventScalarFieldEnum>
    having?: EventScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EventCountAggregateInputType | true
    _avg?: EventAvgAggregateInputType
    _sum?: EventSumAggregateInputType
    _min?: EventMinAggregateInputType
    _max?: EventMaxAggregateInputType
  }


  export type EventGroupByOutputType = {
    id: string
    name: string
    shortname: string
    published: boolean
    acceptingSubmissions: boolean
    acceptingTickets: boolean
    scheduleReleased: boolean
    acceptingVolunteers: boolean
    acceptingBackups: boolean
    acceptingShirts: boolean
    eventTimezone: string
    startDate: Date | null
    endDate: Date | null
    raised: number | null
    postEventPage: JsonValue
    logo_filesize: number | null
    logo_extension: string | null
    logo_width: number | null
    logo_height: number | null
    logo_id: string | null
    darkModeLogo_filesize: number | null
    darkModeLogo_extension: string | null
    darkModeLogo_width: number | null
    darkModeLogo_height: number | null
    darkModeLogo_id: string | null
    heroImage_filesize: number | null
    heroImage_extension: string | null
    heroImage_width: number | null
    heroImage_height: number | null
    heroImage_id: string | null
    ogImage_filesize: number | null
    ogImage_extension: string | null
    ogImage_width: number | null
    ogImage_height: number | null
    ogImage_id: string | null
    postEventBackground_filesize: number | null
    postEventBackground_extension: string | null
    postEventBackground_width: number | null
    postEventBackground_height: number | null
    postEventBackground_id: string | null
    pressKit_filename: string | null
    pressKit_filesize: number | null
    submissionInstructions: JsonValue
    eventPage: JsonValue
    _count: EventCountAggregateOutputType | null
    _avg: EventAvgAggregateOutputType | null
    _sum: EventSumAggregateOutputType | null
    _min: EventMinAggregateOutputType | null
    _max: EventMaxAggregateOutputType | null
  }

  type GetEventGroupByPayload<T extends EventGroupByArgs> = PrismaPromise<
    Array<
      PickArray<EventGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EventGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EventGroupByOutputType[P]>
            : GetScalarType<T[P], EventGroupByOutputType[P]>
        }
      >
    >


  export type EventSelect = {
    id?: boolean
    name?: boolean
    shortname?: boolean
    published?: boolean
    acceptingSubmissions?: boolean
    acceptingTickets?: boolean
    scheduleReleased?: boolean
    acceptingVolunteers?: boolean
    acceptingBackups?: boolean
    acceptingShirts?: boolean
    eventTimezone?: boolean
    startDate?: boolean
    endDate?: boolean
    raised?: boolean
    postEventPage?: boolean
    submissions?: boolean | SubmissionFindManyArgs
    runs?: boolean | RunFindManyArgs
    tickets?: boolean | TicketFindManyArgs
    volunteer?: boolean | VolunteerFindManyArgs
    donationIncentives?: boolean | IncentiveFindManyArgs
    logo_filesize?: boolean
    logo_extension?: boolean
    logo_width?: boolean
    logo_height?: boolean
    logo_id?: boolean
    darkModeLogo_filesize?: boolean
    darkModeLogo_extension?: boolean
    darkModeLogo_width?: boolean
    darkModeLogo_height?: boolean
    darkModeLogo_id?: boolean
    heroImage_filesize?: boolean
    heroImage_extension?: boolean
    heroImage_width?: boolean
    heroImage_height?: boolean
    heroImage_id?: boolean
    ogImage_filesize?: boolean
    ogImage_extension?: boolean
    ogImage_width?: boolean
    ogImage_height?: boolean
    ogImage_id?: boolean
    postEventBackground_filesize?: boolean
    postEventBackground_extension?: boolean
    postEventBackground_width?: boolean
    postEventBackground_height?: boolean
    postEventBackground_id?: boolean
    pressKit_filename?: boolean
    pressKit_filesize?: boolean
    submissionInstructions?: boolean
    eventPage?: boolean
    from_Post_event?: boolean | PostFindManyArgs
    from_Role_event?: boolean | RoleFindManyArgs
    _count?: boolean | EventCountOutputTypeArgs
  }

  export type EventInclude = {
    submissions?: boolean | SubmissionFindManyArgs
    runs?: boolean | RunFindManyArgs
    tickets?: boolean | TicketFindManyArgs
    volunteer?: boolean | VolunteerFindManyArgs
    donationIncentives?: boolean | IncentiveFindManyArgs
    from_Post_event?: boolean | PostFindManyArgs
    from_Role_event?: boolean | RoleFindManyArgs
    _count?: boolean | EventCountOutputTypeArgs
  }

  export type EventGetPayload<
    S extends boolean | null | undefined | EventArgs,
    U = keyof S
      > = S extends true
        ? Event
    : S extends undefined
    ? never
    : S extends EventArgs | EventFindManyArgs
    ?'include' extends U
    ? Event  & {
    [P in TrueKeys<S['include']>]:
        P extends 'submissions' ? Array < SubmissionGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'runs' ? Array < RunGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'tickets' ? Array < TicketGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'volunteer' ? Array < VolunteerGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'donationIncentives' ? Array < IncentiveGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'from_Post_event' ? Array < PostGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'from_Role_event' ? Array < RoleGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends '_count' ? EventCountOutputTypeGetPayload<Exclude<S['include'], undefined | null>[P]> :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'submissions' ? Array < SubmissionGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'runs' ? Array < RunGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'tickets' ? Array < TicketGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'volunteer' ? Array < VolunteerGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'donationIncentives' ? Array < IncentiveGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'from_Post_event' ? Array < PostGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'from_Role_event' ? Array < RoleGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends '_count' ? EventCountOutputTypeGetPayload<Exclude<S['select'], undefined | null>[P]> :  P extends keyof Event ? Event[P] : never
  } 
    : Event
  : Event


  type EventCountArgs = Merge<
    Omit<EventFindManyArgs, 'select' | 'include'> & {
      select?: EventCountAggregateInputType | true
    }
  >

  export interface EventDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Event that matches the filter.
     * @param {EventFindUniqueArgs} args - Arguments to find a Event
     * @example
     * // Get one Event
     * const event = await prisma.event.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends EventFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, EventFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Event'> extends True ? CheckSelect<T, Prisma__EventClient<Event>, Prisma__EventClient<EventGetPayload<T>>> : CheckSelect<T, Prisma__EventClient<Event | null >, Prisma__EventClient<EventGetPayload<T> | null >>

    /**
     * Find the first Event that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventFindFirstArgs} args - Arguments to find a Event
     * @example
     * // Get one Event
     * const event = await prisma.event.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends EventFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, EventFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Event'> extends True ? CheckSelect<T, Prisma__EventClient<Event>, Prisma__EventClient<EventGetPayload<T>>> : CheckSelect<T, Prisma__EventClient<Event | null >, Prisma__EventClient<EventGetPayload<T> | null >>

    /**
     * Find zero or more Events that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Events
     * const events = await prisma.event.findMany()
     * 
     * // Get first 10 Events
     * const events = await prisma.event.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const eventWithIdOnly = await prisma.event.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends EventFindManyArgs>(
      args?: SelectSubset<T, EventFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<Event>>, PrismaPromise<Array<EventGetPayload<T>>>>

    /**
     * Create a Event.
     * @param {EventCreateArgs} args - Arguments to create a Event.
     * @example
     * // Create one Event
     * const Event = await prisma.event.create({
     *   data: {
     *     // ... data to create a Event
     *   }
     * })
     * 
    **/
    create<T extends EventCreateArgs>(
      args: SelectSubset<T, EventCreateArgs>
    ): CheckSelect<T, Prisma__EventClient<Event>, Prisma__EventClient<EventGetPayload<T>>>

    /**
     * Create many Events.
     *     @param {EventCreateManyArgs} args - Arguments to create many Events.
     *     @example
     *     // Create many Events
     *     const event = await prisma.event.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends EventCreateManyArgs>(
      args?: SelectSubset<T, EventCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Event.
     * @param {EventDeleteArgs} args - Arguments to delete one Event.
     * @example
     * // Delete one Event
     * const Event = await prisma.event.delete({
     *   where: {
     *     // ... filter to delete one Event
     *   }
     * })
     * 
    **/
    delete<T extends EventDeleteArgs>(
      args: SelectSubset<T, EventDeleteArgs>
    ): CheckSelect<T, Prisma__EventClient<Event>, Prisma__EventClient<EventGetPayload<T>>>

    /**
     * Update one Event.
     * @param {EventUpdateArgs} args - Arguments to update one Event.
     * @example
     * // Update one Event
     * const event = await prisma.event.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends EventUpdateArgs>(
      args: SelectSubset<T, EventUpdateArgs>
    ): CheckSelect<T, Prisma__EventClient<Event>, Prisma__EventClient<EventGetPayload<T>>>

    /**
     * Delete zero or more Events.
     * @param {EventDeleteManyArgs} args - Arguments to filter Events to delete.
     * @example
     * // Delete a few Events
     * const { count } = await prisma.event.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends EventDeleteManyArgs>(
      args?: SelectSubset<T, EventDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Events
     * const event = await prisma.event.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends EventUpdateManyArgs>(
      args: SelectSubset<T, EventUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Event.
     * @param {EventUpsertArgs} args - Arguments to update or create a Event.
     * @example
     * // Update or create a Event
     * const event = await prisma.event.upsert({
     *   create: {
     *     // ... data to create a Event
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Event we want to update
     *   }
     * })
    **/
    upsert<T extends EventUpsertArgs>(
      args: SelectSubset<T, EventUpsertArgs>
    ): CheckSelect<T, Prisma__EventClient<Event>, Prisma__EventClient<EventGetPayload<T>>>

    /**
     * Find one Event that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {EventFindUniqueOrThrowArgs} args - Arguments to find a Event
     * @example
     * // Get one Event
     * const event = await prisma.event.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends EventFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, EventFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__EventClient<Event>, Prisma__EventClient<EventGetPayload<T>>>

    /**
     * Find the first Event that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventFindFirstOrThrowArgs} args - Arguments to find a Event
     * @example
     * // Get one Event
     * const event = await prisma.event.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends EventFindFirstOrThrowArgs>(
      args?: SelectSubset<T, EventFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__EventClient<Event>, Prisma__EventClient<EventGetPayload<T>>>

    /**
     * Count the number of Events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventCountArgs} args - Arguments to filter Events to count.
     * @example
     * // Count the number of Events
     * const count = await prisma.event.count({
     *   where: {
     *     // ... the filter for the Events we want to count
     *   }
     * })
    **/
    count<T extends EventCountArgs>(
      args?: Subset<T, EventCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EventCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Event.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EventAggregateArgs>(args: Subset<T, EventAggregateArgs>): PrismaPromise<GetEventAggregateType<T>>

    /**
     * Group by Event.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EventGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EventGroupByArgs['orderBy'] }
        : { orderBy?: EventGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EventGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEventGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Event.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__EventClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    submissions<T extends SubmissionFindManyArgs = {}>(args?: Subset<T, SubmissionFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Submission>>, PrismaPromise<Array<SubmissionGetPayload<T>>>>;

    runs<T extends RunFindManyArgs = {}>(args?: Subset<T, RunFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Run>>, PrismaPromise<Array<RunGetPayload<T>>>>;

    tickets<T extends TicketFindManyArgs = {}>(args?: Subset<T, TicketFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Ticket>>, PrismaPromise<Array<TicketGetPayload<T>>>>;

    volunteer<T extends VolunteerFindManyArgs = {}>(args?: Subset<T, VolunteerFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Volunteer>>, PrismaPromise<Array<VolunteerGetPayload<T>>>>;

    donationIncentives<T extends IncentiveFindManyArgs = {}>(args?: Subset<T, IncentiveFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Incentive>>, PrismaPromise<Array<IncentiveGetPayload<T>>>>;

    from_Post_event<T extends PostFindManyArgs = {}>(args?: Subset<T, PostFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Post>>, PrismaPromise<Array<PostGetPayload<T>>>>;

    from_Role_event<T extends RoleFindManyArgs = {}>(args?: Subset<T, RoleFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Role>>, PrismaPromise<Array<RoleGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Event base type for findUnique actions
   */
  export type EventFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Event
     * 
    **/
    select?: EventSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EventInclude | null
    /**
     * Filter, which Event to fetch.
     * 
    **/
    where: EventWhereUniqueInput
  }

  /**
   * Event: findUnique
   */
  export interface EventFindUniqueArgs extends EventFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Event base type for findFirst actions
   */
  export type EventFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Event
     * 
    **/
    select?: EventSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EventInclude | null
    /**
     * Filter, which Event to fetch.
     * 
    **/
    where?: EventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Events to fetch.
     * 
    **/
    orderBy?: Enumerable<EventOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Events.
     * 
    **/
    cursor?: EventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Events from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Events.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Events.
     * 
    **/
    distinct?: Enumerable<EventScalarFieldEnum>
  }

  /**
   * Event: findFirst
   */
  export interface EventFindFirstArgs extends EventFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Event findMany
   */
  export type EventFindManyArgs = {
    /**
     * Select specific fields to fetch from the Event
     * 
    **/
    select?: EventSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EventInclude | null
    /**
     * Filter, which Events to fetch.
     * 
    **/
    where?: EventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Events to fetch.
     * 
    **/
    orderBy?: Enumerable<EventOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Events.
     * 
    **/
    cursor?: EventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Events from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Events.
     * 
    **/
    skip?: number
    distinct?: Enumerable<EventScalarFieldEnum>
  }


  /**
   * Event create
   */
  export type EventCreateArgs = {
    /**
     * Select specific fields to fetch from the Event
     * 
    **/
    select?: EventSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EventInclude | null
    /**
     * The data needed to create a Event.
     * 
    **/
    data: XOR<EventCreateInput, EventUncheckedCreateInput>
  }


  /**
   * Event createMany
   */
  export type EventCreateManyArgs = {
    /**
     * The data used to create many Events.
     * 
    **/
    data: Enumerable<EventCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Event update
   */
  export type EventUpdateArgs = {
    /**
     * Select specific fields to fetch from the Event
     * 
    **/
    select?: EventSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EventInclude | null
    /**
     * The data needed to update a Event.
     * 
    **/
    data: XOR<EventUpdateInput, EventUncheckedUpdateInput>
    /**
     * Choose, which Event to update.
     * 
    **/
    where: EventWhereUniqueInput
  }


  /**
   * Event updateMany
   */
  export type EventUpdateManyArgs = {
    /**
     * The data used to update Events.
     * 
    **/
    data: XOR<EventUpdateManyMutationInput, EventUncheckedUpdateManyInput>
    /**
     * Filter which Events to update
     * 
    **/
    where?: EventWhereInput
  }


  /**
   * Event upsert
   */
  export type EventUpsertArgs = {
    /**
     * Select specific fields to fetch from the Event
     * 
    **/
    select?: EventSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EventInclude | null
    /**
     * The filter to search for the Event to update in case it exists.
     * 
    **/
    where: EventWhereUniqueInput
    /**
     * In case the Event found by the `where` argument doesn't exist, create a new Event with this data.
     * 
    **/
    create: XOR<EventCreateInput, EventUncheckedCreateInput>
    /**
     * In case the Event was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<EventUpdateInput, EventUncheckedUpdateInput>
  }


  /**
   * Event delete
   */
  export type EventDeleteArgs = {
    /**
     * Select specific fields to fetch from the Event
     * 
    **/
    select?: EventSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EventInclude | null
    /**
     * Filter which Event to delete.
     * 
    **/
    where: EventWhereUniqueInput
  }


  /**
   * Event deleteMany
   */
  export type EventDeleteManyArgs = {
    /**
     * Filter which Events to delete
     * 
    **/
    where?: EventWhereInput
  }


  /**
   * Event: findUniqueOrThrow
   */
  export type EventFindUniqueOrThrowArgs = EventFindUniqueArgsBase
      

  /**
   * Event: findFirstOrThrow
   */
  export type EventFindFirstOrThrowArgs = EventFindFirstArgsBase
      

  /**
   * Event without action
   */
  export type EventArgs = {
    /**
     * Select specific fields to fetch from the Event
     * 
    **/
    select?: EventSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EventInclude | null
  }



  /**
   * Model Role
   */


  export type AggregateRole = {
    _count: RoleCountAggregateOutputType | null
    _min: RoleMinAggregateOutputType | null
    _max: RoleMaxAggregateOutputType | null
  }

  export type RoleMinAggregateOutputType = {
    id: string | null
    name: string | null
    admin: boolean | null
    canManageContent: boolean | null
    canManageUsers: boolean | null
    runner: boolean | null
    volunteer: boolean | null
    eventId: string | null
    show: boolean | null
    colour: string | null
    textColour: RoleTextColourType | null
  }

  export type RoleMaxAggregateOutputType = {
    id: string | null
    name: string | null
    admin: boolean | null
    canManageContent: boolean | null
    canManageUsers: boolean | null
    runner: boolean | null
    volunteer: boolean | null
    eventId: string | null
    show: boolean | null
    colour: string | null
    textColour: RoleTextColourType | null
  }

  export type RoleCountAggregateOutputType = {
    id: number
    name: number
    admin: number
    canManageContent: number
    canManageUsers: number
    runner: number
    volunteer: number
    eventId: number
    show: number
    colour: number
    textColour: number
    _all: number
  }


  export type RoleMinAggregateInputType = {
    id?: true
    name?: true
    admin?: true
    canManageContent?: true
    canManageUsers?: true
    runner?: true
    volunteer?: true
    eventId?: true
    show?: true
    colour?: true
    textColour?: true
  }

  export type RoleMaxAggregateInputType = {
    id?: true
    name?: true
    admin?: true
    canManageContent?: true
    canManageUsers?: true
    runner?: true
    volunteer?: true
    eventId?: true
    show?: true
    colour?: true
    textColour?: true
  }

  export type RoleCountAggregateInputType = {
    id?: true
    name?: true
    admin?: true
    canManageContent?: true
    canManageUsers?: true
    runner?: true
    volunteer?: true
    eventId?: true
    show?: true
    colour?: true
    textColour?: true
    _all?: true
  }

  export type RoleAggregateArgs = {
    /**
     * Filter which Role to aggregate.
     * 
    **/
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     * 
    **/
    orderBy?: Enumerable<RoleOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Roles
    **/
    _count?: true | RoleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RoleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RoleMaxAggregateInputType
  }

  export type GetRoleAggregateType<T extends RoleAggregateArgs> = {
        [P in keyof T & keyof AggregateRole]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRole[P]>
      : GetScalarType<T[P], AggregateRole[P]>
  }




  export type RoleGroupByArgs = {
    where?: RoleWhereInput
    orderBy?: Enumerable<RoleOrderByWithAggregationInput>
    by: Array<RoleScalarFieldEnum>
    having?: RoleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RoleCountAggregateInputType | true
    _min?: RoleMinAggregateInputType
    _max?: RoleMaxAggregateInputType
  }


  export type RoleGroupByOutputType = {
    id: string
    name: string
    admin: boolean
    canManageContent: boolean
    canManageUsers: boolean
    runner: boolean
    volunteer: boolean
    eventId: string | null
    show: boolean
    colour: string
    textColour: RoleTextColourType | null
    _count: RoleCountAggregateOutputType | null
    _min: RoleMinAggregateOutputType | null
    _max: RoleMaxAggregateOutputType | null
  }

  type GetRoleGroupByPayload<T extends RoleGroupByArgs> = PrismaPromise<
    Array<
      PickArray<RoleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RoleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RoleGroupByOutputType[P]>
            : GetScalarType<T[P], RoleGroupByOutputType[P]>
        }
      >
    >


  export type RoleSelect = {
    id?: boolean
    name?: boolean
    admin?: boolean
    canManageContent?: boolean
    canManageUsers?: boolean
    runner?: boolean
    volunteer?: boolean
    users?: boolean | UserFindManyArgs
    event?: boolean | EventArgs
    eventId?: boolean
    show?: boolean
    colour?: boolean
    textColour?: boolean
    _count?: boolean | RoleCountOutputTypeArgs
  }

  export type RoleInclude = {
    users?: boolean | UserFindManyArgs
    event?: boolean | EventArgs
    _count?: boolean | RoleCountOutputTypeArgs
  }

  export type RoleGetPayload<
    S extends boolean | null | undefined | RoleArgs,
    U = keyof S
      > = S extends true
        ? Role
    : S extends undefined
    ? never
    : S extends RoleArgs | RoleFindManyArgs
    ?'include' extends U
    ? Role  & {
    [P in TrueKeys<S['include']>]:
        P extends 'users' ? Array < UserGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'event' ? EventGetPayload<Exclude<S['include'], undefined | null>[P]> | null :
        P extends '_count' ? RoleCountOutputTypeGetPayload<Exclude<S['include'], undefined | null>[P]> :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'users' ? Array < UserGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'event' ? EventGetPayload<Exclude<S['select'], undefined | null>[P]> | null :
        P extends '_count' ? RoleCountOutputTypeGetPayload<Exclude<S['select'], undefined | null>[P]> :  P extends keyof Role ? Role[P] : never
  } 
    : Role
  : Role


  type RoleCountArgs = Merge<
    Omit<RoleFindManyArgs, 'select' | 'include'> & {
      select?: RoleCountAggregateInputType | true
    }
  >

  export interface RoleDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Role that matches the filter.
     * @param {RoleFindUniqueArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends RoleFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, RoleFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Role'> extends True ? CheckSelect<T, Prisma__RoleClient<Role>, Prisma__RoleClient<RoleGetPayload<T>>> : CheckSelect<T, Prisma__RoleClient<Role | null >, Prisma__RoleClient<RoleGetPayload<T> | null >>

    /**
     * Find the first Role that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindFirstArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends RoleFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, RoleFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Role'> extends True ? CheckSelect<T, Prisma__RoleClient<Role>, Prisma__RoleClient<RoleGetPayload<T>>> : CheckSelect<T, Prisma__RoleClient<Role | null >, Prisma__RoleClient<RoleGetPayload<T> | null >>

    /**
     * Find zero or more Roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Roles
     * const roles = await prisma.role.findMany()
     * 
     * // Get first 10 Roles
     * const roles = await prisma.role.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const roleWithIdOnly = await prisma.role.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends RoleFindManyArgs>(
      args?: SelectSubset<T, RoleFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<Role>>, PrismaPromise<Array<RoleGetPayload<T>>>>

    /**
     * Create a Role.
     * @param {RoleCreateArgs} args - Arguments to create a Role.
     * @example
     * // Create one Role
     * const Role = await prisma.role.create({
     *   data: {
     *     // ... data to create a Role
     *   }
     * })
     * 
    **/
    create<T extends RoleCreateArgs>(
      args: SelectSubset<T, RoleCreateArgs>
    ): CheckSelect<T, Prisma__RoleClient<Role>, Prisma__RoleClient<RoleGetPayload<T>>>

    /**
     * Create many Roles.
     *     @param {RoleCreateManyArgs} args - Arguments to create many Roles.
     *     @example
     *     // Create many Roles
     *     const role = await prisma.role.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends RoleCreateManyArgs>(
      args?: SelectSubset<T, RoleCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Role.
     * @param {RoleDeleteArgs} args - Arguments to delete one Role.
     * @example
     * // Delete one Role
     * const Role = await prisma.role.delete({
     *   where: {
     *     // ... filter to delete one Role
     *   }
     * })
     * 
    **/
    delete<T extends RoleDeleteArgs>(
      args: SelectSubset<T, RoleDeleteArgs>
    ): CheckSelect<T, Prisma__RoleClient<Role>, Prisma__RoleClient<RoleGetPayload<T>>>

    /**
     * Update one Role.
     * @param {RoleUpdateArgs} args - Arguments to update one Role.
     * @example
     * // Update one Role
     * const role = await prisma.role.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends RoleUpdateArgs>(
      args: SelectSubset<T, RoleUpdateArgs>
    ): CheckSelect<T, Prisma__RoleClient<Role>, Prisma__RoleClient<RoleGetPayload<T>>>

    /**
     * Delete zero or more Roles.
     * @param {RoleDeleteManyArgs} args - Arguments to filter Roles to delete.
     * @example
     * // Delete a few Roles
     * const { count } = await prisma.role.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends RoleDeleteManyArgs>(
      args?: SelectSubset<T, RoleDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Roles
     * const role = await prisma.role.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends RoleUpdateManyArgs>(
      args: SelectSubset<T, RoleUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Role.
     * @param {RoleUpsertArgs} args - Arguments to update or create a Role.
     * @example
     * // Update or create a Role
     * const role = await prisma.role.upsert({
     *   create: {
     *     // ... data to create a Role
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Role we want to update
     *   }
     * })
    **/
    upsert<T extends RoleUpsertArgs>(
      args: SelectSubset<T, RoleUpsertArgs>
    ): CheckSelect<T, Prisma__RoleClient<Role>, Prisma__RoleClient<RoleGetPayload<T>>>

    /**
     * Find one Role that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {RoleFindUniqueOrThrowArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends RoleFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, RoleFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__RoleClient<Role>, Prisma__RoleClient<RoleGetPayload<T>>>

    /**
     * Find the first Role that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindFirstOrThrowArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends RoleFindFirstOrThrowArgs>(
      args?: SelectSubset<T, RoleFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__RoleClient<Role>, Prisma__RoleClient<RoleGetPayload<T>>>

    /**
     * Count the number of Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleCountArgs} args - Arguments to filter Roles to count.
     * @example
     * // Count the number of Roles
     * const count = await prisma.role.count({
     *   where: {
     *     // ... the filter for the Roles we want to count
     *   }
     * })
    **/
    count<T extends RoleCountArgs>(
      args?: Subset<T, RoleCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RoleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RoleAggregateArgs>(args: Subset<T, RoleAggregateArgs>): PrismaPromise<GetRoleAggregateType<T>>

    /**
     * Group by Role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RoleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RoleGroupByArgs['orderBy'] }
        : { orderBy?: RoleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RoleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRoleGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Role.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__RoleClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    users<T extends UserFindManyArgs = {}>(args?: Subset<T, UserFindManyArgs>): CheckSelect<T, PrismaPromise<Array<User>>, PrismaPromise<Array<UserGetPayload<T>>>>;

    event<T extends EventArgs = {}>(args?: Subset<T, EventArgs>): CheckSelect<T, Prisma__EventClient<Event | null >, Prisma__EventClient<EventGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Role base type for findUnique actions
   */
  export type RoleFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Role
     * 
    **/
    select?: RoleSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: RoleInclude | null
    /**
     * Filter, which Role to fetch.
     * 
    **/
    where: RoleWhereUniqueInput
  }

  /**
   * Role: findUnique
   */
  export interface RoleFindUniqueArgs extends RoleFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Role base type for findFirst actions
   */
  export type RoleFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Role
     * 
    **/
    select?: RoleSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: RoleInclude | null
    /**
     * Filter, which Role to fetch.
     * 
    **/
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     * 
    **/
    orderBy?: Enumerable<RoleOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Roles.
     * 
    **/
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Roles.
     * 
    **/
    distinct?: Enumerable<RoleScalarFieldEnum>
  }

  /**
   * Role: findFirst
   */
  export interface RoleFindFirstArgs extends RoleFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Role findMany
   */
  export type RoleFindManyArgs = {
    /**
     * Select specific fields to fetch from the Role
     * 
    **/
    select?: RoleSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: RoleInclude | null
    /**
     * Filter, which Roles to fetch.
     * 
    **/
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     * 
    **/
    orderBy?: Enumerable<RoleOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Roles.
     * 
    **/
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     * 
    **/
    skip?: number
    distinct?: Enumerable<RoleScalarFieldEnum>
  }


  /**
   * Role create
   */
  export type RoleCreateArgs = {
    /**
     * Select specific fields to fetch from the Role
     * 
    **/
    select?: RoleSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: RoleInclude | null
    /**
     * The data needed to create a Role.
     * 
    **/
    data: XOR<RoleCreateInput, RoleUncheckedCreateInput>
  }


  /**
   * Role createMany
   */
  export type RoleCreateManyArgs = {
    /**
     * The data used to create many Roles.
     * 
    **/
    data: Enumerable<RoleCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Role update
   */
  export type RoleUpdateArgs = {
    /**
     * Select specific fields to fetch from the Role
     * 
    **/
    select?: RoleSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: RoleInclude | null
    /**
     * The data needed to update a Role.
     * 
    **/
    data: XOR<RoleUpdateInput, RoleUncheckedUpdateInput>
    /**
     * Choose, which Role to update.
     * 
    **/
    where: RoleWhereUniqueInput
  }


  /**
   * Role updateMany
   */
  export type RoleUpdateManyArgs = {
    /**
     * The data used to update Roles.
     * 
    **/
    data: XOR<RoleUpdateManyMutationInput, RoleUncheckedUpdateManyInput>
    /**
     * Filter which Roles to update
     * 
    **/
    where?: RoleWhereInput
  }


  /**
   * Role upsert
   */
  export type RoleUpsertArgs = {
    /**
     * Select specific fields to fetch from the Role
     * 
    **/
    select?: RoleSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: RoleInclude | null
    /**
     * The filter to search for the Role to update in case it exists.
     * 
    **/
    where: RoleWhereUniqueInput
    /**
     * In case the Role found by the `where` argument doesn't exist, create a new Role with this data.
     * 
    **/
    create: XOR<RoleCreateInput, RoleUncheckedCreateInput>
    /**
     * In case the Role was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<RoleUpdateInput, RoleUncheckedUpdateInput>
  }


  /**
   * Role delete
   */
  export type RoleDeleteArgs = {
    /**
     * Select specific fields to fetch from the Role
     * 
    **/
    select?: RoleSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: RoleInclude | null
    /**
     * Filter which Role to delete.
     * 
    **/
    where: RoleWhereUniqueInput
  }


  /**
   * Role deleteMany
   */
  export type RoleDeleteManyArgs = {
    /**
     * Filter which Roles to delete
     * 
    **/
    where?: RoleWhereInput
  }


  /**
   * Role: findUniqueOrThrow
   */
  export type RoleFindUniqueOrThrowArgs = RoleFindUniqueArgsBase
      

  /**
   * Role: findFirstOrThrow
   */
  export type RoleFindFirstOrThrowArgs = RoleFindFirstArgsBase
      

  /**
   * Role without action
   */
  export type RoleArgs = {
    /**
     * Select specific fields to fetch from the Role
     * 
    **/
    select?: RoleSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: RoleInclude | null
  }



  /**
   * Model Run
   */


  export type AggregateRun = {
    _count: RunCountAggregateOutputType | null
    _min: RunMinAggregateOutputType | null
    _max: RunMaxAggregateOutputType | null
  }

  export type RunMinAggregateOutputType = {
    id: string | null
    originalSubmissionId: string | null
    game: string | null
    category: string | null
    platform: string | null
    estimate: string | null
    finalTime: string | null
    donationIncentive: string | null
    race: boolean | null
    racer: string | null
    coop: boolean | null
    twitchVOD: string | null
    youtubeVOD: string | null
    eventId: string | null
    scheduledTime: Date | null
  }

  export type RunMaxAggregateOutputType = {
    id: string | null
    originalSubmissionId: string | null
    game: string | null
    category: string | null
    platform: string | null
    estimate: string | null
    finalTime: string | null
    donationIncentive: string | null
    race: boolean | null
    racer: string | null
    coop: boolean | null
    twitchVOD: string | null
    youtubeVOD: string | null
    eventId: string | null
    scheduledTime: Date | null
  }

  export type RunCountAggregateOutputType = {
    id: number
    originalSubmissionId: number
    game: number
    category: number
    platform: number
    estimate: number
    finalTime: number
    donationIncentive: number
    race: number
    racer: number
    coop: number
    twitchVOD: number
    youtubeVOD: number
    eventId: number
    scheduledTime: number
    _all: number
  }


  export type RunMinAggregateInputType = {
    id?: true
    originalSubmissionId?: true
    game?: true
    category?: true
    platform?: true
    estimate?: true
    finalTime?: true
    donationIncentive?: true
    race?: true
    racer?: true
    coop?: true
    twitchVOD?: true
    youtubeVOD?: true
    eventId?: true
    scheduledTime?: true
  }

  export type RunMaxAggregateInputType = {
    id?: true
    originalSubmissionId?: true
    game?: true
    category?: true
    platform?: true
    estimate?: true
    finalTime?: true
    donationIncentive?: true
    race?: true
    racer?: true
    coop?: true
    twitchVOD?: true
    youtubeVOD?: true
    eventId?: true
    scheduledTime?: true
  }

  export type RunCountAggregateInputType = {
    id?: true
    originalSubmissionId?: true
    game?: true
    category?: true
    platform?: true
    estimate?: true
    finalTime?: true
    donationIncentive?: true
    race?: true
    racer?: true
    coop?: true
    twitchVOD?: true
    youtubeVOD?: true
    eventId?: true
    scheduledTime?: true
    _all?: true
  }

  export type RunAggregateArgs = {
    /**
     * Filter which Run to aggregate.
     * 
    **/
    where?: RunWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Runs to fetch.
     * 
    **/
    orderBy?: Enumerable<RunOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: RunWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Runs from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Runs.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Runs
    **/
    _count?: true | RunCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RunMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RunMaxAggregateInputType
  }

  export type GetRunAggregateType<T extends RunAggregateArgs> = {
        [P in keyof T & keyof AggregateRun]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRun[P]>
      : GetScalarType<T[P], AggregateRun[P]>
  }




  export type RunGroupByArgs = {
    where?: RunWhereInput
    orderBy?: Enumerable<RunOrderByWithAggregationInput>
    by: Array<RunScalarFieldEnum>
    having?: RunScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RunCountAggregateInputType | true
    _min?: RunMinAggregateInputType
    _max?: RunMaxAggregateInputType
  }


  export type RunGroupByOutputType = {
    id: string
    originalSubmissionId: string | null
    game: string
    category: string
    platform: string
    estimate: string
    finalTime: string
    donationIncentive: string
    race: boolean
    racer: string
    coop: boolean
    twitchVOD: string
    youtubeVOD: string
    eventId: string | null
    scheduledTime: Date | null
    _count: RunCountAggregateOutputType | null
    _min: RunMinAggregateOutputType | null
    _max: RunMaxAggregateOutputType | null
  }

  type GetRunGroupByPayload<T extends RunGroupByArgs> = PrismaPromise<
    Array<
      PickArray<RunGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RunGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RunGroupByOutputType[P]>
            : GetScalarType<T[P], RunGroupByOutputType[P]>
        }
      >
    >


  export type RunSelect = {
    id?: boolean
    runners?: boolean | UserFindManyArgs
    originalSubmission?: boolean | SubmissionArgs
    originalSubmissionId?: boolean
    game?: boolean
    category?: boolean
    platform?: boolean
    estimate?: boolean
    finalTime?: boolean
    donationIncentive?: boolean
    race?: boolean
    racer?: boolean
    coop?: boolean
    twitchVOD?: boolean
    youtubeVOD?: boolean
    event?: boolean | EventArgs
    eventId?: boolean
    donationIncentiveObject?: boolean | IncentiveFindManyArgs
    scheduledTime?: boolean
    _count?: boolean | RunCountOutputTypeArgs
  }

  export type RunInclude = {
    runners?: boolean | UserFindManyArgs
    originalSubmission?: boolean | SubmissionArgs
    event?: boolean | EventArgs
    donationIncentiveObject?: boolean | IncentiveFindManyArgs
    _count?: boolean | RunCountOutputTypeArgs
  }

  export type RunGetPayload<
    S extends boolean | null | undefined | RunArgs,
    U = keyof S
      > = S extends true
        ? Run
    : S extends undefined
    ? never
    : S extends RunArgs | RunFindManyArgs
    ?'include' extends U
    ? Run  & {
    [P in TrueKeys<S['include']>]:
        P extends 'runners' ? Array < UserGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'originalSubmission' ? SubmissionGetPayload<Exclude<S['include'], undefined | null>[P]> | null :
        P extends 'event' ? EventGetPayload<Exclude<S['include'], undefined | null>[P]> | null :
        P extends 'donationIncentiveObject' ? Array < IncentiveGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends '_count' ? RunCountOutputTypeGetPayload<Exclude<S['include'], undefined | null>[P]> :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'runners' ? Array < UserGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'originalSubmission' ? SubmissionGetPayload<Exclude<S['select'], undefined | null>[P]> | null :
        P extends 'event' ? EventGetPayload<Exclude<S['select'], undefined | null>[P]> | null :
        P extends 'donationIncentiveObject' ? Array < IncentiveGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends '_count' ? RunCountOutputTypeGetPayload<Exclude<S['select'], undefined | null>[P]> :  P extends keyof Run ? Run[P] : never
  } 
    : Run
  : Run


  type RunCountArgs = Merge<
    Omit<RunFindManyArgs, 'select' | 'include'> & {
      select?: RunCountAggregateInputType | true
    }
  >

  export interface RunDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Run that matches the filter.
     * @param {RunFindUniqueArgs} args - Arguments to find a Run
     * @example
     * // Get one Run
     * const run = await prisma.run.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends RunFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, RunFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Run'> extends True ? CheckSelect<T, Prisma__RunClient<Run>, Prisma__RunClient<RunGetPayload<T>>> : CheckSelect<T, Prisma__RunClient<Run | null >, Prisma__RunClient<RunGetPayload<T> | null >>

    /**
     * Find the first Run that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RunFindFirstArgs} args - Arguments to find a Run
     * @example
     * // Get one Run
     * const run = await prisma.run.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends RunFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, RunFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Run'> extends True ? CheckSelect<T, Prisma__RunClient<Run>, Prisma__RunClient<RunGetPayload<T>>> : CheckSelect<T, Prisma__RunClient<Run | null >, Prisma__RunClient<RunGetPayload<T> | null >>

    /**
     * Find zero or more Runs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RunFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Runs
     * const runs = await prisma.run.findMany()
     * 
     * // Get first 10 Runs
     * const runs = await prisma.run.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const runWithIdOnly = await prisma.run.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends RunFindManyArgs>(
      args?: SelectSubset<T, RunFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<Run>>, PrismaPromise<Array<RunGetPayload<T>>>>

    /**
     * Create a Run.
     * @param {RunCreateArgs} args - Arguments to create a Run.
     * @example
     * // Create one Run
     * const Run = await prisma.run.create({
     *   data: {
     *     // ... data to create a Run
     *   }
     * })
     * 
    **/
    create<T extends RunCreateArgs>(
      args: SelectSubset<T, RunCreateArgs>
    ): CheckSelect<T, Prisma__RunClient<Run>, Prisma__RunClient<RunGetPayload<T>>>

    /**
     * Create many Runs.
     *     @param {RunCreateManyArgs} args - Arguments to create many Runs.
     *     @example
     *     // Create many Runs
     *     const run = await prisma.run.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends RunCreateManyArgs>(
      args?: SelectSubset<T, RunCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Run.
     * @param {RunDeleteArgs} args - Arguments to delete one Run.
     * @example
     * // Delete one Run
     * const Run = await prisma.run.delete({
     *   where: {
     *     // ... filter to delete one Run
     *   }
     * })
     * 
    **/
    delete<T extends RunDeleteArgs>(
      args: SelectSubset<T, RunDeleteArgs>
    ): CheckSelect<T, Prisma__RunClient<Run>, Prisma__RunClient<RunGetPayload<T>>>

    /**
     * Update one Run.
     * @param {RunUpdateArgs} args - Arguments to update one Run.
     * @example
     * // Update one Run
     * const run = await prisma.run.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends RunUpdateArgs>(
      args: SelectSubset<T, RunUpdateArgs>
    ): CheckSelect<T, Prisma__RunClient<Run>, Prisma__RunClient<RunGetPayload<T>>>

    /**
     * Delete zero or more Runs.
     * @param {RunDeleteManyArgs} args - Arguments to filter Runs to delete.
     * @example
     * // Delete a few Runs
     * const { count } = await prisma.run.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends RunDeleteManyArgs>(
      args?: SelectSubset<T, RunDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Runs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RunUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Runs
     * const run = await prisma.run.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends RunUpdateManyArgs>(
      args: SelectSubset<T, RunUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Run.
     * @param {RunUpsertArgs} args - Arguments to update or create a Run.
     * @example
     * // Update or create a Run
     * const run = await prisma.run.upsert({
     *   create: {
     *     // ... data to create a Run
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Run we want to update
     *   }
     * })
    **/
    upsert<T extends RunUpsertArgs>(
      args: SelectSubset<T, RunUpsertArgs>
    ): CheckSelect<T, Prisma__RunClient<Run>, Prisma__RunClient<RunGetPayload<T>>>

    /**
     * Find one Run that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {RunFindUniqueOrThrowArgs} args - Arguments to find a Run
     * @example
     * // Get one Run
     * const run = await prisma.run.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends RunFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, RunFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__RunClient<Run>, Prisma__RunClient<RunGetPayload<T>>>

    /**
     * Find the first Run that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RunFindFirstOrThrowArgs} args - Arguments to find a Run
     * @example
     * // Get one Run
     * const run = await prisma.run.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends RunFindFirstOrThrowArgs>(
      args?: SelectSubset<T, RunFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__RunClient<Run>, Prisma__RunClient<RunGetPayload<T>>>

    /**
     * Count the number of Runs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RunCountArgs} args - Arguments to filter Runs to count.
     * @example
     * // Count the number of Runs
     * const count = await prisma.run.count({
     *   where: {
     *     // ... the filter for the Runs we want to count
     *   }
     * })
    **/
    count<T extends RunCountArgs>(
      args?: Subset<T, RunCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RunCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Run.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RunAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RunAggregateArgs>(args: Subset<T, RunAggregateArgs>): PrismaPromise<GetRunAggregateType<T>>

    /**
     * Group by Run.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RunGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RunGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RunGroupByArgs['orderBy'] }
        : { orderBy?: RunGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RunGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRunGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Run.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__RunClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    runners<T extends UserFindManyArgs = {}>(args?: Subset<T, UserFindManyArgs>): CheckSelect<T, PrismaPromise<Array<User>>, PrismaPromise<Array<UserGetPayload<T>>>>;

    originalSubmission<T extends SubmissionArgs = {}>(args?: Subset<T, SubmissionArgs>): CheckSelect<T, Prisma__SubmissionClient<Submission | null >, Prisma__SubmissionClient<SubmissionGetPayload<T> | null >>;

    event<T extends EventArgs = {}>(args?: Subset<T, EventArgs>): CheckSelect<T, Prisma__EventClient<Event | null >, Prisma__EventClient<EventGetPayload<T> | null >>;

    donationIncentiveObject<T extends IncentiveFindManyArgs = {}>(args?: Subset<T, IncentiveFindManyArgs>): CheckSelect<T, PrismaPromise<Array<Incentive>>, PrismaPromise<Array<IncentiveGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Run base type for findUnique actions
   */
  export type RunFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Run
     * 
    **/
    select?: RunSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: RunInclude | null
    /**
     * Filter, which Run to fetch.
     * 
    **/
    where: RunWhereUniqueInput
  }

  /**
   * Run: findUnique
   */
  export interface RunFindUniqueArgs extends RunFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Run base type for findFirst actions
   */
  export type RunFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Run
     * 
    **/
    select?: RunSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: RunInclude | null
    /**
     * Filter, which Run to fetch.
     * 
    **/
    where?: RunWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Runs to fetch.
     * 
    **/
    orderBy?: Enumerable<RunOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Runs.
     * 
    **/
    cursor?: RunWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Runs from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Runs.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Runs.
     * 
    **/
    distinct?: Enumerable<RunScalarFieldEnum>
  }

  /**
   * Run: findFirst
   */
  export interface RunFindFirstArgs extends RunFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Run findMany
   */
  export type RunFindManyArgs = {
    /**
     * Select specific fields to fetch from the Run
     * 
    **/
    select?: RunSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: RunInclude | null
    /**
     * Filter, which Runs to fetch.
     * 
    **/
    where?: RunWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Runs to fetch.
     * 
    **/
    orderBy?: Enumerable<RunOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Runs.
     * 
    **/
    cursor?: RunWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Runs from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Runs.
     * 
    **/
    skip?: number
    distinct?: Enumerable<RunScalarFieldEnum>
  }


  /**
   * Run create
   */
  export type RunCreateArgs = {
    /**
     * Select specific fields to fetch from the Run
     * 
    **/
    select?: RunSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: RunInclude | null
    /**
     * The data needed to create a Run.
     * 
    **/
    data: XOR<RunCreateInput, RunUncheckedCreateInput>
  }


  /**
   * Run createMany
   */
  export type RunCreateManyArgs = {
    /**
     * The data used to create many Runs.
     * 
    **/
    data: Enumerable<RunCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Run update
   */
  export type RunUpdateArgs = {
    /**
     * Select specific fields to fetch from the Run
     * 
    **/
    select?: RunSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: RunInclude | null
    /**
     * The data needed to update a Run.
     * 
    **/
    data: XOR<RunUpdateInput, RunUncheckedUpdateInput>
    /**
     * Choose, which Run to update.
     * 
    **/
    where: RunWhereUniqueInput
  }


  /**
   * Run updateMany
   */
  export type RunUpdateManyArgs = {
    /**
     * The data used to update Runs.
     * 
    **/
    data: XOR<RunUpdateManyMutationInput, RunUncheckedUpdateManyInput>
    /**
     * Filter which Runs to update
     * 
    **/
    where?: RunWhereInput
  }


  /**
   * Run upsert
   */
  export type RunUpsertArgs = {
    /**
     * Select specific fields to fetch from the Run
     * 
    **/
    select?: RunSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: RunInclude | null
    /**
     * The filter to search for the Run to update in case it exists.
     * 
    **/
    where: RunWhereUniqueInput
    /**
     * In case the Run found by the `where` argument doesn't exist, create a new Run with this data.
     * 
    **/
    create: XOR<RunCreateInput, RunUncheckedCreateInput>
    /**
     * In case the Run was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<RunUpdateInput, RunUncheckedUpdateInput>
  }


  /**
   * Run delete
   */
  export type RunDeleteArgs = {
    /**
     * Select specific fields to fetch from the Run
     * 
    **/
    select?: RunSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: RunInclude | null
    /**
     * Filter which Run to delete.
     * 
    **/
    where: RunWhereUniqueInput
  }


  /**
   * Run deleteMany
   */
  export type RunDeleteManyArgs = {
    /**
     * Filter which Runs to delete
     * 
    **/
    where?: RunWhereInput
  }


  /**
   * Run: findUniqueOrThrow
   */
  export type RunFindUniqueOrThrowArgs = RunFindUniqueArgsBase
      

  /**
   * Run: findFirstOrThrow
   */
  export type RunFindFirstOrThrowArgs = RunFindFirstArgsBase
      

  /**
   * Run without action
   */
  export type RunArgs = {
    /**
     * Select specific fields to fetch from the Run
     * 
    **/
    select?: RunSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: RunInclude | null
  }



  /**
   * Model Verification
   */


  export type AggregateVerification = {
    _count: VerificationCountAggregateOutputType | null
    _min: VerificationMinAggregateOutputType | null
    _max: VerificationMaxAggregateOutputType | null
  }

  export type VerificationMinAggregateOutputType = {
    id: string | null
    code: string | null
    account: string | null
  }

  export type VerificationMaxAggregateOutputType = {
    id: string | null
    code: string | null
    account: string | null
  }

  export type VerificationCountAggregateOutputType = {
    id: number
    code: number
    account: number
    _all: number
  }


  export type VerificationMinAggregateInputType = {
    id?: true
    code?: true
    account?: true
  }

  export type VerificationMaxAggregateInputType = {
    id?: true
    code?: true
    account?: true
  }

  export type VerificationCountAggregateInputType = {
    id?: true
    code?: true
    account?: true
    _all?: true
  }

  export type VerificationAggregateArgs = {
    /**
     * Filter which Verification to aggregate.
     * 
    **/
    where?: VerificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Verifications to fetch.
     * 
    **/
    orderBy?: Enumerable<VerificationOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: VerificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Verifications from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Verifications.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Verifications
    **/
    _count?: true | VerificationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VerificationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VerificationMaxAggregateInputType
  }

  export type GetVerificationAggregateType<T extends VerificationAggregateArgs> = {
        [P in keyof T & keyof AggregateVerification]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVerification[P]>
      : GetScalarType<T[P], AggregateVerification[P]>
  }




  export type VerificationGroupByArgs = {
    where?: VerificationWhereInput
    orderBy?: Enumerable<VerificationOrderByWithAggregationInput>
    by: Array<VerificationScalarFieldEnum>
    having?: VerificationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VerificationCountAggregateInputType | true
    _min?: VerificationMinAggregateInputType
    _max?: VerificationMaxAggregateInputType
  }


  export type VerificationGroupByOutputType = {
    id: string
    code: string
    account: string
    _count: VerificationCountAggregateOutputType | null
    _min: VerificationMinAggregateOutputType | null
    _max: VerificationMaxAggregateOutputType | null
  }

  type GetVerificationGroupByPayload<T extends VerificationGroupByArgs> = PrismaPromise<
    Array<
      PickArray<VerificationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VerificationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VerificationGroupByOutputType[P]>
            : GetScalarType<T[P], VerificationGroupByOutputType[P]>
        }
      >
    >


  export type VerificationSelect = {
    id?: boolean
    code?: boolean
    account?: boolean
  }

  export type VerificationGetPayload<
    S extends boolean | null | undefined | VerificationArgs,
    U = keyof S
      > = S extends true
        ? Verification
    : S extends undefined
    ? never
    : S extends VerificationArgs | VerificationFindManyArgs
    ?'include' extends U
    ? Verification 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof Verification ? Verification[P] : never
  } 
    : Verification
  : Verification


  type VerificationCountArgs = Merge<
    Omit<VerificationFindManyArgs, 'select' | 'include'> & {
      select?: VerificationCountAggregateInputType | true
    }
  >

  export interface VerificationDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Verification that matches the filter.
     * @param {VerificationFindUniqueArgs} args - Arguments to find a Verification
     * @example
     * // Get one Verification
     * const verification = await prisma.verification.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends VerificationFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, VerificationFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Verification'> extends True ? CheckSelect<T, Prisma__VerificationClient<Verification>, Prisma__VerificationClient<VerificationGetPayload<T>>> : CheckSelect<T, Prisma__VerificationClient<Verification | null >, Prisma__VerificationClient<VerificationGetPayload<T> | null >>

    /**
     * Find the first Verification that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationFindFirstArgs} args - Arguments to find a Verification
     * @example
     * // Get one Verification
     * const verification = await prisma.verification.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends VerificationFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, VerificationFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Verification'> extends True ? CheckSelect<T, Prisma__VerificationClient<Verification>, Prisma__VerificationClient<VerificationGetPayload<T>>> : CheckSelect<T, Prisma__VerificationClient<Verification | null >, Prisma__VerificationClient<VerificationGetPayload<T> | null >>

    /**
     * Find zero or more Verifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Verifications
     * const verifications = await prisma.verification.findMany()
     * 
     * // Get first 10 Verifications
     * const verifications = await prisma.verification.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const verificationWithIdOnly = await prisma.verification.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends VerificationFindManyArgs>(
      args?: SelectSubset<T, VerificationFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<Verification>>, PrismaPromise<Array<VerificationGetPayload<T>>>>

    /**
     * Create a Verification.
     * @param {VerificationCreateArgs} args - Arguments to create a Verification.
     * @example
     * // Create one Verification
     * const Verification = await prisma.verification.create({
     *   data: {
     *     // ... data to create a Verification
     *   }
     * })
     * 
    **/
    create<T extends VerificationCreateArgs>(
      args: SelectSubset<T, VerificationCreateArgs>
    ): CheckSelect<T, Prisma__VerificationClient<Verification>, Prisma__VerificationClient<VerificationGetPayload<T>>>

    /**
     * Create many Verifications.
     *     @param {VerificationCreateManyArgs} args - Arguments to create many Verifications.
     *     @example
     *     // Create many Verifications
     *     const verification = await prisma.verification.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends VerificationCreateManyArgs>(
      args?: SelectSubset<T, VerificationCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Verification.
     * @param {VerificationDeleteArgs} args - Arguments to delete one Verification.
     * @example
     * // Delete one Verification
     * const Verification = await prisma.verification.delete({
     *   where: {
     *     // ... filter to delete one Verification
     *   }
     * })
     * 
    **/
    delete<T extends VerificationDeleteArgs>(
      args: SelectSubset<T, VerificationDeleteArgs>
    ): CheckSelect<T, Prisma__VerificationClient<Verification>, Prisma__VerificationClient<VerificationGetPayload<T>>>

    /**
     * Update one Verification.
     * @param {VerificationUpdateArgs} args - Arguments to update one Verification.
     * @example
     * // Update one Verification
     * const verification = await prisma.verification.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends VerificationUpdateArgs>(
      args: SelectSubset<T, VerificationUpdateArgs>
    ): CheckSelect<T, Prisma__VerificationClient<Verification>, Prisma__VerificationClient<VerificationGetPayload<T>>>

    /**
     * Delete zero or more Verifications.
     * @param {VerificationDeleteManyArgs} args - Arguments to filter Verifications to delete.
     * @example
     * // Delete a few Verifications
     * const { count } = await prisma.verification.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends VerificationDeleteManyArgs>(
      args?: SelectSubset<T, VerificationDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Verifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Verifications
     * const verification = await prisma.verification.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends VerificationUpdateManyArgs>(
      args: SelectSubset<T, VerificationUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Verification.
     * @param {VerificationUpsertArgs} args - Arguments to update or create a Verification.
     * @example
     * // Update or create a Verification
     * const verification = await prisma.verification.upsert({
     *   create: {
     *     // ... data to create a Verification
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Verification we want to update
     *   }
     * })
    **/
    upsert<T extends VerificationUpsertArgs>(
      args: SelectSubset<T, VerificationUpsertArgs>
    ): CheckSelect<T, Prisma__VerificationClient<Verification>, Prisma__VerificationClient<VerificationGetPayload<T>>>

    /**
     * Find one Verification that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {VerificationFindUniqueOrThrowArgs} args - Arguments to find a Verification
     * @example
     * // Get one Verification
     * const verification = await prisma.verification.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends VerificationFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, VerificationFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__VerificationClient<Verification>, Prisma__VerificationClient<VerificationGetPayload<T>>>

    /**
     * Find the first Verification that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationFindFirstOrThrowArgs} args - Arguments to find a Verification
     * @example
     * // Get one Verification
     * const verification = await prisma.verification.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends VerificationFindFirstOrThrowArgs>(
      args?: SelectSubset<T, VerificationFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__VerificationClient<Verification>, Prisma__VerificationClient<VerificationGetPayload<T>>>

    /**
     * Count the number of Verifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationCountArgs} args - Arguments to filter Verifications to count.
     * @example
     * // Count the number of Verifications
     * const count = await prisma.verification.count({
     *   where: {
     *     // ... the filter for the Verifications we want to count
     *   }
     * })
    **/
    count<T extends VerificationCountArgs>(
      args?: Subset<T, VerificationCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VerificationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Verification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VerificationAggregateArgs>(args: Subset<T, VerificationAggregateArgs>): PrismaPromise<GetVerificationAggregateType<T>>

    /**
     * Group by Verification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VerificationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VerificationGroupByArgs['orderBy'] }
        : { orderBy?: VerificationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VerificationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVerificationGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Verification.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__VerificationClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Verification base type for findUnique actions
   */
  export type VerificationFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Verification
     * 
    **/
    select?: VerificationSelect | null
    /**
     * Filter, which Verification to fetch.
     * 
    **/
    where: VerificationWhereUniqueInput
  }

  /**
   * Verification: findUnique
   */
  export interface VerificationFindUniqueArgs extends VerificationFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Verification base type for findFirst actions
   */
  export type VerificationFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Verification
     * 
    **/
    select?: VerificationSelect | null
    /**
     * Filter, which Verification to fetch.
     * 
    **/
    where?: VerificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Verifications to fetch.
     * 
    **/
    orderBy?: Enumerable<VerificationOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Verifications.
     * 
    **/
    cursor?: VerificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Verifications from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Verifications.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Verifications.
     * 
    **/
    distinct?: Enumerable<VerificationScalarFieldEnum>
  }

  /**
   * Verification: findFirst
   */
  export interface VerificationFindFirstArgs extends VerificationFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Verification findMany
   */
  export type VerificationFindManyArgs = {
    /**
     * Select specific fields to fetch from the Verification
     * 
    **/
    select?: VerificationSelect | null
    /**
     * Filter, which Verifications to fetch.
     * 
    **/
    where?: VerificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Verifications to fetch.
     * 
    **/
    orderBy?: Enumerable<VerificationOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Verifications.
     * 
    **/
    cursor?: VerificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Verifications from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Verifications.
     * 
    **/
    skip?: number
    distinct?: Enumerable<VerificationScalarFieldEnum>
  }


  /**
   * Verification create
   */
  export type VerificationCreateArgs = {
    /**
     * Select specific fields to fetch from the Verification
     * 
    **/
    select?: VerificationSelect | null
    /**
     * The data needed to create a Verification.
     * 
    **/
    data: XOR<VerificationCreateInput, VerificationUncheckedCreateInput>
  }


  /**
   * Verification createMany
   */
  export type VerificationCreateManyArgs = {
    /**
     * The data used to create many Verifications.
     * 
    **/
    data: Enumerable<VerificationCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Verification update
   */
  export type VerificationUpdateArgs = {
    /**
     * Select specific fields to fetch from the Verification
     * 
    **/
    select?: VerificationSelect | null
    /**
     * The data needed to update a Verification.
     * 
    **/
    data: XOR<VerificationUpdateInput, VerificationUncheckedUpdateInput>
    /**
     * Choose, which Verification to update.
     * 
    **/
    where: VerificationWhereUniqueInput
  }


  /**
   * Verification updateMany
   */
  export type VerificationUpdateManyArgs = {
    /**
     * The data used to update Verifications.
     * 
    **/
    data: XOR<VerificationUpdateManyMutationInput, VerificationUncheckedUpdateManyInput>
    /**
     * Filter which Verifications to update
     * 
    **/
    where?: VerificationWhereInput
  }


  /**
   * Verification upsert
   */
  export type VerificationUpsertArgs = {
    /**
     * Select specific fields to fetch from the Verification
     * 
    **/
    select?: VerificationSelect | null
    /**
     * The filter to search for the Verification to update in case it exists.
     * 
    **/
    where: VerificationWhereUniqueInput
    /**
     * In case the Verification found by the `where` argument doesn't exist, create a new Verification with this data.
     * 
    **/
    create: XOR<VerificationCreateInput, VerificationUncheckedCreateInput>
    /**
     * In case the Verification was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<VerificationUpdateInput, VerificationUncheckedUpdateInput>
  }


  /**
   * Verification delete
   */
  export type VerificationDeleteArgs = {
    /**
     * Select specific fields to fetch from the Verification
     * 
    **/
    select?: VerificationSelect | null
    /**
     * Filter which Verification to delete.
     * 
    **/
    where: VerificationWhereUniqueInput
  }


  /**
   * Verification deleteMany
   */
  export type VerificationDeleteManyArgs = {
    /**
     * Filter which Verifications to delete
     * 
    **/
    where?: VerificationWhereInput
  }


  /**
   * Verification: findUniqueOrThrow
   */
  export type VerificationFindUniqueOrThrowArgs = VerificationFindUniqueArgsBase
      

  /**
   * Verification: findFirstOrThrow
   */
  export type VerificationFindFirstOrThrowArgs = VerificationFindFirstArgsBase
      

  /**
   * Verification without action
   */
  export type VerificationArgs = {
    /**
     * Select specific fields to fetch from the Verification
     * 
    **/
    select?: VerificationSelect | null
  }



  /**
   * Model Ticket
   */


  export type AggregateTicket = {
    _count: TicketCountAggregateOutputType | null
    _avg: TicketAvgAggregateOutputType | null
    _sum: TicketSumAggregateOutputType | null
    _min: TicketMinAggregateOutputType | null
    _max: TicketMaxAggregateOutputType | null
  }

  export type TicketAvgAggregateOutputType = {
    numberOfTickets: number | null
  }

  export type TicketSumAggregateOutputType = {
    numberOfTickets: number | null
  }

  export type TicketMinAggregateOutputType = {
    id: string | null
    userId: string | null
    eventId: string | null
    taken: boolean | null
    method: TicketMethodType | null
    ticketID: string | null
    paid: boolean | null
    notes: string | null
    numberOfTickets: number | null
    stripeID: string | null
    created: Date | null
  }

  export type TicketMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    eventId: string | null
    taken: boolean | null
    method: TicketMethodType | null
    ticketID: string | null
    paid: boolean | null
    notes: string | null
    numberOfTickets: number | null
    stripeID: string | null
    created: Date | null
  }

  export type TicketCountAggregateOutputType = {
    id: number
    userId: number
    eventId: number
    taken: number
    method: number
    ticketID: number
    paid: number
    notes: number
    numberOfTickets: number
    stripeID: number
    created: number
    _all: number
  }


  export type TicketAvgAggregateInputType = {
    numberOfTickets?: true
  }

  export type TicketSumAggregateInputType = {
    numberOfTickets?: true
  }

  export type TicketMinAggregateInputType = {
    id?: true
    userId?: true
    eventId?: true
    taken?: true
    method?: true
    ticketID?: true
    paid?: true
    notes?: true
    numberOfTickets?: true
    stripeID?: true
    created?: true
  }

  export type TicketMaxAggregateInputType = {
    id?: true
    userId?: true
    eventId?: true
    taken?: true
    method?: true
    ticketID?: true
    paid?: true
    notes?: true
    numberOfTickets?: true
    stripeID?: true
    created?: true
  }

  export type TicketCountAggregateInputType = {
    id?: true
    userId?: true
    eventId?: true
    taken?: true
    method?: true
    ticketID?: true
    paid?: true
    notes?: true
    numberOfTickets?: true
    stripeID?: true
    created?: true
    _all?: true
  }

  export type TicketAggregateArgs = {
    /**
     * Filter which Ticket to aggregate.
     * 
    **/
    where?: TicketWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tickets to fetch.
     * 
    **/
    orderBy?: Enumerable<TicketOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TicketWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tickets from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tickets.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Tickets
    **/
    _count?: true | TicketCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TicketAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TicketSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TicketMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TicketMaxAggregateInputType
  }

  export type GetTicketAggregateType<T extends TicketAggregateArgs> = {
        [P in keyof T & keyof AggregateTicket]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTicket[P]>
      : GetScalarType<T[P], AggregateTicket[P]>
  }




  export type TicketGroupByArgs = {
    where?: TicketWhereInput
    orderBy?: Enumerable<TicketOrderByWithAggregationInput>
    by: Array<TicketScalarFieldEnum>
    having?: TicketScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TicketCountAggregateInputType | true
    _avg?: TicketAvgAggregateInputType
    _sum?: TicketSumAggregateInputType
    _min?: TicketMinAggregateInputType
    _max?: TicketMaxAggregateInputType
  }


  export type TicketGroupByOutputType = {
    id: string
    userId: string | null
    eventId: string | null
    taken: boolean
    method: TicketMethodType
    ticketID: string
    paid: boolean
    notes: string
    numberOfTickets: number | null
    stripeID: string
    created: Date | null
    _count: TicketCountAggregateOutputType | null
    _avg: TicketAvgAggregateOutputType | null
    _sum: TicketSumAggregateOutputType | null
    _min: TicketMinAggregateOutputType | null
    _max: TicketMaxAggregateOutputType | null
  }

  type GetTicketGroupByPayload<T extends TicketGroupByArgs> = PrismaPromise<
    Array<
      PickArray<TicketGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TicketGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TicketGroupByOutputType[P]>
            : GetScalarType<T[P], TicketGroupByOutputType[P]>
        }
      >
    >


  export type TicketSelect = {
    id?: boolean
    user?: boolean | UserArgs
    userId?: boolean
    event?: boolean | EventArgs
    eventId?: boolean
    taken?: boolean
    method?: boolean
    ticketID?: boolean
    paid?: boolean
    notes?: boolean
    numberOfTickets?: boolean
    stripeID?: boolean
    created?: boolean
  }

  export type TicketInclude = {
    user?: boolean | UserArgs
    event?: boolean | EventArgs
  }

  export type TicketGetPayload<
    S extends boolean | null | undefined | TicketArgs,
    U = keyof S
      > = S extends true
        ? Ticket
    : S extends undefined
    ? never
    : S extends TicketArgs | TicketFindManyArgs
    ?'include' extends U
    ? Ticket  & {
    [P in TrueKeys<S['include']>]:
        P extends 'user' ? UserGetPayload<Exclude<S['include'], undefined | null>[P]> | null :
        P extends 'event' ? EventGetPayload<Exclude<S['include'], undefined | null>[P]> | null :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'user' ? UserGetPayload<Exclude<S['select'], undefined | null>[P]> | null :
        P extends 'event' ? EventGetPayload<Exclude<S['select'], undefined | null>[P]> | null :  P extends keyof Ticket ? Ticket[P] : never
  } 
    : Ticket
  : Ticket


  type TicketCountArgs = Merge<
    Omit<TicketFindManyArgs, 'select' | 'include'> & {
      select?: TicketCountAggregateInputType | true
    }
  >

  export interface TicketDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Ticket that matches the filter.
     * @param {TicketFindUniqueArgs} args - Arguments to find a Ticket
     * @example
     * // Get one Ticket
     * const ticket = await prisma.ticket.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TicketFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TicketFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Ticket'> extends True ? CheckSelect<T, Prisma__TicketClient<Ticket>, Prisma__TicketClient<TicketGetPayload<T>>> : CheckSelect<T, Prisma__TicketClient<Ticket | null >, Prisma__TicketClient<TicketGetPayload<T> | null >>

    /**
     * Find the first Ticket that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketFindFirstArgs} args - Arguments to find a Ticket
     * @example
     * // Get one Ticket
     * const ticket = await prisma.ticket.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TicketFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TicketFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Ticket'> extends True ? CheckSelect<T, Prisma__TicketClient<Ticket>, Prisma__TicketClient<TicketGetPayload<T>>> : CheckSelect<T, Prisma__TicketClient<Ticket | null >, Prisma__TicketClient<TicketGetPayload<T> | null >>

    /**
     * Find zero or more Tickets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tickets
     * const tickets = await prisma.ticket.findMany()
     * 
     * // Get first 10 Tickets
     * const tickets = await prisma.ticket.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ticketWithIdOnly = await prisma.ticket.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends TicketFindManyArgs>(
      args?: SelectSubset<T, TicketFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<Ticket>>, PrismaPromise<Array<TicketGetPayload<T>>>>

    /**
     * Create a Ticket.
     * @param {TicketCreateArgs} args - Arguments to create a Ticket.
     * @example
     * // Create one Ticket
     * const Ticket = await prisma.ticket.create({
     *   data: {
     *     // ... data to create a Ticket
     *   }
     * })
     * 
    **/
    create<T extends TicketCreateArgs>(
      args: SelectSubset<T, TicketCreateArgs>
    ): CheckSelect<T, Prisma__TicketClient<Ticket>, Prisma__TicketClient<TicketGetPayload<T>>>

    /**
     * Create many Tickets.
     *     @param {TicketCreateManyArgs} args - Arguments to create many Tickets.
     *     @example
     *     // Create many Tickets
     *     const ticket = await prisma.ticket.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends TicketCreateManyArgs>(
      args?: SelectSubset<T, TicketCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Ticket.
     * @param {TicketDeleteArgs} args - Arguments to delete one Ticket.
     * @example
     * // Delete one Ticket
     * const Ticket = await prisma.ticket.delete({
     *   where: {
     *     // ... filter to delete one Ticket
     *   }
     * })
     * 
    **/
    delete<T extends TicketDeleteArgs>(
      args: SelectSubset<T, TicketDeleteArgs>
    ): CheckSelect<T, Prisma__TicketClient<Ticket>, Prisma__TicketClient<TicketGetPayload<T>>>

    /**
     * Update one Ticket.
     * @param {TicketUpdateArgs} args - Arguments to update one Ticket.
     * @example
     * // Update one Ticket
     * const ticket = await prisma.ticket.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TicketUpdateArgs>(
      args: SelectSubset<T, TicketUpdateArgs>
    ): CheckSelect<T, Prisma__TicketClient<Ticket>, Prisma__TicketClient<TicketGetPayload<T>>>

    /**
     * Delete zero or more Tickets.
     * @param {TicketDeleteManyArgs} args - Arguments to filter Tickets to delete.
     * @example
     * // Delete a few Tickets
     * const { count } = await prisma.ticket.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TicketDeleteManyArgs>(
      args?: SelectSubset<T, TicketDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tickets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tickets
     * const ticket = await prisma.ticket.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TicketUpdateManyArgs>(
      args: SelectSubset<T, TicketUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Ticket.
     * @param {TicketUpsertArgs} args - Arguments to update or create a Ticket.
     * @example
     * // Update or create a Ticket
     * const ticket = await prisma.ticket.upsert({
     *   create: {
     *     // ... data to create a Ticket
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Ticket we want to update
     *   }
     * })
    **/
    upsert<T extends TicketUpsertArgs>(
      args: SelectSubset<T, TicketUpsertArgs>
    ): CheckSelect<T, Prisma__TicketClient<Ticket>, Prisma__TicketClient<TicketGetPayload<T>>>

    /**
     * Find one Ticket that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {TicketFindUniqueOrThrowArgs} args - Arguments to find a Ticket
     * @example
     * // Get one Ticket
     * const ticket = await prisma.ticket.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends TicketFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, TicketFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__TicketClient<Ticket>, Prisma__TicketClient<TicketGetPayload<T>>>

    /**
     * Find the first Ticket that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketFindFirstOrThrowArgs} args - Arguments to find a Ticket
     * @example
     * // Get one Ticket
     * const ticket = await prisma.ticket.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends TicketFindFirstOrThrowArgs>(
      args?: SelectSubset<T, TicketFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__TicketClient<Ticket>, Prisma__TicketClient<TicketGetPayload<T>>>

    /**
     * Count the number of Tickets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketCountArgs} args - Arguments to filter Tickets to count.
     * @example
     * // Count the number of Tickets
     * const count = await prisma.ticket.count({
     *   where: {
     *     // ... the filter for the Tickets we want to count
     *   }
     * })
    **/
    count<T extends TicketCountArgs>(
      args?: Subset<T, TicketCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TicketCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Ticket.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TicketAggregateArgs>(args: Subset<T, TicketAggregateArgs>): PrismaPromise<GetTicketAggregateType<T>>

    /**
     * Group by Ticket.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TicketGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TicketGroupByArgs['orderBy'] }
        : { orderBy?: TicketGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TicketGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTicketGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Ticket.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TicketClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    user<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    event<T extends EventArgs = {}>(args?: Subset<T, EventArgs>): CheckSelect<T, Prisma__EventClient<Event | null >, Prisma__EventClient<EventGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Ticket base type for findUnique actions
   */
  export type TicketFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Ticket
     * 
    **/
    select?: TicketSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TicketInclude | null
    /**
     * Filter, which Ticket to fetch.
     * 
    **/
    where: TicketWhereUniqueInput
  }

  /**
   * Ticket: findUnique
   */
  export interface TicketFindUniqueArgs extends TicketFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Ticket base type for findFirst actions
   */
  export type TicketFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Ticket
     * 
    **/
    select?: TicketSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TicketInclude | null
    /**
     * Filter, which Ticket to fetch.
     * 
    **/
    where?: TicketWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tickets to fetch.
     * 
    **/
    orderBy?: Enumerable<TicketOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tickets.
     * 
    **/
    cursor?: TicketWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tickets from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tickets.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tickets.
     * 
    **/
    distinct?: Enumerable<TicketScalarFieldEnum>
  }

  /**
   * Ticket: findFirst
   */
  export interface TicketFindFirstArgs extends TicketFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Ticket findMany
   */
  export type TicketFindManyArgs = {
    /**
     * Select specific fields to fetch from the Ticket
     * 
    **/
    select?: TicketSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TicketInclude | null
    /**
     * Filter, which Tickets to fetch.
     * 
    **/
    where?: TicketWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tickets to fetch.
     * 
    **/
    orderBy?: Enumerable<TicketOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Tickets.
     * 
    **/
    cursor?: TicketWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tickets from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tickets.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TicketScalarFieldEnum>
  }


  /**
   * Ticket create
   */
  export type TicketCreateArgs = {
    /**
     * Select specific fields to fetch from the Ticket
     * 
    **/
    select?: TicketSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TicketInclude | null
    /**
     * The data needed to create a Ticket.
     * 
    **/
    data: XOR<TicketCreateInput, TicketUncheckedCreateInput>
  }


  /**
   * Ticket createMany
   */
  export type TicketCreateManyArgs = {
    /**
     * The data used to create many Tickets.
     * 
    **/
    data: Enumerable<TicketCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Ticket update
   */
  export type TicketUpdateArgs = {
    /**
     * Select specific fields to fetch from the Ticket
     * 
    **/
    select?: TicketSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TicketInclude | null
    /**
     * The data needed to update a Ticket.
     * 
    **/
    data: XOR<TicketUpdateInput, TicketUncheckedUpdateInput>
    /**
     * Choose, which Ticket to update.
     * 
    **/
    where: TicketWhereUniqueInput
  }


  /**
   * Ticket updateMany
   */
  export type TicketUpdateManyArgs = {
    /**
     * The data used to update Tickets.
     * 
    **/
    data: XOR<TicketUpdateManyMutationInput, TicketUncheckedUpdateManyInput>
    /**
     * Filter which Tickets to update
     * 
    **/
    where?: TicketWhereInput
  }


  /**
   * Ticket upsert
   */
  export type TicketUpsertArgs = {
    /**
     * Select specific fields to fetch from the Ticket
     * 
    **/
    select?: TicketSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TicketInclude | null
    /**
     * The filter to search for the Ticket to update in case it exists.
     * 
    **/
    where: TicketWhereUniqueInput
    /**
     * In case the Ticket found by the `where` argument doesn't exist, create a new Ticket with this data.
     * 
    **/
    create: XOR<TicketCreateInput, TicketUncheckedCreateInput>
    /**
     * In case the Ticket was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TicketUpdateInput, TicketUncheckedUpdateInput>
  }


  /**
   * Ticket delete
   */
  export type TicketDeleteArgs = {
    /**
     * Select specific fields to fetch from the Ticket
     * 
    **/
    select?: TicketSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TicketInclude | null
    /**
     * Filter which Ticket to delete.
     * 
    **/
    where: TicketWhereUniqueInput
  }


  /**
   * Ticket deleteMany
   */
  export type TicketDeleteManyArgs = {
    /**
     * Filter which Tickets to delete
     * 
    **/
    where?: TicketWhereInput
  }


  /**
   * Ticket: findUniqueOrThrow
   */
  export type TicketFindUniqueOrThrowArgs = TicketFindUniqueArgsBase
      

  /**
   * Ticket: findFirstOrThrow
   */
  export type TicketFindFirstOrThrowArgs = TicketFindFirstArgsBase
      

  /**
   * Ticket without action
   */
  export type TicketArgs = {
    /**
     * Select specific fields to fetch from the Ticket
     * 
    **/
    select?: TicketSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TicketInclude | null
  }



  /**
   * Model Volunteer
   */


  export type AggregateVolunteer = {
    _count: VolunteerCountAggregateOutputType | null
    _avg: VolunteerAvgAggregateOutputType | null
    _sum: VolunteerSumAggregateOutputType | null
    _min: VolunteerMinAggregateOutputType | null
    _max: VolunteerMaxAggregateOutputType | null
  }

  export type VolunteerAvgAggregateOutputType = {
    eventHostTime: number | null
    maxDailyHostTime: number | null
  }

  export type VolunteerSumAggregateOutputType = {
    eventHostTime: number | null
    maxDailyHostTime: number | null
  }

  export type VolunteerMinAggregateOutputType = {
    id: string | null
    volunteerId: string | null
    jobType: VolunteerJobTypeType | null
    eventHostTime: number | null
    maxDailyHostTime: number | null
    specificGame: string | null
    specificRunner: string | null
    additionalInfo: string | null
    experience: string | null
    favMeme: string | null
    runnerManagementAvailability: string | null
    techAvailablity: string | null
    techExperience: string | null
    eventId: string | null
  }

  export type VolunteerMaxAggregateOutputType = {
    id: string | null
    volunteerId: string | null
    jobType: VolunteerJobTypeType | null
    eventHostTime: number | null
    maxDailyHostTime: number | null
    specificGame: string | null
    specificRunner: string | null
    additionalInfo: string | null
    experience: string | null
    favMeme: string | null
    runnerManagementAvailability: string | null
    techAvailablity: string | null
    techExperience: string | null
    eventId: string | null
  }

  export type VolunteerCountAggregateOutputType = {
    id: number
    volunteerId: number
    jobType: number
    eventHostTime: number
    maxDailyHostTime: number
    dayTimes: number
    specificGame: number
    specificRunner: number
    additionalInfo: number
    experience: number
    favMeme: number
    runnerManagementAvailability: number
    techAvailablity: number
    techExperience: number
    eventId: number
    _all: number
  }


  export type VolunteerAvgAggregateInputType = {
    eventHostTime?: true
    maxDailyHostTime?: true
  }

  export type VolunteerSumAggregateInputType = {
    eventHostTime?: true
    maxDailyHostTime?: true
  }

  export type VolunteerMinAggregateInputType = {
    id?: true
    volunteerId?: true
    jobType?: true
    eventHostTime?: true
    maxDailyHostTime?: true
    specificGame?: true
    specificRunner?: true
    additionalInfo?: true
    experience?: true
    favMeme?: true
    runnerManagementAvailability?: true
    techAvailablity?: true
    techExperience?: true
    eventId?: true
  }

  export type VolunteerMaxAggregateInputType = {
    id?: true
    volunteerId?: true
    jobType?: true
    eventHostTime?: true
    maxDailyHostTime?: true
    specificGame?: true
    specificRunner?: true
    additionalInfo?: true
    experience?: true
    favMeme?: true
    runnerManagementAvailability?: true
    techAvailablity?: true
    techExperience?: true
    eventId?: true
  }

  export type VolunteerCountAggregateInputType = {
    id?: true
    volunteerId?: true
    jobType?: true
    eventHostTime?: true
    maxDailyHostTime?: true
    dayTimes?: true
    specificGame?: true
    specificRunner?: true
    additionalInfo?: true
    experience?: true
    favMeme?: true
    runnerManagementAvailability?: true
    techAvailablity?: true
    techExperience?: true
    eventId?: true
    _all?: true
  }

  export type VolunteerAggregateArgs = {
    /**
     * Filter which Volunteer to aggregate.
     * 
    **/
    where?: VolunteerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Volunteers to fetch.
     * 
    **/
    orderBy?: Enumerable<VolunteerOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: VolunteerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Volunteers from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Volunteers.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Volunteers
    **/
    _count?: true | VolunteerCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VolunteerAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VolunteerSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VolunteerMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VolunteerMaxAggregateInputType
  }

  export type GetVolunteerAggregateType<T extends VolunteerAggregateArgs> = {
        [P in keyof T & keyof AggregateVolunteer]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVolunteer[P]>
      : GetScalarType<T[P], AggregateVolunteer[P]>
  }




  export type VolunteerGroupByArgs = {
    where?: VolunteerWhereInput
    orderBy?: Enumerable<VolunteerOrderByWithAggregationInput>
    by: Array<VolunteerScalarFieldEnum>
    having?: VolunteerScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VolunteerCountAggregateInputType | true
    _avg?: VolunteerAvgAggregateInputType
    _sum?: VolunteerSumAggregateInputType
    _min?: VolunteerMinAggregateInputType
    _max?: VolunteerMaxAggregateInputType
  }


  export type VolunteerGroupByOutputType = {
    id: string
    volunteerId: string | null
    jobType: VolunteerJobTypeType | null
    eventHostTime: number | null
    maxDailyHostTime: number | null
    dayTimes: JsonValue | null
    specificGame: string
    specificRunner: string
    additionalInfo: string
    experience: string
    favMeme: string
    runnerManagementAvailability: string
    techAvailablity: string
    techExperience: string
    eventId: string | null
    _count: VolunteerCountAggregateOutputType | null
    _avg: VolunteerAvgAggregateOutputType | null
    _sum: VolunteerSumAggregateOutputType | null
    _min: VolunteerMinAggregateOutputType | null
    _max: VolunteerMaxAggregateOutputType | null
  }

  type GetVolunteerGroupByPayload<T extends VolunteerGroupByArgs> = PrismaPromise<
    Array<
      PickArray<VolunteerGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VolunteerGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VolunteerGroupByOutputType[P]>
            : GetScalarType<T[P], VolunteerGroupByOutputType[P]>
        }
      >
    >


  export type VolunteerSelect = {
    id?: boolean
    volunteer?: boolean | UserArgs
    volunteerId?: boolean
    jobType?: boolean
    eventHostTime?: boolean
    maxDailyHostTime?: boolean
    dayTimes?: boolean
    specificGame?: boolean
    specificRunner?: boolean
    additionalInfo?: boolean
    experience?: boolean
    favMeme?: boolean
    runnerManagementAvailability?: boolean
    techAvailablity?: boolean
    techExperience?: boolean
    event?: boolean | EventArgs
    eventId?: boolean
  }

  export type VolunteerInclude = {
    volunteer?: boolean | UserArgs
    event?: boolean | EventArgs
  }

  export type VolunteerGetPayload<
    S extends boolean | null | undefined | VolunteerArgs,
    U = keyof S
      > = S extends true
        ? Volunteer
    : S extends undefined
    ? never
    : S extends VolunteerArgs | VolunteerFindManyArgs
    ?'include' extends U
    ? Volunteer  & {
    [P in TrueKeys<S['include']>]:
        P extends 'volunteer' ? UserGetPayload<Exclude<S['include'], undefined | null>[P]> | null :
        P extends 'event' ? EventGetPayload<Exclude<S['include'], undefined | null>[P]> | null :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'volunteer' ? UserGetPayload<Exclude<S['select'], undefined | null>[P]> | null :
        P extends 'event' ? EventGetPayload<Exclude<S['select'], undefined | null>[P]> | null :  P extends keyof Volunteer ? Volunteer[P] : never
  } 
    : Volunteer
  : Volunteer


  type VolunteerCountArgs = Merge<
    Omit<VolunteerFindManyArgs, 'select' | 'include'> & {
      select?: VolunteerCountAggregateInputType | true
    }
  >

  export interface VolunteerDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Volunteer that matches the filter.
     * @param {VolunteerFindUniqueArgs} args - Arguments to find a Volunteer
     * @example
     * // Get one Volunteer
     * const volunteer = await prisma.volunteer.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends VolunteerFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, VolunteerFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Volunteer'> extends True ? CheckSelect<T, Prisma__VolunteerClient<Volunteer>, Prisma__VolunteerClient<VolunteerGetPayload<T>>> : CheckSelect<T, Prisma__VolunteerClient<Volunteer | null >, Prisma__VolunteerClient<VolunteerGetPayload<T> | null >>

    /**
     * Find the first Volunteer that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VolunteerFindFirstArgs} args - Arguments to find a Volunteer
     * @example
     * // Get one Volunteer
     * const volunteer = await prisma.volunteer.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends VolunteerFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, VolunteerFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Volunteer'> extends True ? CheckSelect<T, Prisma__VolunteerClient<Volunteer>, Prisma__VolunteerClient<VolunteerGetPayload<T>>> : CheckSelect<T, Prisma__VolunteerClient<Volunteer | null >, Prisma__VolunteerClient<VolunteerGetPayload<T> | null >>

    /**
     * Find zero or more Volunteers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VolunteerFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Volunteers
     * const volunteers = await prisma.volunteer.findMany()
     * 
     * // Get first 10 Volunteers
     * const volunteers = await prisma.volunteer.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const volunteerWithIdOnly = await prisma.volunteer.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends VolunteerFindManyArgs>(
      args?: SelectSubset<T, VolunteerFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<Volunteer>>, PrismaPromise<Array<VolunteerGetPayload<T>>>>

    /**
     * Create a Volunteer.
     * @param {VolunteerCreateArgs} args - Arguments to create a Volunteer.
     * @example
     * // Create one Volunteer
     * const Volunteer = await prisma.volunteer.create({
     *   data: {
     *     // ... data to create a Volunteer
     *   }
     * })
     * 
    **/
    create<T extends VolunteerCreateArgs>(
      args: SelectSubset<T, VolunteerCreateArgs>
    ): CheckSelect<T, Prisma__VolunteerClient<Volunteer>, Prisma__VolunteerClient<VolunteerGetPayload<T>>>

    /**
     * Create many Volunteers.
     *     @param {VolunteerCreateManyArgs} args - Arguments to create many Volunteers.
     *     @example
     *     // Create many Volunteers
     *     const volunteer = await prisma.volunteer.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends VolunteerCreateManyArgs>(
      args?: SelectSubset<T, VolunteerCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Volunteer.
     * @param {VolunteerDeleteArgs} args - Arguments to delete one Volunteer.
     * @example
     * // Delete one Volunteer
     * const Volunteer = await prisma.volunteer.delete({
     *   where: {
     *     // ... filter to delete one Volunteer
     *   }
     * })
     * 
    **/
    delete<T extends VolunteerDeleteArgs>(
      args: SelectSubset<T, VolunteerDeleteArgs>
    ): CheckSelect<T, Prisma__VolunteerClient<Volunteer>, Prisma__VolunteerClient<VolunteerGetPayload<T>>>

    /**
     * Update one Volunteer.
     * @param {VolunteerUpdateArgs} args - Arguments to update one Volunteer.
     * @example
     * // Update one Volunteer
     * const volunteer = await prisma.volunteer.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends VolunteerUpdateArgs>(
      args: SelectSubset<T, VolunteerUpdateArgs>
    ): CheckSelect<T, Prisma__VolunteerClient<Volunteer>, Prisma__VolunteerClient<VolunteerGetPayload<T>>>

    /**
     * Delete zero or more Volunteers.
     * @param {VolunteerDeleteManyArgs} args - Arguments to filter Volunteers to delete.
     * @example
     * // Delete a few Volunteers
     * const { count } = await prisma.volunteer.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends VolunteerDeleteManyArgs>(
      args?: SelectSubset<T, VolunteerDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Volunteers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VolunteerUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Volunteers
     * const volunteer = await prisma.volunteer.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends VolunteerUpdateManyArgs>(
      args: SelectSubset<T, VolunteerUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Volunteer.
     * @param {VolunteerUpsertArgs} args - Arguments to update or create a Volunteer.
     * @example
     * // Update or create a Volunteer
     * const volunteer = await prisma.volunteer.upsert({
     *   create: {
     *     // ... data to create a Volunteer
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Volunteer we want to update
     *   }
     * })
    **/
    upsert<T extends VolunteerUpsertArgs>(
      args: SelectSubset<T, VolunteerUpsertArgs>
    ): CheckSelect<T, Prisma__VolunteerClient<Volunteer>, Prisma__VolunteerClient<VolunteerGetPayload<T>>>

    /**
     * Find one Volunteer that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {VolunteerFindUniqueOrThrowArgs} args - Arguments to find a Volunteer
     * @example
     * // Get one Volunteer
     * const volunteer = await prisma.volunteer.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends VolunteerFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, VolunteerFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__VolunteerClient<Volunteer>, Prisma__VolunteerClient<VolunteerGetPayload<T>>>

    /**
     * Find the first Volunteer that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VolunteerFindFirstOrThrowArgs} args - Arguments to find a Volunteer
     * @example
     * // Get one Volunteer
     * const volunteer = await prisma.volunteer.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends VolunteerFindFirstOrThrowArgs>(
      args?: SelectSubset<T, VolunteerFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__VolunteerClient<Volunteer>, Prisma__VolunteerClient<VolunteerGetPayload<T>>>

    /**
     * Count the number of Volunteers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VolunteerCountArgs} args - Arguments to filter Volunteers to count.
     * @example
     * // Count the number of Volunteers
     * const count = await prisma.volunteer.count({
     *   where: {
     *     // ... the filter for the Volunteers we want to count
     *   }
     * })
    **/
    count<T extends VolunteerCountArgs>(
      args?: Subset<T, VolunteerCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VolunteerCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Volunteer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VolunteerAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VolunteerAggregateArgs>(args: Subset<T, VolunteerAggregateArgs>): PrismaPromise<GetVolunteerAggregateType<T>>

    /**
     * Group by Volunteer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VolunteerGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VolunteerGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VolunteerGroupByArgs['orderBy'] }
        : { orderBy?: VolunteerGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VolunteerGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVolunteerGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Volunteer.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__VolunteerClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    volunteer<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    event<T extends EventArgs = {}>(args?: Subset<T, EventArgs>): CheckSelect<T, Prisma__EventClient<Event | null >, Prisma__EventClient<EventGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Volunteer base type for findUnique actions
   */
  export type VolunteerFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Volunteer
     * 
    **/
    select?: VolunteerSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: VolunteerInclude | null
    /**
     * Filter, which Volunteer to fetch.
     * 
    **/
    where: VolunteerWhereUniqueInput
  }

  /**
   * Volunteer: findUnique
   */
  export interface VolunteerFindUniqueArgs extends VolunteerFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Volunteer base type for findFirst actions
   */
  export type VolunteerFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Volunteer
     * 
    **/
    select?: VolunteerSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: VolunteerInclude | null
    /**
     * Filter, which Volunteer to fetch.
     * 
    **/
    where?: VolunteerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Volunteers to fetch.
     * 
    **/
    orderBy?: Enumerable<VolunteerOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Volunteers.
     * 
    **/
    cursor?: VolunteerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Volunteers from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Volunteers.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Volunteers.
     * 
    **/
    distinct?: Enumerable<VolunteerScalarFieldEnum>
  }

  /**
   * Volunteer: findFirst
   */
  export interface VolunteerFindFirstArgs extends VolunteerFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Volunteer findMany
   */
  export type VolunteerFindManyArgs = {
    /**
     * Select specific fields to fetch from the Volunteer
     * 
    **/
    select?: VolunteerSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: VolunteerInclude | null
    /**
     * Filter, which Volunteers to fetch.
     * 
    **/
    where?: VolunteerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Volunteers to fetch.
     * 
    **/
    orderBy?: Enumerable<VolunteerOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Volunteers.
     * 
    **/
    cursor?: VolunteerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Volunteers from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Volunteers.
     * 
    **/
    skip?: number
    distinct?: Enumerable<VolunteerScalarFieldEnum>
  }


  /**
   * Volunteer create
   */
  export type VolunteerCreateArgs = {
    /**
     * Select specific fields to fetch from the Volunteer
     * 
    **/
    select?: VolunteerSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: VolunteerInclude | null
    /**
     * The data needed to create a Volunteer.
     * 
    **/
    data: XOR<VolunteerCreateInput, VolunteerUncheckedCreateInput>
  }


  /**
   * Volunteer createMany
   */
  export type VolunteerCreateManyArgs = {
    /**
     * The data used to create many Volunteers.
     * 
    **/
    data: Enumerable<VolunteerCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Volunteer update
   */
  export type VolunteerUpdateArgs = {
    /**
     * Select specific fields to fetch from the Volunteer
     * 
    **/
    select?: VolunteerSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: VolunteerInclude | null
    /**
     * The data needed to update a Volunteer.
     * 
    **/
    data: XOR<VolunteerUpdateInput, VolunteerUncheckedUpdateInput>
    /**
     * Choose, which Volunteer to update.
     * 
    **/
    where: VolunteerWhereUniqueInput
  }


  /**
   * Volunteer updateMany
   */
  export type VolunteerUpdateManyArgs = {
    /**
     * The data used to update Volunteers.
     * 
    **/
    data: XOR<VolunteerUpdateManyMutationInput, VolunteerUncheckedUpdateManyInput>
    /**
     * Filter which Volunteers to update
     * 
    **/
    where?: VolunteerWhereInput
  }


  /**
   * Volunteer upsert
   */
  export type VolunteerUpsertArgs = {
    /**
     * Select specific fields to fetch from the Volunteer
     * 
    **/
    select?: VolunteerSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: VolunteerInclude | null
    /**
     * The filter to search for the Volunteer to update in case it exists.
     * 
    **/
    where: VolunteerWhereUniqueInput
    /**
     * In case the Volunteer found by the `where` argument doesn't exist, create a new Volunteer with this data.
     * 
    **/
    create: XOR<VolunteerCreateInput, VolunteerUncheckedCreateInput>
    /**
     * In case the Volunteer was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<VolunteerUpdateInput, VolunteerUncheckedUpdateInput>
  }


  /**
   * Volunteer delete
   */
  export type VolunteerDeleteArgs = {
    /**
     * Select specific fields to fetch from the Volunteer
     * 
    **/
    select?: VolunteerSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: VolunteerInclude | null
    /**
     * Filter which Volunteer to delete.
     * 
    **/
    where: VolunteerWhereUniqueInput
  }


  /**
   * Volunteer deleteMany
   */
  export type VolunteerDeleteManyArgs = {
    /**
     * Filter which Volunteers to delete
     * 
    **/
    where?: VolunteerWhereInput
  }


  /**
   * Volunteer: findUniqueOrThrow
   */
  export type VolunteerFindUniqueOrThrowArgs = VolunteerFindUniqueArgsBase
      

  /**
   * Volunteer: findFirstOrThrow
   */
  export type VolunteerFindFirstOrThrowArgs = VolunteerFindFirstArgsBase
      

  /**
   * Volunteer without action
   */
  export type VolunteerArgs = {
    /**
     * Select specific fields to fetch from the Volunteer
     * 
    **/
    select?: VolunteerSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: VolunteerInclude | null
  }



  /**
   * Model ShirtOrder
   */


  export type AggregateShirtOrder = {
    _count: ShirtOrderCountAggregateOutputType | null
    _min: ShirtOrderMinAggregateOutputType | null
    _max: ShirtOrderMaxAggregateOutputType | null
  }

  export type ShirtOrderMinAggregateOutputType = {
    id: string | null
    userId: string | null
    taken: boolean | null
    method: ShirtOrderMethodType | null
    shirtID: string | null
    paid: boolean | null
    notes: string | null
    size: ShirtOrderSizeType | null
    colour: ShirtOrderColourType | null
    stripeID: string | null
    created: Date | null
  }

  export type ShirtOrderMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    taken: boolean | null
    method: ShirtOrderMethodType | null
    shirtID: string | null
    paid: boolean | null
    notes: string | null
    size: ShirtOrderSizeType | null
    colour: ShirtOrderColourType | null
    stripeID: string | null
    created: Date | null
  }

  export type ShirtOrderCountAggregateOutputType = {
    id: number
    userId: number
    taken: number
    method: number
    shirtID: number
    paid: number
    notes: number
    size: number
    colour: number
    stripeID: number
    created: number
    _all: number
  }


  export type ShirtOrderMinAggregateInputType = {
    id?: true
    userId?: true
    taken?: true
    method?: true
    shirtID?: true
    paid?: true
    notes?: true
    size?: true
    colour?: true
    stripeID?: true
    created?: true
  }

  export type ShirtOrderMaxAggregateInputType = {
    id?: true
    userId?: true
    taken?: true
    method?: true
    shirtID?: true
    paid?: true
    notes?: true
    size?: true
    colour?: true
    stripeID?: true
    created?: true
  }

  export type ShirtOrderCountAggregateInputType = {
    id?: true
    userId?: true
    taken?: true
    method?: true
    shirtID?: true
    paid?: true
    notes?: true
    size?: true
    colour?: true
    stripeID?: true
    created?: true
    _all?: true
  }

  export type ShirtOrderAggregateArgs = {
    /**
     * Filter which ShirtOrder to aggregate.
     * 
    **/
    where?: ShirtOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShirtOrders to fetch.
     * 
    **/
    orderBy?: Enumerable<ShirtOrderOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: ShirtOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShirtOrders from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShirtOrders.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ShirtOrders
    **/
    _count?: true | ShirtOrderCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ShirtOrderMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ShirtOrderMaxAggregateInputType
  }

  export type GetShirtOrderAggregateType<T extends ShirtOrderAggregateArgs> = {
        [P in keyof T & keyof AggregateShirtOrder]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateShirtOrder[P]>
      : GetScalarType<T[P], AggregateShirtOrder[P]>
  }




  export type ShirtOrderGroupByArgs = {
    where?: ShirtOrderWhereInput
    orderBy?: Enumerable<ShirtOrderOrderByWithAggregationInput>
    by: Array<ShirtOrderScalarFieldEnum>
    having?: ShirtOrderScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ShirtOrderCountAggregateInputType | true
    _min?: ShirtOrderMinAggregateInputType
    _max?: ShirtOrderMaxAggregateInputType
  }


  export type ShirtOrderGroupByOutputType = {
    id: string
    userId: string | null
    taken: boolean
    method: ShirtOrderMethodType
    shirtID: string
    paid: boolean
    notes: string
    size: ShirtOrderSizeType
    colour: ShirtOrderColourType
    stripeID: string
    created: Date | null
    _count: ShirtOrderCountAggregateOutputType | null
    _min: ShirtOrderMinAggregateOutputType | null
    _max: ShirtOrderMaxAggregateOutputType | null
  }

  type GetShirtOrderGroupByPayload<T extends ShirtOrderGroupByArgs> = PrismaPromise<
    Array<
      PickArray<ShirtOrderGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ShirtOrderGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ShirtOrderGroupByOutputType[P]>
            : GetScalarType<T[P], ShirtOrderGroupByOutputType[P]>
        }
      >
    >


  export type ShirtOrderSelect = {
    id?: boolean
    user?: boolean | UserArgs
    userId?: boolean
    taken?: boolean
    method?: boolean
    shirtID?: boolean
    paid?: boolean
    notes?: boolean
    size?: boolean
    colour?: boolean
    stripeID?: boolean
    created?: boolean
  }

  export type ShirtOrderInclude = {
    user?: boolean | UserArgs
  }

  export type ShirtOrderGetPayload<
    S extends boolean | null | undefined | ShirtOrderArgs,
    U = keyof S
      > = S extends true
        ? ShirtOrder
    : S extends undefined
    ? never
    : S extends ShirtOrderArgs | ShirtOrderFindManyArgs
    ?'include' extends U
    ? ShirtOrder  & {
    [P in TrueKeys<S['include']>]:
        P extends 'user' ? UserGetPayload<Exclude<S['include'], undefined | null>[P]> | null :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'user' ? UserGetPayload<Exclude<S['select'], undefined | null>[P]> | null :  P extends keyof ShirtOrder ? ShirtOrder[P] : never
  } 
    : ShirtOrder
  : ShirtOrder


  type ShirtOrderCountArgs = Merge<
    Omit<ShirtOrderFindManyArgs, 'select' | 'include'> & {
      select?: ShirtOrderCountAggregateInputType | true
    }
  >

  export interface ShirtOrderDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one ShirtOrder that matches the filter.
     * @param {ShirtOrderFindUniqueArgs} args - Arguments to find a ShirtOrder
     * @example
     * // Get one ShirtOrder
     * const shirtOrder = await prisma.shirtOrder.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ShirtOrderFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, ShirtOrderFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'ShirtOrder'> extends True ? CheckSelect<T, Prisma__ShirtOrderClient<ShirtOrder>, Prisma__ShirtOrderClient<ShirtOrderGetPayload<T>>> : CheckSelect<T, Prisma__ShirtOrderClient<ShirtOrder | null >, Prisma__ShirtOrderClient<ShirtOrderGetPayload<T> | null >>

    /**
     * Find the first ShirtOrder that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShirtOrderFindFirstArgs} args - Arguments to find a ShirtOrder
     * @example
     * // Get one ShirtOrder
     * const shirtOrder = await prisma.shirtOrder.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ShirtOrderFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, ShirtOrderFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'ShirtOrder'> extends True ? CheckSelect<T, Prisma__ShirtOrderClient<ShirtOrder>, Prisma__ShirtOrderClient<ShirtOrderGetPayload<T>>> : CheckSelect<T, Prisma__ShirtOrderClient<ShirtOrder | null >, Prisma__ShirtOrderClient<ShirtOrderGetPayload<T> | null >>

    /**
     * Find zero or more ShirtOrders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShirtOrderFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ShirtOrders
     * const shirtOrders = await prisma.shirtOrder.findMany()
     * 
     * // Get first 10 ShirtOrders
     * const shirtOrders = await prisma.shirtOrder.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const shirtOrderWithIdOnly = await prisma.shirtOrder.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends ShirtOrderFindManyArgs>(
      args?: SelectSubset<T, ShirtOrderFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<ShirtOrder>>, PrismaPromise<Array<ShirtOrderGetPayload<T>>>>

    /**
     * Create a ShirtOrder.
     * @param {ShirtOrderCreateArgs} args - Arguments to create a ShirtOrder.
     * @example
     * // Create one ShirtOrder
     * const ShirtOrder = await prisma.shirtOrder.create({
     *   data: {
     *     // ... data to create a ShirtOrder
     *   }
     * })
     * 
    **/
    create<T extends ShirtOrderCreateArgs>(
      args: SelectSubset<T, ShirtOrderCreateArgs>
    ): CheckSelect<T, Prisma__ShirtOrderClient<ShirtOrder>, Prisma__ShirtOrderClient<ShirtOrderGetPayload<T>>>

    /**
     * Create many ShirtOrders.
     *     @param {ShirtOrderCreateManyArgs} args - Arguments to create many ShirtOrders.
     *     @example
     *     // Create many ShirtOrders
     *     const shirtOrder = await prisma.shirtOrder.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ShirtOrderCreateManyArgs>(
      args?: SelectSubset<T, ShirtOrderCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a ShirtOrder.
     * @param {ShirtOrderDeleteArgs} args - Arguments to delete one ShirtOrder.
     * @example
     * // Delete one ShirtOrder
     * const ShirtOrder = await prisma.shirtOrder.delete({
     *   where: {
     *     // ... filter to delete one ShirtOrder
     *   }
     * })
     * 
    **/
    delete<T extends ShirtOrderDeleteArgs>(
      args: SelectSubset<T, ShirtOrderDeleteArgs>
    ): CheckSelect<T, Prisma__ShirtOrderClient<ShirtOrder>, Prisma__ShirtOrderClient<ShirtOrderGetPayload<T>>>

    /**
     * Update one ShirtOrder.
     * @param {ShirtOrderUpdateArgs} args - Arguments to update one ShirtOrder.
     * @example
     * // Update one ShirtOrder
     * const shirtOrder = await prisma.shirtOrder.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ShirtOrderUpdateArgs>(
      args: SelectSubset<T, ShirtOrderUpdateArgs>
    ): CheckSelect<T, Prisma__ShirtOrderClient<ShirtOrder>, Prisma__ShirtOrderClient<ShirtOrderGetPayload<T>>>

    /**
     * Delete zero or more ShirtOrders.
     * @param {ShirtOrderDeleteManyArgs} args - Arguments to filter ShirtOrders to delete.
     * @example
     * // Delete a few ShirtOrders
     * const { count } = await prisma.shirtOrder.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ShirtOrderDeleteManyArgs>(
      args?: SelectSubset<T, ShirtOrderDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more ShirtOrders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShirtOrderUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ShirtOrders
     * const shirtOrder = await prisma.shirtOrder.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ShirtOrderUpdateManyArgs>(
      args: SelectSubset<T, ShirtOrderUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one ShirtOrder.
     * @param {ShirtOrderUpsertArgs} args - Arguments to update or create a ShirtOrder.
     * @example
     * // Update or create a ShirtOrder
     * const shirtOrder = await prisma.shirtOrder.upsert({
     *   create: {
     *     // ... data to create a ShirtOrder
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ShirtOrder we want to update
     *   }
     * })
    **/
    upsert<T extends ShirtOrderUpsertArgs>(
      args: SelectSubset<T, ShirtOrderUpsertArgs>
    ): CheckSelect<T, Prisma__ShirtOrderClient<ShirtOrder>, Prisma__ShirtOrderClient<ShirtOrderGetPayload<T>>>

    /**
     * Find one ShirtOrder that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {ShirtOrderFindUniqueOrThrowArgs} args - Arguments to find a ShirtOrder
     * @example
     * // Get one ShirtOrder
     * const shirtOrder = await prisma.shirtOrder.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ShirtOrderFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, ShirtOrderFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__ShirtOrderClient<ShirtOrder>, Prisma__ShirtOrderClient<ShirtOrderGetPayload<T>>>

    /**
     * Find the first ShirtOrder that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShirtOrderFindFirstOrThrowArgs} args - Arguments to find a ShirtOrder
     * @example
     * // Get one ShirtOrder
     * const shirtOrder = await prisma.shirtOrder.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ShirtOrderFindFirstOrThrowArgs>(
      args?: SelectSubset<T, ShirtOrderFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__ShirtOrderClient<ShirtOrder>, Prisma__ShirtOrderClient<ShirtOrderGetPayload<T>>>

    /**
     * Count the number of ShirtOrders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShirtOrderCountArgs} args - Arguments to filter ShirtOrders to count.
     * @example
     * // Count the number of ShirtOrders
     * const count = await prisma.shirtOrder.count({
     *   where: {
     *     // ... the filter for the ShirtOrders we want to count
     *   }
     * })
    **/
    count<T extends ShirtOrderCountArgs>(
      args?: Subset<T, ShirtOrderCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ShirtOrderCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ShirtOrder.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShirtOrderAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ShirtOrderAggregateArgs>(args: Subset<T, ShirtOrderAggregateArgs>): PrismaPromise<GetShirtOrderAggregateType<T>>

    /**
     * Group by ShirtOrder.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShirtOrderGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ShirtOrderGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ShirtOrderGroupByArgs['orderBy'] }
        : { orderBy?: ShirtOrderGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ShirtOrderGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetShirtOrderGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for ShirtOrder.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ShirtOrderClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    user<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null >, Prisma__UserClient<UserGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * ShirtOrder base type for findUnique actions
   */
  export type ShirtOrderFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the ShirtOrder
     * 
    **/
    select?: ShirtOrderSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShirtOrderInclude | null
    /**
     * Filter, which ShirtOrder to fetch.
     * 
    **/
    where: ShirtOrderWhereUniqueInput
  }

  /**
   * ShirtOrder: findUnique
   */
  export interface ShirtOrderFindUniqueArgs extends ShirtOrderFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * ShirtOrder base type for findFirst actions
   */
  export type ShirtOrderFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the ShirtOrder
     * 
    **/
    select?: ShirtOrderSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShirtOrderInclude | null
    /**
     * Filter, which ShirtOrder to fetch.
     * 
    **/
    where?: ShirtOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShirtOrders to fetch.
     * 
    **/
    orderBy?: Enumerable<ShirtOrderOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ShirtOrders.
     * 
    **/
    cursor?: ShirtOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShirtOrders from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShirtOrders.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ShirtOrders.
     * 
    **/
    distinct?: Enumerable<ShirtOrderScalarFieldEnum>
  }

  /**
   * ShirtOrder: findFirst
   */
  export interface ShirtOrderFindFirstArgs extends ShirtOrderFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * ShirtOrder findMany
   */
  export type ShirtOrderFindManyArgs = {
    /**
     * Select specific fields to fetch from the ShirtOrder
     * 
    **/
    select?: ShirtOrderSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShirtOrderInclude | null
    /**
     * Filter, which ShirtOrders to fetch.
     * 
    **/
    where?: ShirtOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShirtOrders to fetch.
     * 
    **/
    orderBy?: Enumerable<ShirtOrderOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ShirtOrders.
     * 
    **/
    cursor?: ShirtOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShirtOrders from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShirtOrders.
     * 
    **/
    skip?: number
    distinct?: Enumerable<ShirtOrderScalarFieldEnum>
  }


  /**
   * ShirtOrder create
   */
  export type ShirtOrderCreateArgs = {
    /**
     * Select specific fields to fetch from the ShirtOrder
     * 
    **/
    select?: ShirtOrderSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShirtOrderInclude | null
    /**
     * The data needed to create a ShirtOrder.
     * 
    **/
    data: XOR<ShirtOrderCreateInput, ShirtOrderUncheckedCreateInput>
  }


  /**
   * ShirtOrder createMany
   */
  export type ShirtOrderCreateManyArgs = {
    /**
     * The data used to create many ShirtOrders.
     * 
    **/
    data: Enumerable<ShirtOrderCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * ShirtOrder update
   */
  export type ShirtOrderUpdateArgs = {
    /**
     * Select specific fields to fetch from the ShirtOrder
     * 
    **/
    select?: ShirtOrderSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShirtOrderInclude | null
    /**
     * The data needed to update a ShirtOrder.
     * 
    **/
    data: XOR<ShirtOrderUpdateInput, ShirtOrderUncheckedUpdateInput>
    /**
     * Choose, which ShirtOrder to update.
     * 
    **/
    where: ShirtOrderWhereUniqueInput
  }


  /**
   * ShirtOrder updateMany
   */
  export type ShirtOrderUpdateManyArgs = {
    /**
     * The data used to update ShirtOrders.
     * 
    **/
    data: XOR<ShirtOrderUpdateManyMutationInput, ShirtOrderUncheckedUpdateManyInput>
    /**
     * Filter which ShirtOrders to update
     * 
    **/
    where?: ShirtOrderWhereInput
  }


  /**
   * ShirtOrder upsert
   */
  export type ShirtOrderUpsertArgs = {
    /**
     * Select specific fields to fetch from the ShirtOrder
     * 
    **/
    select?: ShirtOrderSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShirtOrderInclude | null
    /**
     * The filter to search for the ShirtOrder to update in case it exists.
     * 
    **/
    where: ShirtOrderWhereUniqueInput
    /**
     * In case the ShirtOrder found by the `where` argument doesn't exist, create a new ShirtOrder with this data.
     * 
    **/
    create: XOR<ShirtOrderCreateInput, ShirtOrderUncheckedCreateInput>
    /**
     * In case the ShirtOrder was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<ShirtOrderUpdateInput, ShirtOrderUncheckedUpdateInput>
  }


  /**
   * ShirtOrder delete
   */
  export type ShirtOrderDeleteArgs = {
    /**
     * Select specific fields to fetch from the ShirtOrder
     * 
    **/
    select?: ShirtOrderSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShirtOrderInclude | null
    /**
     * Filter which ShirtOrder to delete.
     * 
    **/
    where: ShirtOrderWhereUniqueInput
  }


  /**
   * ShirtOrder deleteMany
   */
  export type ShirtOrderDeleteManyArgs = {
    /**
     * Filter which ShirtOrders to delete
     * 
    **/
    where?: ShirtOrderWhereInput
  }


  /**
   * ShirtOrder: findUniqueOrThrow
   */
  export type ShirtOrderFindUniqueOrThrowArgs = ShirtOrderFindUniqueArgsBase
      

  /**
   * ShirtOrder: findFirstOrThrow
   */
  export type ShirtOrderFindFirstOrThrowArgs = ShirtOrderFindFirstArgsBase
      

  /**
   * ShirtOrder without action
   */
  export type ShirtOrderArgs = {
    /**
     * Select specific fields to fetch from the ShirtOrder
     * 
    **/
    select?: ShirtOrderSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ShirtOrderInclude | null
  }



  /**
   * Model Incentive
   */


  export type AggregateIncentive = {
    _count: IncentiveCountAggregateOutputType | null
    _min: IncentiveMinAggregateOutputType | null
    _max: IncentiveMaxAggregateOutputType | null
  }

  export type IncentiveMinAggregateOutputType = {
    id: string | null
    runId: string | null
    eventId: string | null
    title: string | null
    notes: string | null
    type: string | null
    active: boolean | null
  }

  export type IncentiveMaxAggregateOutputType = {
    id: string | null
    runId: string | null
    eventId: string | null
    title: string | null
    notes: string | null
    type: string | null
    active: boolean | null
  }

  export type IncentiveCountAggregateOutputType = {
    id: number
    runId: number
    eventId: number
    title: number
    notes: number
    type: number
    data: number
    active: number
    _all: number
  }


  export type IncentiveMinAggregateInputType = {
    id?: true
    runId?: true
    eventId?: true
    title?: true
    notes?: true
    type?: true
    active?: true
  }

  export type IncentiveMaxAggregateInputType = {
    id?: true
    runId?: true
    eventId?: true
    title?: true
    notes?: true
    type?: true
    active?: true
  }

  export type IncentiveCountAggregateInputType = {
    id?: true
    runId?: true
    eventId?: true
    title?: true
    notes?: true
    type?: true
    data?: true
    active?: true
    _all?: true
  }

  export type IncentiveAggregateArgs = {
    /**
     * Filter which Incentive to aggregate.
     * 
    **/
    where?: IncentiveWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Incentives to fetch.
     * 
    **/
    orderBy?: Enumerable<IncentiveOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: IncentiveWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Incentives from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Incentives.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Incentives
    **/
    _count?: true | IncentiveCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: IncentiveMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: IncentiveMaxAggregateInputType
  }

  export type GetIncentiveAggregateType<T extends IncentiveAggregateArgs> = {
        [P in keyof T & keyof AggregateIncentive]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateIncentive[P]>
      : GetScalarType<T[P], AggregateIncentive[P]>
  }




  export type IncentiveGroupByArgs = {
    where?: IncentiveWhereInput
    orderBy?: Enumerable<IncentiveOrderByWithAggregationInput>
    by: Array<IncentiveScalarFieldEnum>
    having?: IncentiveScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: IncentiveCountAggregateInputType | true
    _min?: IncentiveMinAggregateInputType
    _max?: IncentiveMaxAggregateInputType
  }


  export type IncentiveGroupByOutputType = {
    id: string
    runId: string | null
    eventId: string | null
    title: string
    notes: string
    type: string
    data: JsonValue | null
    active: boolean
    _count: IncentiveCountAggregateOutputType | null
    _min: IncentiveMinAggregateOutputType | null
    _max: IncentiveMaxAggregateOutputType | null
  }

  type GetIncentiveGroupByPayload<T extends IncentiveGroupByArgs> = PrismaPromise<
    Array<
      PickArray<IncentiveGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof IncentiveGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], IncentiveGroupByOutputType[P]>
            : GetScalarType<T[P], IncentiveGroupByOutputType[P]>
        }
      >
    >


  export type IncentiveSelect = {
    id?: boolean
    run?: boolean | RunArgs
    runId?: boolean
    event?: boolean | EventArgs
    eventId?: boolean
    title?: boolean
    notes?: boolean
    type?: boolean
    data?: boolean
    active?: boolean
  }

  export type IncentiveInclude = {
    run?: boolean | RunArgs
    event?: boolean | EventArgs
  }

  export type IncentiveGetPayload<
    S extends boolean | null | undefined | IncentiveArgs,
    U = keyof S
      > = S extends true
        ? Incentive
    : S extends undefined
    ? never
    : S extends IncentiveArgs | IncentiveFindManyArgs
    ?'include' extends U
    ? Incentive  & {
    [P in TrueKeys<S['include']>]:
        P extends 'run' ? RunGetPayload<Exclude<S['include'], undefined | null>[P]> | null :
        P extends 'event' ? EventGetPayload<Exclude<S['include'], undefined | null>[P]> | null :  never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
        P extends 'run' ? RunGetPayload<Exclude<S['select'], undefined | null>[P]> | null :
        P extends 'event' ? EventGetPayload<Exclude<S['select'], undefined | null>[P]> | null :  P extends keyof Incentive ? Incentive[P] : never
  } 
    : Incentive
  : Incentive


  type IncentiveCountArgs = Merge<
    Omit<IncentiveFindManyArgs, 'select' | 'include'> & {
      select?: IncentiveCountAggregateInputType | true
    }
  >

  export interface IncentiveDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Incentive that matches the filter.
     * @param {IncentiveFindUniqueArgs} args - Arguments to find a Incentive
     * @example
     * // Get one Incentive
     * const incentive = await prisma.incentive.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends IncentiveFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, IncentiveFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Incentive'> extends True ? CheckSelect<T, Prisma__IncentiveClient<Incentive>, Prisma__IncentiveClient<IncentiveGetPayload<T>>> : CheckSelect<T, Prisma__IncentiveClient<Incentive | null >, Prisma__IncentiveClient<IncentiveGetPayload<T> | null >>

    /**
     * Find the first Incentive that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IncentiveFindFirstArgs} args - Arguments to find a Incentive
     * @example
     * // Get one Incentive
     * const incentive = await prisma.incentive.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends IncentiveFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, IncentiveFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Incentive'> extends True ? CheckSelect<T, Prisma__IncentiveClient<Incentive>, Prisma__IncentiveClient<IncentiveGetPayload<T>>> : CheckSelect<T, Prisma__IncentiveClient<Incentive | null >, Prisma__IncentiveClient<IncentiveGetPayload<T> | null >>

    /**
     * Find zero or more Incentives that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IncentiveFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Incentives
     * const incentives = await prisma.incentive.findMany()
     * 
     * // Get first 10 Incentives
     * const incentives = await prisma.incentive.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const incentiveWithIdOnly = await prisma.incentive.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends IncentiveFindManyArgs>(
      args?: SelectSubset<T, IncentiveFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<Incentive>>, PrismaPromise<Array<IncentiveGetPayload<T>>>>

    /**
     * Create a Incentive.
     * @param {IncentiveCreateArgs} args - Arguments to create a Incentive.
     * @example
     * // Create one Incentive
     * const Incentive = await prisma.incentive.create({
     *   data: {
     *     // ... data to create a Incentive
     *   }
     * })
     * 
    **/
    create<T extends IncentiveCreateArgs>(
      args: SelectSubset<T, IncentiveCreateArgs>
    ): CheckSelect<T, Prisma__IncentiveClient<Incentive>, Prisma__IncentiveClient<IncentiveGetPayload<T>>>

    /**
     * Create many Incentives.
     *     @param {IncentiveCreateManyArgs} args - Arguments to create many Incentives.
     *     @example
     *     // Create many Incentives
     *     const incentive = await prisma.incentive.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends IncentiveCreateManyArgs>(
      args?: SelectSubset<T, IncentiveCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Incentive.
     * @param {IncentiveDeleteArgs} args - Arguments to delete one Incentive.
     * @example
     * // Delete one Incentive
     * const Incentive = await prisma.incentive.delete({
     *   where: {
     *     // ... filter to delete one Incentive
     *   }
     * })
     * 
    **/
    delete<T extends IncentiveDeleteArgs>(
      args: SelectSubset<T, IncentiveDeleteArgs>
    ): CheckSelect<T, Prisma__IncentiveClient<Incentive>, Prisma__IncentiveClient<IncentiveGetPayload<T>>>

    /**
     * Update one Incentive.
     * @param {IncentiveUpdateArgs} args - Arguments to update one Incentive.
     * @example
     * // Update one Incentive
     * const incentive = await prisma.incentive.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends IncentiveUpdateArgs>(
      args: SelectSubset<T, IncentiveUpdateArgs>
    ): CheckSelect<T, Prisma__IncentiveClient<Incentive>, Prisma__IncentiveClient<IncentiveGetPayload<T>>>

    /**
     * Delete zero or more Incentives.
     * @param {IncentiveDeleteManyArgs} args - Arguments to filter Incentives to delete.
     * @example
     * // Delete a few Incentives
     * const { count } = await prisma.incentive.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends IncentiveDeleteManyArgs>(
      args?: SelectSubset<T, IncentiveDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Incentives.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IncentiveUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Incentives
     * const incentive = await prisma.incentive.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends IncentiveUpdateManyArgs>(
      args: SelectSubset<T, IncentiveUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Incentive.
     * @param {IncentiveUpsertArgs} args - Arguments to update or create a Incentive.
     * @example
     * // Update or create a Incentive
     * const incentive = await prisma.incentive.upsert({
     *   create: {
     *     // ... data to create a Incentive
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Incentive we want to update
     *   }
     * })
    **/
    upsert<T extends IncentiveUpsertArgs>(
      args: SelectSubset<T, IncentiveUpsertArgs>
    ): CheckSelect<T, Prisma__IncentiveClient<Incentive>, Prisma__IncentiveClient<IncentiveGetPayload<T>>>

    /**
     * Find one Incentive that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {IncentiveFindUniqueOrThrowArgs} args - Arguments to find a Incentive
     * @example
     * // Get one Incentive
     * const incentive = await prisma.incentive.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends IncentiveFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, IncentiveFindUniqueOrThrowArgs>
    ): CheckSelect<T, Prisma__IncentiveClient<Incentive>, Prisma__IncentiveClient<IncentiveGetPayload<T>>>

    /**
     * Find the first Incentive that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IncentiveFindFirstOrThrowArgs} args - Arguments to find a Incentive
     * @example
     * // Get one Incentive
     * const incentive = await prisma.incentive.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends IncentiveFindFirstOrThrowArgs>(
      args?: SelectSubset<T, IncentiveFindFirstOrThrowArgs>
    ): CheckSelect<T, Prisma__IncentiveClient<Incentive>, Prisma__IncentiveClient<IncentiveGetPayload<T>>>

    /**
     * Count the number of Incentives.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IncentiveCountArgs} args - Arguments to filter Incentives to count.
     * @example
     * // Count the number of Incentives
     * const count = await prisma.incentive.count({
     *   where: {
     *     // ... the filter for the Incentives we want to count
     *   }
     * })
    **/
    count<T extends IncentiveCountArgs>(
      args?: Subset<T, IncentiveCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], IncentiveCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Incentive.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IncentiveAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends IncentiveAggregateArgs>(args: Subset<T, IncentiveAggregateArgs>): PrismaPromise<GetIncentiveAggregateType<T>>

    /**
     * Group by Incentive.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IncentiveGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends IncentiveGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: IncentiveGroupByArgs['orderBy'] }
        : { orderBy?: IncentiveGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, IncentiveGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetIncentiveGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Incentive.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__IncentiveClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    run<T extends RunArgs = {}>(args?: Subset<T, RunArgs>): CheckSelect<T, Prisma__RunClient<Run | null >, Prisma__RunClient<RunGetPayload<T> | null >>;

    event<T extends EventArgs = {}>(args?: Subset<T, EventArgs>): CheckSelect<T, Prisma__EventClient<Event | null >, Prisma__EventClient<EventGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Incentive base type for findUnique actions
   */
  export type IncentiveFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Incentive
     * 
    **/
    select?: IncentiveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: IncentiveInclude | null
    /**
     * Filter, which Incentive to fetch.
     * 
    **/
    where: IncentiveWhereUniqueInput
  }

  /**
   * Incentive: findUnique
   */
  export interface IncentiveFindUniqueArgs extends IncentiveFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Incentive base type for findFirst actions
   */
  export type IncentiveFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Incentive
     * 
    **/
    select?: IncentiveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: IncentiveInclude | null
    /**
     * Filter, which Incentive to fetch.
     * 
    **/
    where?: IncentiveWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Incentives to fetch.
     * 
    **/
    orderBy?: Enumerable<IncentiveOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Incentives.
     * 
    **/
    cursor?: IncentiveWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Incentives from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Incentives.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Incentives.
     * 
    **/
    distinct?: Enumerable<IncentiveScalarFieldEnum>
  }

  /**
   * Incentive: findFirst
   */
  export interface IncentiveFindFirstArgs extends IncentiveFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Incentive findMany
   */
  export type IncentiveFindManyArgs = {
    /**
     * Select specific fields to fetch from the Incentive
     * 
    **/
    select?: IncentiveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: IncentiveInclude | null
    /**
     * Filter, which Incentives to fetch.
     * 
    **/
    where?: IncentiveWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Incentives to fetch.
     * 
    **/
    orderBy?: Enumerable<IncentiveOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Incentives.
     * 
    **/
    cursor?: IncentiveWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Incentives from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Incentives.
     * 
    **/
    skip?: number
    distinct?: Enumerable<IncentiveScalarFieldEnum>
  }


  /**
   * Incentive create
   */
  export type IncentiveCreateArgs = {
    /**
     * Select specific fields to fetch from the Incentive
     * 
    **/
    select?: IncentiveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: IncentiveInclude | null
    /**
     * The data needed to create a Incentive.
     * 
    **/
    data: XOR<IncentiveCreateInput, IncentiveUncheckedCreateInput>
  }


  /**
   * Incentive createMany
   */
  export type IncentiveCreateManyArgs = {
    /**
     * The data used to create many Incentives.
     * 
    **/
    data: Enumerable<IncentiveCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Incentive update
   */
  export type IncentiveUpdateArgs = {
    /**
     * Select specific fields to fetch from the Incentive
     * 
    **/
    select?: IncentiveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: IncentiveInclude | null
    /**
     * The data needed to update a Incentive.
     * 
    **/
    data: XOR<IncentiveUpdateInput, IncentiveUncheckedUpdateInput>
    /**
     * Choose, which Incentive to update.
     * 
    **/
    where: IncentiveWhereUniqueInput
  }


  /**
   * Incentive updateMany
   */
  export type IncentiveUpdateManyArgs = {
    /**
     * The data used to update Incentives.
     * 
    **/
    data: XOR<IncentiveUpdateManyMutationInput, IncentiveUncheckedUpdateManyInput>
    /**
     * Filter which Incentives to update
     * 
    **/
    where?: IncentiveWhereInput
  }


  /**
   * Incentive upsert
   */
  export type IncentiveUpsertArgs = {
    /**
     * Select specific fields to fetch from the Incentive
     * 
    **/
    select?: IncentiveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: IncentiveInclude | null
    /**
     * The filter to search for the Incentive to update in case it exists.
     * 
    **/
    where: IncentiveWhereUniqueInput
    /**
     * In case the Incentive found by the `where` argument doesn't exist, create a new Incentive with this data.
     * 
    **/
    create: XOR<IncentiveCreateInput, IncentiveUncheckedCreateInput>
    /**
     * In case the Incentive was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<IncentiveUpdateInput, IncentiveUncheckedUpdateInput>
  }


  /**
   * Incentive delete
   */
  export type IncentiveDeleteArgs = {
    /**
     * Select specific fields to fetch from the Incentive
     * 
    **/
    select?: IncentiveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: IncentiveInclude | null
    /**
     * Filter which Incentive to delete.
     * 
    **/
    where: IncentiveWhereUniqueInput
  }


  /**
   * Incentive deleteMany
   */
  export type IncentiveDeleteManyArgs = {
    /**
     * Filter which Incentives to delete
     * 
    **/
    where?: IncentiveWhereInput
  }


  /**
   * Incentive: findUniqueOrThrow
   */
  export type IncentiveFindUniqueOrThrowArgs = IncentiveFindUniqueArgsBase
      

  /**
   * Incentive: findFirstOrThrow
   */
  export type IncentiveFindFirstOrThrowArgs = IncentiveFindFirstArgsBase
      

  /**
   * Incentive without action
   */
  export type IncentiveArgs = {
    /**
     * Select specific fields to fetch from the Incentive
     * 
    **/
    select?: IncentiveSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: IncentiveInclude | null
  }



  /**
   * Enums
   */

  // Based on
  // https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275

  export const EventScalarFieldEnum: {
    id: 'id',
    name: 'name',
    shortname: 'shortname',
    published: 'published',
    acceptingSubmissions: 'acceptingSubmissions',
    acceptingTickets: 'acceptingTickets',
    scheduleReleased: 'scheduleReleased',
    acceptingVolunteers: 'acceptingVolunteers',
    acceptingBackups: 'acceptingBackups',
    acceptingShirts: 'acceptingShirts',
    eventTimezone: 'eventTimezone',
    startDate: 'startDate',
    endDate: 'endDate',
    raised: 'raised',
    postEventPage: 'postEventPage',
    logo_filesize: 'logo_filesize',
    logo_extension: 'logo_extension',
    logo_width: 'logo_width',
    logo_height: 'logo_height',
    logo_id: 'logo_id',
    darkModeLogo_filesize: 'darkModeLogo_filesize',
    darkModeLogo_extension: 'darkModeLogo_extension',
    darkModeLogo_width: 'darkModeLogo_width',
    darkModeLogo_height: 'darkModeLogo_height',
    darkModeLogo_id: 'darkModeLogo_id',
    heroImage_filesize: 'heroImage_filesize',
    heroImage_extension: 'heroImage_extension',
    heroImage_width: 'heroImage_width',
    heroImage_height: 'heroImage_height',
    heroImage_id: 'heroImage_id',
    ogImage_filesize: 'ogImage_filesize',
    ogImage_extension: 'ogImage_extension',
    ogImage_width: 'ogImage_width',
    ogImage_height: 'ogImage_height',
    ogImage_id: 'ogImage_id',
    postEventBackground_filesize: 'postEventBackground_filesize',
    postEventBackground_extension: 'postEventBackground_extension',
    postEventBackground_width: 'postEventBackground_width',
    postEventBackground_height: 'postEventBackground_height',
    postEventBackground_id: 'postEventBackground_id',
    pressKit_filename: 'pressKit_filename',
    pressKit_filesize: 'pressKit_filesize',
    submissionInstructions: 'submissionInstructions',
    eventPage: 'eventPage'
  };

  export type EventScalarFieldEnum = (typeof EventScalarFieldEnum)[keyof typeof EventScalarFieldEnum]


  export const IncentiveScalarFieldEnum: {
    id: 'id',
    runId: 'runId',
    eventId: 'eventId',
    title: 'title',
    notes: 'notes',
    type: 'type',
    data: 'data',
    active: 'active'
  };

  export type IncentiveScalarFieldEnum = (typeof IncentiveScalarFieldEnum)[keyof typeof IncentiveScalarFieldEnum]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const PostScalarFieldEnum: {
    id: 'id',
    title: 'title',
    slug: 'slug',
    published: 'published',
    publishedDate: 'publishedDate',
    editedDate: 'editedDate',
    role: 'role',
    content: 'content',
    intro: 'intro',
    eventId: 'eventId'
  };

  export type PostScalarFieldEnum = (typeof PostScalarFieldEnum)[keyof typeof PostScalarFieldEnum]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const RoleScalarFieldEnum: {
    id: 'id',
    name: 'name',
    admin: 'admin',
    canManageContent: 'canManageContent',
    canManageUsers: 'canManageUsers',
    runner: 'runner',
    volunteer: 'volunteer',
    eventId: 'eventId',
    show: 'show',
    colour: 'colour',
    textColour: 'textColour'
  };

  export type RoleScalarFieldEnum = (typeof RoleScalarFieldEnum)[keyof typeof RoleScalarFieldEnum]


  export const RunScalarFieldEnum: {
    id: 'id',
    originalSubmissionId: 'originalSubmissionId',
    game: 'game',
    category: 'category',
    platform: 'platform',
    estimate: 'estimate',
    finalTime: 'finalTime',
    donationIncentive: 'donationIncentive',
    race: 'race',
    racer: 'racer',
    coop: 'coop',
    twitchVOD: 'twitchVOD',
    youtubeVOD: 'youtubeVOD',
    eventId: 'eventId',
    scheduledTime: 'scheduledTime'
  };

  export type RunScalarFieldEnum = (typeof RunScalarFieldEnum)[keyof typeof RunScalarFieldEnum]


  export const ShirtOrderScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    taken: 'taken',
    method: 'method',
    shirtID: 'shirtID',
    paid: 'paid',
    notes: 'notes',
    size: 'size',
    colour: 'colour',
    stripeID: 'stripeID',
    created: 'created'
  };

  export type ShirtOrderScalarFieldEnum = (typeof ShirtOrderScalarFieldEnum)[keyof typeof ShirtOrderScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const SubmissionScalarFieldEnum: {
    id: 'id',
    runnerId: 'runnerId',
    created: 'created',
    game: 'game',
    category: 'category',
    platform: 'platform',
    estimate: 'estimate',
    ageRating: 'ageRating',
    donationIncentive: 'donationIncentive',
    specialReqs: 'specialReqs',
    availability: 'availability',
    race: 'race',
    racer: 'racer',
    coop: 'coop',
    video: 'video',
    status: 'status',
    eventId: 'eventId',
    willingBackup: 'willingBackup'
  };

  export type SubmissionScalarFieldEnum = (typeof SubmissionScalarFieldEnum)[keyof typeof SubmissionScalarFieldEnum]


  export const TicketScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    eventId: 'eventId',
    taken: 'taken',
    method: 'method',
    ticketID: 'ticketID',
    paid: 'paid',
    notes: 'notes',
    numberOfTickets: 'numberOfTickets',
    stripeID: 'stripeID',
    created: 'created'
  };

  export type TicketScalarFieldEnum = (typeof TicketScalarFieldEnum)[keyof typeof TicketScalarFieldEnum]


  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserScalarFieldEnum: {
    id: 'id',
    name: 'name',
    username: 'username',
    email: 'email',
    password: 'password',
    accountCreated: 'accountCreated',
    dateOfBirth: 'dateOfBirth',
    pronouns: 'pronouns',
    verified: 'verified',
    state: 'state',
    sentVerification: 'sentVerification',
    discord: 'discord',
    twitter: 'twitter',
    twitch: 'twitch',
    passwordResetToken: 'passwordResetToken',
    passwordResetIssuedAt: 'passwordResetIssuedAt',
    passwordResetRedeemedAt: 'passwordResetRedeemedAt'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const VerificationScalarFieldEnum: {
    id: 'id',
    code: 'code',
    account: 'account'
  };

  export type VerificationScalarFieldEnum = (typeof VerificationScalarFieldEnum)[keyof typeof VerificationScalarFieldEnum]


  export const VolunteerScalarFieldEnum: {
    id: 'id',
    volunteerId: 'volunteerId',
    jobType: 'jobType',
    eventHostTime: 'eventHostTime',
    maxDailyHostTime: 'maxDailyHostTime',
    dayTimes: 'dayTimes',
    specificGame: 'specificGame',
    specificRunner: 'specificRunner',
    additionalInfo: 'additionalInfo',
    experience: 'experience',
    favMeme: 'favMeme',
    runnerManagementAvailability: 'runnerManagementAvailability',
    techAvailablity: 'techAvailablity',
    techExperience: 'techExperience',
    eventId: 'eventId'
  };

  export type VolunteerScalarFieldEnum = (typeof VolunteerScalarFieldEnum)[keyof typeof VolunteerScalarFieldEnum]


  /**
   * Deep Input Types
   */


  export type PostWhereInput = {
    AND?: Enumerable<PostWhereInput>
    OR?: Enumerable<PostWhereInput>
    NOT?: Enumerable<PostWhereInput>
    id?: StringFilter | string
    title?: StringFilter | string
    slug?: StringFilter | string
    author?: UserListRelationFilter
    published?: BoolFilter | boolean
    publishedDate?: DateTimeNullableFilter | Date | string | null
    editedDate?: DateTimeNullableFilter | Date | string | null
    role?: EnumPostRoleTypeNullableFilter | PostRoleType | null
    content?: JsonFilter
    intro?: StringFilter | string
    event?: XOR<EventRelationFilter, EventWhereInput> | null
    eventId?: StringNullableFilter | string | null
  }

  export type PostOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    author?: UserOrderByRelationAggregateInput
    published?: SortOrder
    publishedDate?: SortOrder
    editedDate?: SortOrder
    role?: SortOrder
    content?: SortOrder
    intro?: SortOrder
    event?: EventOrderByWithRelationInput
    eventId?: SortOrder
  }

  export type PostWhereUniqueInput = {
    id?: string
    slug?: string
  }

  export type PostOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    published?: SortOrder
    publishedDate?: SortOrder
    editedDate?: SortOrder
    role?: SortOrder
    content?: SortOrder
    intro?: SortOrder
    eventId?: SortOrder
    _count?: PostCountOrderByAggregateInput
    _max?: PostMaxOrderByAggregateInput
    _min?: PostMinOrderByAggregateInput
  }

  export type PostScalarWhereWithAggregatesInput = {
    AND?: Enumerable<PostScalarWhereWithAggregatesInput>
    OR?: Enumerable<PostScalarWhereWithAggregatesInput>
    NOT?: Enumerable<PostScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    title?: StringWithAggregatesFilter | string
    slug?: StringWithAggregatesFilter | string
    published?: BoolWithAggregatesFilter | boolean
    publishedDate?: DateTimeNullableWithAggregatesFilter | Date | string | null
    editedDate?: DateTimeNullableWithAggregatesFilter | Date | string | null
    role?: EnumPostRoleTypeNullableWithAggregatesFilter | PostRoleType | null
    content?: JsonWithAggregatesFilter
    intro?: StringWithAggregatesFilter | string
    eventId?: StringNullableWithAggregatesFilter | string | null
  }

  export type UserWhereInput = {
    AND?: Enumerable<UserWhereInput>
    OR?: Enumerable<UserWhereInput>
    NOT?: Enumerable<UserWhereInput>
    id?: StringFilter | string
    name?: StringFilter | string
    username?: StringFilter | string
    email?: StringFilter | string
    password?: StringFilter | string
    accountCreated?: DateTimeNullableFilter | Date | string | null
    dateOfBirth?: DateTimeNullableFilter | Date | string | null
    pronouns?: StringFilter | string
    submissions?: SubmissionListRelationFilter
    roles?: RoleListRelationFilter
    runs?: RunListRelationFilter
    verified?: BoolFilter | boolean
    state?: EnumUserStateTypeNullableFilter | UserStateType | null
    sentVerification?: DateTimeNullableFilter | Date | string | null
    discord?: StringFilter | string
    twitter?: StringFilter | string
    twitch?: StringFilter | string
    tickets?: TicketListRelationFilter
    volunteer?: VolunteerListRelationFilter
    shirts?: ShirtOrderListRelationFilter
    passwordResetToken?: StringNullableFilter | string | null
    passwordResetIssuedAt?: DateTimeNullableFilter | Date | string | null
    passwordResetRedeemedAt?: DateTimeNullableFilter | Date | string | null
    from_Post_author?: PostListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    accountCreated?: SortOrder
    dateOfBirth?: SortOrder
    pronouns?: SortOrder
    submissions?: SubmissionOrderByRelationAggregateInput
    roles?: RoleOrderByRelationAggregateInput
    runs?: RunOrderByRelationAggregateInput
    verified?: SortOrder
    state?: SortOrder
    sentVerification?: SortOrder
    discord?: SortOrder
    twitter?: SortOrder
    twitch?: SortOrder
    tickets?: TicketOrderByRelationAggregateInput
    volunteer?: VolunteerOrderByRelationAggregateInput
    shirts?: ShirtOrderOrderByRelationAggregateInput
    passwordResetToken?: SortOrder
    passwordResetIssuedAt?: SortOrder
    passwordResetRedeemedAt?: SortOrder
    from_Post_author?: PostOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = {
    id?: string
    username?: string
    email?: string
  }

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    accountCreated?: SortOrder
    dateOfBirth?: SortOrder
    pronouns?: SortOrder
    verified?: SortOrder
    state?: SortOrder
    sentVerification?: SortOrder
    discord?: SortOrder
    twitter?: SortOrder
    twitch?: SortOrder
    passwordResetToken?: SortOrder
    passwordResetIssuedAt?: SortOrder
    passwordResetRedeemedAt?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: Enumerable<UserScalarWhereWithAggregatesInput>
    OR?: Enumerable<UserScalarWhereWithAggregatesInput>
    NOT?: Enumerable<UserScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    name?: StringWithAggregatesFilter | string
    username?: StringWithAggregatesFilter | string
    email?: StringWithAggregatesFilter | string
    password?: StringWithAggregatesFilter | string
    accountCreated?: DateTimeNullableWithAggregatesFilter | Date | string | null
    dateOfBirth?: DateTimeNullableWithAggregatesFilter | Date | string | null
    pronouns?: StringWithAggregatesFilter | string
    verified?: BoolWithAggregatesFilter | boolean
    state?: EnumUserStateTypeNullableWithAggregatesFilter | UserStateType | null
    sentVerification?: DateTimeNullableWithAggregatesFilter | Date | string | null
    discord?: StringWithAggregatesFilter | string
    twitter?: StringWithAggregatesFilter | string
    twitch?: StringWithAggregatesFilter | string
    passwordResetToken?: StringNullableWithAggregatesFilter | string | null
    passwordResetIssuedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    passwordResetRedeemedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type SubmissionWhereInput = {
    AND?: Enumerable<SubmissionWhereInput>
    OR?: Enumerable<SubmissionWhereInput>
    NOT?: Enumerable<SubmissionWhereInput>
    id?: StringFilter | string
    runner?: XOR<UserRelationFilter, UserWhereInput> | null
    runnerId?: StringNullableFilter | string | null
    created?: DateTimeNullableFilter | Date | string | null
    game?: StringFilter | string
    category?: StringFilter | string
    platform?: StringFilter | string
    estimate?: StringFilter | string
    ageRating?: EnumSubmissionAgeRatingTypeNullableFilter | SubmissionAgeRatingType | null
    donationIncentive?: StringFilter | string
    specialReqs?: StringFilter | string
    availability?: JsonNullableFilter
    race?: EnumSubmissionRaceTypeNullableFilter | SubmissionRaceType | null
    racer?: StringFilter | string
    coop?: BoolFilter | boolean
    video?: StringFilter | string
    status?: EnumSubmissionStatusTypeNullableFilter | SubmissionStatusType | null
    event?: XOR<EventRelationFilter, EventWhereInput> | null
    eventId?: StringNullableFilter | string | null
    willingBackup?: BoolFilter | boolean
    from_Run_originalSubmission?: RunListRelationFilter
  }

  export type SubmissionOrderByWithRelationInput = {
    id?: SortOrder
    runner?: UserOrderByWithRelationInput
    runnerId?: SortOrder
    created?: SortOrder
    game?: SortOrder
    category?: SortOrder
    platform?: SortOrder
    estimate?: SortOrder
    ageRating?: SortOrder
    donationIncentive?: SortOrder
    specialReqs?: SortOrder
    availability?: SortOrder
    race?: SortOrder
    racer?: SortOrder
    coop?: SortOrder
    video?: SortOrder
    status?: SortOrder
    event?: EventOrderByWithRelationInput
    eventId?: SortOrder
    willingBackup?: SortOrder
    from_Run_originalSubmission?: RunOrderByRelationAggregateInput
  }

  export type SubmissionWhereUniqueInput = {
    id?: string
  }

  export type SubmissionOrderByWithAggregationInput = {
    id?: SortOrder
    runnerId?: SortOrder
    created?: SortOrder
    game?: SortOrder
    category?: SortOrder
    platform?: SortOrder
    estimate?: SortOrder
    ageRating?: SortOrder
    donationIncentive?: SortOrder
    specialReqs?: SortOrder
    availability?: SortOrder
    race?: SortOrder
    racer?: SortOrder
    coop?: SortOrder
    video?: SortOrder
    status?: SortOrder
    eventId?: SortOrder
    willingBackup?: SortOrder
    _count?: SubmissionCountOrderByAggregateInput
    _max?: SubmissionMaxOrderByAggregateInput
    _min?: SubmissionMinOrderByAggregateInput
  }

  export type SubmissionScalarWhereWithAggregatesInput = {
    AND?: Enumerable<SubmissionScalarWhereWithAggregatesInput>
    OR?: Enumerable<SubmissionScalarWhereWithAggregatesInput>
    NOT?: Enumerable<SubmissionScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    runnerId?: StringNullableWithAggregatesFilter | string | null
    created?: DateTimeNullableWithAggregatesFilter | Date | string | null
    game?: StringWithAggregatesFilter | string
    category?: StringWithAggregatesFilter | string
    platform?: StringWithAggregatesFilter | string
    estimate?: StringWithAggregatesFilter | string
    ageRating?: EnumSubmissionAgeRatingTypeNullableWithAggregatesFilter | SubmissionAgeRatingType | null
    donationIncentive?: StringWithAggregatesFilter | string
    specialReqs?: StringWithAggregatesFilter | string
    availability?: JsonNullableWithAggregatesFilter
    race?: EnumSubmissionRaceTypeNullableWithAggregatesFilter | SubmissionRaceType | null
    racer?: StringWithAggregatesFilter | string
    coop?: BoolWithAggregatesFilter | boolean
    video?: StringWithAggregatesFilter | string
    status?: EnumSubmissionStatusTypeNullableWithAggregatesFilter | SubmissionStatusType | null
    eventId?: StringNullableWithAggregatesFilter | string | null
    willingBackup?: BoolWithAggregatesFilter | boolean
  }

  export type EventWhereInput = {
    AND?: Enumerable<EventWhereInput>
    OR?: Enumerable<EventWhereInput>
    NOT?: Enumerable<EventWhereInput>
    id?: StringFilter | string
    name?: StringFilter | string
    shortname?: StringFilter | string
    published?: BoolFilter | boolean
    acceptingSubmissions?: BoolFilter | boolean
    acceptingTickets?: BoolFilter | boolean
    scheduleReleased?: BoolFilter | boolean
    acceptingVolunteers?: BoolFilter | boolean
    acceptingBackups?: BoolFilter | boolean
    acceptingShirts?: BoolFilter | boolean
    eventTimezone?: StringFilter | string
    startDate?: DateTimeNullableFilter | Date | string | null
    endDate?: DateTimeNullableFilter | Date | string | null
    raised?: FloatNullableFilter | number | null
    postEventPage?: JsonFilter
    submissions?: SubmissionListRelationFilter
    runs?: RunListRelationFilter
    tickets?: TicketListRelationFilter
    volunteer?: VolunteerListRelationFilter
    donationIncentives?: IncentiveListRelationFilter
    logo_filesize?: IntNullableFilter | number | null
    logo_extension?: StringNullableFilter | string | null
    logo_width?: IntNullableFilter | number | null
    logo_height?: IntNullableFilter | number | null
    logo_id?: StringNullableFilter | string | null
    darkModeLogo_filesize?: IntNullableFilter | number | null
    darkModeLogo_extension?: StringNullableFilter | string | null
    darkModeLogo_width?: IntNullableFilter | number | null
    darkModeLogo_height?: IntNullableFilter | number | null
    darkModeLogo_id?: StringNullableFilter | string | null
    heroImage_filesize?: IntNullableFilter | number | null
    heroImage_extension?: StringNullableFilter | string | null
    heroImage_width?: IntNullableFilter | number | null
    heroImage_height?: IntNullableFilter | number | null
    heroImage_id?: StringNullableFilter | string | null
    ogImage_filesize?: IntNullableFilter | number | null
    ogImage_extension?: StringNullableFilter | string | null
    ogImage_width?: IntNullableFilter | number | null
    ogImage_height?: IntNullableFilter | number | null
    ogImage_id?: StringNullableFilter | string | null
    postEventBackground_filesize?: IntNullableFilter | number | null
    postEventBackground_extension?: StringNullableFilter | string | null
    postEventBackground_width?: IntNullableFilter | number | null
    postEventBackground_height?: IntNullableFilter | number | null
    postEventBackground_id?: StringNullableFilter | string | null
    pressKit_filename?: StringNullableFilter | string | null
    pressKit_filesize?: IntNullableFilter | number | null
    submissionInstructions?: JsonFilter
    eventPage?: JsonFilter
    from_Post_event?: PostListRelationFilter
    from_Role_event?: RoleListRelationFilter
  }

  export type EventOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    shortname?: SortOrder
    published?: SortOrder
    acceptingSubmissions?: SortOrder
    acceptingTickets?: SortOrder
    scheduleReleased?: SortOrder
    acceptingVolunteers?: SortOrder
    acceptingBackups?: SortOrder
    acceptingShirts?: SortOrder
    eventTimezone?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    raised?: SortOrder
    postEventPage?: SortOrder
    submissions?: SubmissionOrderByRelationAggregateInput
    runs?: RunOrderByRelationAggregateInput
    tickets?: TicketOrderByRelationAggregateInput
    volunteer?: VolunteerOrderByRelationAggregateInput
    donationIncentives?: IncentiveOrderByRelationAggregateInput
    logo_filesize?: SortOrder
    logo_extension?: SortOrder
    logo_width?: SortOrder
    logo_height?: SortOrder
    logo_id?: SortOrder
    darkModeLogo_filesize?: SortOrder
    darkModeLogo_extension?: SortOrder
    darkModeLogo_width?: SortOrder
    darkModeLogo_height?: SortOrder
    darkModeLogo_id?: SortOrder
    heroImage_filesize?: SortOrder
    heroImage_extension?: SortOrder
    heroImage_width?: SortOrder
    heroImage_height?: SortOrder
    heroImage_id?: SortOrder
    ogImage_filesize?: SortOrder
    ogImage_extension?: SortOrder
    ogImage_width?: SortOrder
    ogImage_height?: SortOrder
    ogImage_id?: SortOrder
    postEventBackground_filesize?: SortOrder
    postEventBackground_extension?: SortOrder
    postEventBackground_width?: SortOrder
    postEventBackground_height?: SortOrder
    postEventBackground_id?: SortOrder
    pressKit_filename?: SortOrder
    pressKit_filesize?: SortOrder
    submissionInstructions?: SortOrder
    eventPage?: SortOrder
    from_Post_event?: PostOrderByRelationAggregateInput
    from_Role_event?: RoleOrderByRelationAggregateInput
  }

  export type EventWhereUniqueInput = {
    id?: string
    shortname?: string
  }

  export type EventOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    shortname?: SortOrder
    published?: SortOrder
    acceptingSubmissions?: SortOrder
    acceptingTickets?: SortOrder
    scheduleReleased?: SortOrder
    acceptingVolunteers?: SortOrder
    acceptingBackups?: SortOrder
    acceptingShirts?: SortOrder
    eventTimezone?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    raised?: SortOrder
    postEventPage?: SortOrder
    logo_filesize?: SortOrder
    logo_extension?: SortOrder
    logo_width?: SortOrder
    logo_height?: SortOrder
    logo_id?: SortOrder
    darkModeLogo_filesize?: SortOrder
    darkModeLogo_extension?: SortOrder
    darkModeLogo_width?: SortOrder
    darkModeLogo_height?: SortOrder
    darkModeLogo_id?: SortOrder
    heroImage_filesize?: SortOrder
    heroImage_extension?: SortOrder
    heroImage_width?: SortOrder
    heroImage_height?: SortOrder
    heroImage_id?: SortOrder
    ogImage_filesize?: SortOrder
    ogImage_extension?: SortOrder
    ogImage_width?: SortOrder
    ogImage_height?: SortOrder
    ogImage_id?: SortOrder
    postEventBackground_filesize?: SortOrder
    postEventBackground_extension?: SortOrder
    postEventBackground_width?: SortOrder
    postEventBackground_height?: SortOrder
    postEventBackground_id?: SortOrder
    pressKit_filename?: SortOrder
    pressKit_filesize?: SortOrder
    submissionInstructions?: SortOrder
    eventPage?: SortOrder
    _count?: EventCountOrderByAggregateInput
    _avg?: EventAvgOrderByAggregateInput
    _max?: EventMaxOrderByAggregateInput
    _min?: EventMinOrderByAggregateInput
    _sum?: EventSumOrderByAggregateInput
  }

  export type EventScalarWhereWithAggregatesInput = {
    AND?: Enumerable<EventScalarWhereWithAggregatesInput>
    OR?: Enumerable<EventScalarWhereWithAggregatesInput>
    NOT?: Enumerable<EventScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    name?: StringWithAggregatesFilter | string
    shortname?: StringWithAggregatesFilter | string
    published?: BoolWithAggregatesFilter | boolean
    acceptingSubmissions?: BoolWithAggregatesFilter | boolean
    acceptingTickets?: BoolWithAggregatesFilter | boolean
    scheduleReleased?: BoolWithAggregatesFilter | boolean
    acceptingVolunteers?: BoolWithAggregatesFilter | boolean
    acceptingBackups?: BoolWithAggregatesFilter | boolean
    acceptingShirts?: BoolWithAggregatesFilter | boolean
    eventTimezone?: StringWithAggregatesFilter | string
    startDate?: DateTimeNullableWithAggregatesFilter | Date | string | null
    endDate?: DateTimeNullableWithAggregatesFilter | Date | string | null
    raised?: FloatNullableWithAggregatesFilter | number | null
    postEventPage?: JsonWithAggregatesFilter
    logo_filesize?: IntNullableWithAggregatesFilter | number | null
    logo_extension?: StringNullableWithAggregatesFilter | string | null
    logo_width?: IntNullableWithAggregatesFilter | number | null
    logo_height?: IntNullableWithAggregatesFilter | number | null
    logo_id?: StringNullableWithAggregatesFilter | string | null
    darkModeLogo_filesize?: IntNullableWithAggregatesFilter | number | null
    darkModeLogo_extension?: StringNullableWithAggregatesFilter | string | null
    darkModeLogo_width?: IntNullableWithAggregatesFilter | number | null
    darkModeLogo_height?: IntNullableWithAggregatesFilter | number | null
    darkModeLogo_id?: StringNullableWithAggregatesFilter | string | null
    heroImage_filesize?: IntNullableWithAggregatesFilter | number | null
    heroImage_extension?: StringNullableWithAggregatesFilter | string | null
    heroImage_width?: IntNullableWithAggregatesFilter | number | null
    heroImage_height?: IntNullableWithAggregatesFilter | number | null
    heroImage_id?: StringNullableWithAggregatesFilter | string | null
    ogImage_filesize?: IntNullableWithAggregatesFilter | number | null
    ogImage_extension?: StringNullableWithAggregatesFilter | string | null
    ogImage_width?: IntNullableWithAggregatesFilter | number | null
    ogImage_height?: IntNullableWithAggregatesFilter | number | null
    ogImage_id?: StringNullableWithAggregatesFilter | string | null
    postEventBackground_filesize?: IntNullableWithAggregatesFilter | number | null
    postEventBackground_extension?: StringNullableWithAggregatesFilter | string | null
    postEventBackground_width?: IntNullableWithAggregatesFilter | number | null
    postEventBackground_height?: IntNullableWithAggregatesFilter | number | null
    postEventBackground_id?: StringNullableWithAggregatesFilter | string | null
    pressKit_filename?: StringNullableWithAggregatesFilter | string | null
    pressKit_filesize?: IntNullableWithAggregatesFilter | number | null
    submissionInstructions?: JsonWithAggregatesFilter
    eventPage?: JsonWithAggregatesFilter
  }

  export type RoleWhereInput = {
    AND?: Enumerable<RoleWhereInput>
    OR?: Enumerable<RoleWhereInput>
    NOT?: Enumerable<RoleWhereInput>
    id?: StringFilter | string
    name?: StringFilter | string
    admin?: BoolFilter | boolean
    canManageContent?: BoolFilter | boolean
    canManageUsers?: BoolFilter | boolean
    runner?: BoolFilter | boolean
    volunteer?: BoolFilter | boolean
    users?: UserListRelationFilter
    event?: XOR<EventRelationFilter, EventWhereInput> | null
    eventId?: StringNullableFilter | string | null
    show?: BoolFilter | boolean
    colour?: StringFilter | string
    textColour?: EnumRoleTextColourTypeNullableFilter | RoleTextColourType | null
  }

  export type RoleOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    admin?: SortOrder
    canManageContent?: SortOrder
    canManageUsers?: SortOrder
    runner?: SortOrder
    volunteer?: SortOrder
    users?: UserOrderByRelationAggregateInput
    event?: EventOrderByWithRelationInput
    eventId?: SortOrder
    show?: SortOrder
    colour?: SortOrder
    textColour?: SortOrder
  }

  export type RoleWhereUniqueInput = {
    id?: string
  }

  export type RoleOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    admin?: SortOrder
    canManageContent?: SortOrder
    canManageUsers?: SortOrder
    runner?: SortOrder
    volunteer?: SortOrder
    eventId?: SortOrder
    show?: SortOrder
    colour?: SortOrder
    textColour?: SortOrder
    _count?: RoleCountOrderByAggregateInput
    _max?: RoleMaxOrderByAggregateInput
    _min?: RoleMinOrderByAggregateInput
  }

  export type RoleScalarWhereWithAggregatesInput = {
    AND?: Enumerable<RoleScalarWhereWithAggregatesInput>
    OR?: Enumerable<RoleScalarWhereWithAggregatesInput>
    NOT?: Enumerable<RoleScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    name?: StringWithAggregatesFilter | string
    admin?: BoolWithAggregatesFilter | boolean
    canManageContent?: BoolWithAggregatesFilter | boolean
    canManageUsers?: BoolWithAggregatesFilter | boolean
    runner?: BoolWithAggregatesFilter | boolean
    volunteer?: BoolWithAggregatesFilter | boolean
    eventId?: StringNullableWithAggregatesFilter | string | null
    show?: BoolWithAggregatesFilter | boolean
    colour?: StringWithAggregatesFilter | string
    textColour?: EnumRoleTextColourTypeNullableWithAggregatesFilter | RoleTextColourType | null
  }

  export type RunWhereInput = {
    AND?: Enumerable<RunWhereInput>
    OR?: Enumerable<RunWhereInput>
    NOT?: Enumerable<RunWhereInput>
    id?: StringFilter | string
    runners?: UserListRelationFilter
    originalSubmission?: XOR<SubmissionRelationFilter, SubmissionWhereInput> | null
    originalSubmissionId?: StringNullableFilter | string | null
    game?: StringFilter | string
    category?: StringFilter | string
    platform?: StringFilter | string
    estimate?: StringFilter | string
    finalTime?: StringFilter | string
    donationIncentive?: StringFilter | string
    race?: BoolFilter | boolean
    racer?: StringFilter | string
    coop?: BoolFilter | boolean
    twitchVOD?: StringFilter | string
    youtubeVOD?: StringFilter | string
    event?: XOR<EventRelationFilter, EventWhereInput> | null
    eventId?: StringNullableFilter | string | null
    donationIncentiveObject?: IncentiveListRelationFilter
    scheduledTime?: DateTimeNullableFilter | Date | string | null
  }

  export type RunOrderByWithRelationInput = {
    id?: SortOrder
    runners?: UserOrderByRelationAggregateInput
    originalSubmission?: SubmissionOrderByWithRelationInput
    originalSubmissionId?: SortOrder
    game?: SortOrder
    category?: SortOrder
    platform?: SortOrder
    estimate?: SortOrder
    finalTime?: SortOrder
    donationIncentive?: SortOrder
    race?: SortOrder
    racer?: SortOrder
    coop?: SortOrder
    twitchVOD?: SortOrder
    youtubeVOD?: SortOrder
    event?: EventOrderByWithRelationInput
    eventId?: SortOrder
    donationIncentiveObject?: IncentiveOrderByRelationAggregateInput
    scheduledTime?: SortOrder
  }

  export type RunWhereUniqueInput = {
    id?: string
  }

  export type RunOrderByWithAggregationInput = {
    id?: SortOrder
    originalSubmissionId?: SortOrder
    game?: SortOrder
    category?: SortOrder
    platform?: SortOrder
    estimate?: SortOrder
    finalTime?: SortOrder
    donationIncentive?: SortOrder
    race?: SortOrder
    racer?: SortOrder
    coop?: SortOrder
    twitchVOD?: SortOrder
    youtubeVOD?: SortOrder
    eventId?: SortOrder
    scheduledTime?: SortOrder
    _count?: RunCountOrderByAggregateInput
    _max?: RunMaxOrderByAggregateInput
    _min?: RunMinOrderByAggregateInput
  }

  export type RunScalarWhereWithAggregatesInput = {
    AND?: Enumerable<RunScalarWhereWithAggregatesInput>
    OR?: Enumerable<RunScalarWhereWithAggregatesInput>
    NOT?: Enumerable<RunScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    originalSubmissionId?: StringNullableWithAggregatesFilter | string | null
    game?: StringWithAggregatesFilter | string
    category?: StringWithAggregatesFilter | string
    platform?: StringWithAggregatesFilter | string
    estimate?: StringWithAggregatesFilter | string
    finalTime?: StringWithAggregatesFilter | string
    donationIncentive?: StringWithAggregatesFilter | string
    race?: BoolWithAggregatesFilter | boolean
    racer?: StringWithAggregatesFilter | string
    coop?: BoolWithAggregatesFilter | boolean
    twitchVOD?: StringWithAggregatesFilter | string
    youtubeVOD?: StringWithAggregatesFilter | string
    eventId?: StringNullableWithAggregatesFilter | string | null
    scheduledTime?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type VerificationWhereInput = {
    AND?: Enumerable<VerificationWhereInput>
    OR?: Enumerable<VerificationWhereInput>
    NOT?: Enumerable<VerificationWhereInput>
    id?: StringFilter | string
    code?: StringFilter | string
    account?: StringFilter | string
  }

  export type VerificationOrderByWithRelationInput = {
    id?: SortOrder
    code?: SortOrder
    account?: SortOrder
  }

  export type VerificationWhereUniqueInput = {
    id?: string
    code?: string
  }

  export type VerificationOrderByWithAggregationInput = {
    id?: SortOrder
    code?: SortOrder
    account?: SortOrder
    _count?: VerificationCountOrderByAggregateInput
    _max?: VerificationMaxOrderByAggregateInput
    _min?: VerificationMinOrderByAggregateInput
  }

  export type VerificationScalarWhereWithAggregatesInput = {
    AND?: Enumerable<VerificationScalarWhereWithAggregatesInput>
    OR?: Enumerable<VerificationScalarWhereWithAggregatesInput>
    NOT?: Enumerable<VerificationScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    code?: StringWithAggregatesFilter | string
    account?: StringWithAggregatesFilter | string
  }

  export type TicketWhereInput = {
    AND?: Enumerable<TicketWhereInput>
    OR?: Enumerable<TicketWhereInput>
    NOT?: Enumerable<TicketWhereInput>
    id?: StringFilter | string
    user?: XOR<UserRelationFilter, UserWhereInput> | null
    userId?: StringNullableFilter | string | null
    event?: XOR<EventRelationFilter, EventWhereInput> | null
    eventId?: StringNullableFilter | string | null
    taken?: BoolFilter | boolean
    method?: EnumTicketMethodTypeFilter | TicketMethodType
    ticketID?: StringFilter | string
    paid?: BoolFilter | boolean
    notes?: StringFilter | string
    numberOfTickets?: IntNullableFilter | number | null
    stripeID?: StringFilter | string
    created?: DateTimeNullableFilter | Date | string | null
  }

  export type TicketOrderByWithRelationInput = {
    id?: SortOrder
    user?: UserOrderByWithRelationInput
    userId?: SortOrder
    event?: EventOrderByWithRelationInput
    eventId?: SortOrder
    taken?: SortOrder
    method?: SortOrder
    ticketID?: SortOrder
    paid?: SortOrder
    notes?: SortOrder
    numberOfTickets?: SortOrder
    stripeID?: SortOrder
    created?: SortOrder
  }

  export type TicketWhereUniqueInput = {
    id?: string
    ticketID?: string
    stripeID?: string
  }

  export type TicketOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    eventId?: SortOrder
    taken?: SortOrder
    method?: SortOrder
    ticketID?: SortOrder
    paid?: SortOrder
    notes?: SortOrder
    numberOfTickets?: SortOrder
    stripeID?: SortOrder
    created?: SortOrder
    _count?: TicketCountOrderByAggregateInput
    _avg?: TicketAvgOrderByAggregateInput
    _max?: TicketMaxOrderByAggregateInput
    _min?: TicketMinOrderByAggregateInput
    _sum?: TicketSumOrderByAggregateInput
  }

  export type TicketScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TicketScalarWhereWithAggregatesInput>
    OR?: Enumerable<TicketScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TicketScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    userId?: StringNullableWithAggregatesFilter | string | null
    eventId?: StringNullableWithAggregatesFilter | string | null
    taken?: BoolWithAggregatesFilter | boolean
    method?: EnumTicketMethodTypeWithAggregatesFilter | TicketMethodType
    ticketID?: StringWithAggregatesFilter | string
    paid?: BoolWithAggregatesFilter | boolean
    notes?: StringWithAggregatesFilter | string
    numberOfTickets?: IntNullableWithAggregatesFilter | number | null
    stripeID?: StringWithAggregatesFilter | string
    created?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type VolunteerWhereInput = {
    AND?: Enumerable<VolunteerWhereInput>
    OR?: Enumerable<VolunteerWhereInput>
    NOT?: Enumerable<VolunteerWhereInput>
    id?: StringFilter | string
    volunteer?: XOR<UserRelationFilter, UserWhereInput> | null
    volunteerId?: StringNullableFilter | string | null
    jobType?: EnumVolunteerJobTypeTypeNullableFilter | VolunteerJobTypeType | null
    eventHostTime?: IntNullableFilter | number | null
    maxDailyHostTime?: IntNullableFilter | number | null
    dayTimes?: JsonNullableFilter
    specificGame?: StringFilter | string
    specificRunner?: StringFilter | string
    additionalInfo?: StringFilter | string
    experience?: StringFilter | string
    favMeme?: StringFilter | string
    runnerManagementAvailability?: StringFilter | string
    techAvailablity?: StringFilter | string
    techExperience?: StringFilter | string
    event?: XOR<EventRelationFilter, EventWhereInput> | null
    eventId?: StringNullableFilter | string | null
  }

  export type VolunteerOrderByWithRelationInput = {
    id?: SortOrder
    volunteer?: UserOrderByWithRelationInput
    volunteerId?: SortOrder
    jobType?: SortOrder
    eventHostTime?: SortOrder
    maxDailyHostTime?: SortOrder
    dayTimes?: SortOrder
    specificGame?: SortOrder
    specificRunner?: SortOrder
    additionalInfo?: SortOrder
    experience?: SortOrder
    favMeme?: SortOrder
    runnerManagementAvailability?: SortOrder
    techAvailablity?: SortOrder
    techExperience?: SortOrder
    event?: EventOrderByWithRelationInput
    eventId?: SortOrder
  }

  export type VolunteerWhereUniqueInput = {
    id?: string
  }

  export type VolunteerOrderByWithAggregationInput = {
    id?: SortOrder
    volunteerId?: SortOrder
    jobType?: SortOrder
    eventHostTime?: SortOrder
    maxDailyHostTime?: SortOrder
    dayTimes?: SortOrder
    specificGame?: SortOrder
    specificRunner?: SortOrder
    additionalInfo?: SortOrder
    experience?: SortOrder
    favMeme?: SortOrder
    runnerManagementAvailability?: SortOrder
    techAvailablity?: SortOrder
    techExperience?: SortOrder
    eventId?: SortOrder
    _count?: VolunteerCountOrderByAggregateInput
    _avg?: VolunteerAvgOrderByAggregateInput
    _max?: VolunteerMaxOrderByAggregateInput
    _min?: VolunteerMinOrderByAggregateInput
    _sum?: VolunteerSumOrderByAggregateInput
  }

  export type VolunteerScalarWhereWithAggregatesInput = {
    AND?: Enumerable<VolunteerScalarWhereWithAggregatesInput>
    OR?: Enumerable<VolunteerScalarWhereWithAggregatesInput>
    NOT?: Enumerable<VolunteerScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    volunteerId?: StringNullableWithAggregatesFilter | string | null
    jobType?: EnumVolunteerJobTypeTypeNullableWithAggregatesFilter | VolunteerJobTypeType | null
    eventHostTime?: IntNullableWithAggregatesFilter | number | null
    maxDailyHostTime?: IntNullableWithAggregatesFilter | number | null
    dayTimes?: JsonNullableWithAggregatesFilter
    specificGame?: StringWithAggregatesFilter | string
    specificRunner?: StringWithAggregatesFilter | string
    additionalInfo?: StringWithAggregatesFilter | string
    experience?: StringWithAggregatesFilter | string
    favMeme?: StringWithAggregatesFilter | string
    runnerManagementAvailability?: StringWithAggregatesFilter | string
    techAvailablity?: StringWithAggregatesFilter | string
    techExperience?: StringWithAggregatesFilter | string
    eventId?: StringNullableWithAggregatesFilter | string | null
  }

  export type ShirtOrderWhereInput = {
    AND?: Enumerable<ShirtOrderWhereInput>
    OR?: Enumerable<ShirtOrderWhereInput>
    NOT?: Enumerable<ShirtOrderWhereInput>
    id?: StringFilter | string
    user?: XOR<UserRelationFilter, UserWhereInput> | null
    userId?: StringNullableFilter | string | null
    taken?: BoolFilter | boolean
    method?: EnumShirtOrderMethodTypeFilter | ShirtOrderMethodType
    shirtID?: StringFilter | string
    paid?: BoolFilter | boolean
    notes?: StringFilter | string
    size?: EnumShirtOrderSizeTypeFilter | ShirtOrderSizeType
    colour?: EnumShirtOrderColourTypeFilter | ShirtOrderColourType
    stripeID?: StringFilter | string
    created?: DateTimeNullableFilter | Date | string | null
  }

  export type ShirtOrderOrderByWithRelationInput = {
    id?: SortOrder
    user?: UserOrderByWithRelationInput
    userId?: SortOrder
    taken?: SortOrder
    method?: SortOrder
    shirtID?: SortOrder
    paid?: SortOrder
    notes?: SortOrder
    size?: SortOrder
    colour?: SortOrder
    stripeID?: SortOrder
    created?: SortOrder
  }

  export type ShirtOrderWhereUniqueInput = {
    id?: string
    shirtID?: string
    stripeID?: string
  }

  export type ShirtOrderOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    taken?: SortOrder
    method?: SortOrder
    shirtID?: SortOrder
    paid?: SortOrder
    notes?: SortOrder
    size?: SortOrder
    colour?: SortOrder
    stripeID?: SortOrder
    created?: SortOrder
    _count?: ShirtOrderCountOrderByAggregateInput
    _max?: ShirtOrderMaxOrderByAggregateInput
    _min?: ShirtOrderMinOrderByAggregateInput
  }

  export type ShirtOrderScalarWhereWithAggregatesInput = {
    AND?: Enumerable<ShirtOrderScalarWhereWithAggregatesInput>
    OR?: Enumerable<ShirtOrderScalarWhereWithAggregatesInput>
    NOT?: Enumerable<ShirtOrderScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    userId?: StringNullableWithAggregatesFilter | string | null
    taken?: BoolWithAggregatesFilter | boolean
    method?: EnumShirtOrderMethodTypeWithAggregatesFilter | ShirtOrderMethodType
    shirtID?: StringWithAggregatesFilter | string
    paid?: BoolWithAggregatesFilter | boolean
    notes?: StringWithAggregatesFilter | string
    size?: EnumShirtOrderSizeTypeWithAggregatesFilter | ShirtOrderSizeType
    colour?: EnumShirtOrderColourTypeWithAggregatesFilter | ShirtOrderColourType
    stripeID?: StringWithAggregatesFilter | string
    created?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type IncentiveWhereInput = {
    AND?: Enumerable<IncentiveWhereInput>
    OR?: Enumerable<IncentiveWhereInput>
    NOT?: Enumerable<IncentiveWhereInput>
    id?: StringFilter | string
    run?: XOR<RunRelationFilter, RunWhereInput> | null
    runId?: StringNullableFilter | string | null
    event?: XOR<EventRelationFilter, EventWhereInput> | null
    eventId?: StringNullableFilter | string | null
    title?: StringFilter | string
    notes?: StringFilter | string
    type?: StringFilter | string
    data?: JsonNullableFilter
    active?: BoolFilter | boolean
  }

  export type IncentiveOrderByWithRelationInput = {
    id?: SortOrder
    run?: RunOrderByWithRelationInput
    runId?: SortOrder
    event?: EventOrderByWithRelationInput
    eventId?: SortOrder
    title?: SortOrder
    notes?: SortOrder
    type?: SortOrder
    data?: SortOrder
    active?: SortOrder
  }

  export type IncentiveWhereUniqueInput = {
    id?: string
  }

  export type IncentiveOrderByWithAggregationInput = {
    id?: SortOrder
    runId?: SortOrder
    eventId?: SortOrder
    title?: SortOrder
    notes?: SortOrder
    type?: SortOrder
    data?: SortOrder
    active?: SortOrder
    _count?: IncentiveCountOrderByAggregateInput
    _max?: IncentiveMaxOrderByAggregateInput
    _min?: IncentiveMinOrderByAggregateInput
  }

  export type IncentiveScalarWhereWithAggregatesInput = {
    AND?: Enumerable<IncentiveScalarWhereWithAggregatesInput>
    OR?: Enumerable<IncentiveScalarWhereWithAggregatesInput>
    NOT?: Enumerable<IncentiveScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    runId?: StringNullableWithAggregatesFilter | string | null
    eventId?: StringNullableWithAggregatesFilter | string | null
    title?: StringWithAggregatesFilter | string
    notes?: StringWithAggregatesFilter | string
    type?: StringWithAggregatesFilter | string
    data?: JsonNullableWithAggregatesFilter
    active?: BoolWithAggregatesFilter | boolean
  }

  export type PostCreateInput = {
    id?: string
    title?: string
    slug?: string
    author?: UserCreateNestedManyWithoutFrom_Post_authorInput
    published?: boolean
    publishedDate?: Date | string | null
    editedDate?: Date | string | null
    role?: PostRoleType | null
    content?: JsonNullValueInput | InputJsonValue
    intro?: string
    event?: EventCreateNestedOneWithoutFrom_Post_eventInput
  }

  export type PostUncheckedCreateInput = {
    id?: string
    title?: string
    slug?: string
    author?: UserUncheckedCreateNestedManyWithoutFrom_Post_authorInput
    published?: boolean
    publishedDate?: Date | string | null
    editedDate?: Date | string | null
    role?: PostRoleType | null
    content?: JsonNullValueInput | InputJsonValue
    intro?: string
    eventId?: string | null
  }

  export type PostUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    author?: UserUpdateManyWithoutFrom_Post_authorNestedInput
    published?: BoolFieldUpdateOperationsInput | boolean
    publishedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    editedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: NullableEnumPostRoleTypeFieldUpdateOperationsInput | PostRoleType | null
    content?: JsonNullValueInput | InputJsonValue
    intro?: StringFieldUpdateOperationsInput | string
    event?: EventUpdateOneWithoutFrom_Post_eventNestedInput
  }

  export type PostUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    author?: UserUncheckedUpdateManyWithoutFrom_Post_authorNestedInput
    published?: BoolFieldUpdateOperationsInput | boolean
    publishedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    editedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: NullableEnumPostRoleTypeFieldUpdateOperationsInput | PostRoleType | null
    content?: JsonNullValueInput | InputJsonValue
    intro?: StringFieldUpdateOperationsInput | string
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PostCreateManyInput = {
    id?: string
    title?: string
    slug?: string
    published?: boolean
    publishedDate?: Date | string | null
    editedDate?: Date | string | null
    role?: PostRoleType | null
    content?: JsonNullValueInput | InputJsonValue
    intro?: string
    eventId?: string | null
  }

  export type PostUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    published?: BoolFieldUpdateOperationsInput | boolean
    publishedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    editedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: NullableEnumPostRoleTypeFieldUpdateOperationsInput | PostRoleType | null
    content?: JsonNullValueInput | InputJsonValue
    intro?: StringFieldUpdateOperationsInput | string
  }

  export type PostUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    published?: BoolFieldUpdateOperationsInput | boolean
    publishedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    editedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: NullableEnumPostRoleTypeFieldUpdateOperationsInput | PostRoleType | null
    content?: JsonNullValueInput | InputJsonValue
    intro?: StringFieldUpdateOperationsInput | string
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserCreateInput = {
    id?: string
    name?: string
    username?: string
    email?: string
    password: string
    accountCreated?: Date | string | null
    dateOfBirth?: Date | string | null
    pronouns?: string
    submissions?: SubmissionCreateNestedManyWithoutRunnerInput
    roles?: RoleCreateNestedManyWithoutUsersInput
    runs?: RunCreateNestedManyWithoutRunnersInput
    verified?: boolean
    state?: UserStateType | null
    sentVerification?: Date | string | null
    discord?: string
    twitter?: string
    twitch?: string
    tickets?: TicketCreateNestedManyWithoutUserInput
    volunteer?: VolunteerCreateNestedManyWithoutVolunteerInput
    shirts?: ShirtOrderCreateNestedManyWithoutUserInput
    passwordResetToken?: string | null
    passwordResetIssuedAt?: Date | string | null
    passwordResetRedeemedAt?: Date | string | null
    from_Post_author?: PostCreateNestedManyWithoutAuthorInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    name?: string
    username?: string
    email?: string
    password: string
    accountCreated?: Date | string | null
    dateOfBirth?: Date | string | null
    pronouns?: string
    submissions?: SubmissionUncheckedCreateNestedManyWithoutRunnerInput
    roles?: RoleUncheckedCreateNestedManyWithoutUsersInput
    runs?: RunUncheckedCreateNestedManyWithoutRunnersInput
    verified?: boolean
    state?: UserStateType | null
    sentVerification?: Date | string | null
    discord?: string
    twitter?: string
    twitch?: string
    tickets?: TicketUncheckedCreateNestedManyWithoutUserInput
    volunteer?: VolunteerUncheckedCreateNestedManyWithoutVolunteerInput
    shirts?: ShirtOrderUncheckedCreateNestedManyWithoutUserInput
    passwordResetToken?: string | null
    passwordResetIssuedAt?: Date | string | null
    passwordResetRedeemedAt?: Date | string | null
    from_Post_author?: PostUncheckedCreateNestedManyWithoutAuthorInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    accountCreated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pronouns?: StringFieldUpdateOperationsInput | string
    submissions?: SubmissionUpdateManyWithoutRunnerNestedInput
    roles?: RoleUpdateManyWithoutUsersNestedInput
    runs?: RunUpdateManyWithoutRunnersNestedInput
    verified?: BoolFieldUpdateOperationsInput | boolean
    state?: NullableEnumUserStateTypeFieldUpdateOperationsInput | UserStateType | null
    sentVerification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discord?: StringFieldUpdateOperationsInput | string
    twitter?: StringFieldUpdateOperationsInput | string
    twitch?: StringFieldUpdateOperationsInput | string
    tickets?: TicketUpdateManyWithoutUserNestedInput
    volunteer?: VolunteerUpdateManyWithoutVolunteerNestedInput
    shirts?: ShirtOrderUpdateManyWithoutUserNestedInput
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetIssuedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordResetRedeemedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    from_Post_author?: PostUpdateManyWithoutAuthorNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    accountCreated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pronouns?: StringFieldUpdateOperationsInput | string
    submissions?: SubmissionUncheckedUpdateManyWithoutRunnerNestedInput
    roles?: RoleUncheckedUpdateManyWithoutUsersNestedInput
    runs?: RunUncheckedUpdateManyWithoutRunnersNestedInput
    verified?: BoolFieldUpdateOperationsInput | boolean
    state?: NullableEnumUserStateTypeFieldUpdateOperationsInput | UserStateType | null
    sentVerification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discord?: StringFieldUpdateOperationsInput | string
    twitter?: StringFieldUpdateOperationsInput | string
    twitch?: StringFieldUpdateOperationsInput | string
    tickets?: TicketUncheckedUpdateManyWithoutUserNestedInput
    volunteer?: VolunteerUncheckedUpdateManyWithoutVolunteerNestedInput
    shirts?: ShirtOrderUncheckedUpdateManyWithoutUserNestedInput
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetIssuedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordResetRedeemedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    from_Post_author?: PostUncheckedUpdateManyWithoutAuthorNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    name?: string
    username?: string
    email?: string
    password: string
    accountCreated?: Date | string | null
    dateOfBirth?: Date | string | null
    pronouns?: string
    verified?: boolean
    state?: UserStateType | null
    sentVerification?: Date | string | null
    discord?: string
    twitter?: string
    twitch?: string
    passwordResetToken?: string | null
    passwordResetIssuedAt?: Date | string | null
    passwordResetRedeemedAt?: Date | string | null
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    accountCreated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pronouns?: StringFieldUpdateOperationsInput | string
    verified?: BoolFieldUpdateOperationsInput | boolean
    state?: NullableEnumUserStateTypeFieldUpdateOperationsInput | UserStateType | null
    sentVerification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discord?: StringFieldUpdateOperationsInput | string
    twitter?: StringFieldUpdateOperationsInput | string
    twitch?: StringFieldUpdateOperationsInput | string
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetIssuedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordResetRedeemedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    accountCreated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pronouns?: StringFieldUpdateOperationsInput | string
    verified?: BoolFieldUpdateOperationsInput | boolean
    state?: NullableEnumUserStateTypeFieldUpdateOperationsInput | UserStateType | null
    sentVerification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discord?: StringFieldUpdateOperationsInput | string
    twitter?: StringFieldUpdateOperationsInput | string
    twitch?: StringFieldUpdateOperationsInput | string
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetIssuedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordResetRedeemedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SubmissionCreateInput = {
    id?: string
    runner?: UserCreateNestedOneWithoutSubmissionsInput
    created?: Date | string | null
    game?: string
    category?: string
    platform?: string
    estimate?: string
    ageRating?: SubmissionAgeRatingType | null
    donationIncentive?: string
    specialReqs?: string
    availability?: NullableJsonNullValueInput | InputJsonValue
    race?: SubmissionRaceType | null
    racer?: string
    coop?: boolean
    video?: string
    status?: SubmissionStatusType | null
    event?: EventCreateNestedOneWithoutSubmissionsInput
    willingBackup?: boolean
    from_Run_originalSubmission?: RunCreateNestedManyWithoutOriginalSubmissionInput
  }

  export type SubmissionUncheckedCreateInput = {
    id?: string
    runnerId?: string | null
    created?: Date | string | null
    game?: string
    category?: string
    platform?: string
    estimate?: string
    ageRating?: SubmissionAgeRatingType | null
    donationIncentive?: string
    specialReqs?: string
    availability?: NullableJsonNullValueInput | InputJsonValue
    race?: SubmissionRaceType | null
    racer?: string
    coop?: boolean
    video?: string
    status?: SubmissionStatusType | null
    eventId?: string | null
    willingBackup?: boolean
    from_Run_originalSubmission?: RunUncheckedCreateNestedManyWithoutOriginalSubmissionInput
  }

  export type SubmissionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    runner?: UserUpdateOneWithoutSubmissionsNestedInput
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    game?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    platform?: StringFieldUpdateOperationsInput | string
    estimate?: StringFieldUpdateOperationsInput | string
    ageRating?: NullableEnumSubmissionAgeRatingTypeFieldUpdateOperationsInput | SubmissionAgeRatingType | null
    donationIncentive?: StringFieldUpdateOperationsInput | string
    specialReqs?: StringFieldUpdateOperationsInput | string
    availability?: NullableJsonNullValueInput | InputJsonValue
    race?: NullableEnumSubmissionRaceTypeFieldUpdateOperationsInput | SubmissionRaceType | null
    racer?: StringFieldUpdateOperationsInput | string
    coop?: BoolFieldUpdateOperationsInput | boolean
    video?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumSubmissionStatusTypeFieldUpdateOperationsInput | SubmissionStatusType | null
    event?: EventUpdateOneWithoutSubmissionsNestedInput
    willingBackup?: BoolFieldUpdateOperationsInput | boolean
    from_Run_originalSubmission?: RunUpdateManyWithoutOriginalSubmissionNestedInput
  }

  export type SubmissionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    runnerId?: NullableStringFieldUpdateOperationsInput | string | null
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    game?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    platform?: StringFieldUpdateOperationsInput | string
    estimate?: StringFieldUpdateOperationsInput | string
    ageRating?: NullableEnumSubmissionAgeRatingTypeFieldUpdateOperationsInput | SubmissionAgeRatingType | null
    donationIncentive?: StringFieldUpdateOperationsInput | string
    specialReqs?: StringFieldUpdateOperationsInput | string
    availability?: NullableJsonNullValueInput | InputJsonValue
    race?: NullableEnumSubmissionRaceTypeFieldUpdateOperationsInput | SubmissionRaceType | null
    racer?: StringFieldUpdateOperationsInput | string
    coop?: BoolFieldUpdateOperationsInput | boolean
    video?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumSubmissionStatusTypeFieldUpdateOperationsInput | SubmissionStatusType | null
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
    willingBackup?: BoolFieldUpdateOperationsInput | boolean
    from_Run_originalSubmission?: RunUncheckedUpdateManyWithoutOriginalSubmissionNestedInput
  }

  export type SubmissionCreateManyInput = {
    id?: string
    runnerId?: string | null
    created?: Date | string | null
    game?: string
    category?: string
    platform?: string
    estimate?: string
    ageRating?: SubmissionAgeRatingType | null
    donationIncentive?: string
    specialReqs?: string
    availability?: NullableJsonNullValueInput | InputJsonValue
    race?: SubmissionRaceType | null
    racer?: string
    coop?: boolean
    video?: string
    status?: SubmissionStatusType | null
    eventId?: string | null
    willingBackup?: boolean
  }

  export type SubmissionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    game?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    platform?: StringFieldUpdateOperationsInput | string
    estimate?: StringFieldUpdateOperationsInput | string
    ageRating?: NullableEnumSubmissionAgeRatingTypeFieldUpdateOperationsInput | SubmissionAgeRatingType | null
    donationIncentive?: StringFieldUpdateOperationsInput | string
    specialReqs?: StringFieldUpdateOperationsInput | string
    availability?: NullableJsonNullValueInput | InputJsonValue
    race?: NullableEnumSubmissionRaceTypeFieldUpdateOperationsInput | SubmissionRaceType | null
    racer?: StringFieldUpdateOperationsInput | string
    coop?: BoolFieldUpdateOperationsInput | boolean
    video?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumSubmissionStatusTypeFieldUpdateOperationsInput | SubmissionStatusType | null
    willingBackup?: BoolFieldUpdateOperationsInput | boolean
  }

  export type SubmissionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    runnerId?: NullableStringFieldUpdateOperationsInput | string | null
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    game?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    platform?: StringFieldUpdateOperationsInput | string
    estimate?: StringFieldUpdateOperationsInput | string
    ageRating?: NullableEnumSubmissionAgeRatingTypeFieldUpdateOperationsInput | SubmissionAgeRatingType | null
    donationIncentive?: StringFieldUpdateOperationsInput | string
    specialReqs?: StringFieldUpdateOperationsInput | string
    availability?: NullableJsonNullValueInput | InputJsonValue
    race?: NullableEnumSubmissionRaceTypeFieldUpdateOperationsInput | SubmissionRaceType | null
    racer?: StringFieldUpdateOperationsInput | string
    coop?: BoolFieldUpdateOperationsInput | boolean
    video?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumSubmissionStatusTypeFieldUpdateOperationsInput | SubmissionStatusType | null
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
    willingBackup?: BoolFieldUpdateOperationsInput | boolean
  }

  export type EventCreateInput = {
    id?: string
    name?: string
    shortname?: string
    published?: boolean
    acceptingSubmissions?: boolean
    acceptingTickets?: boolean
    scheduleReleased?: boolean
    acceptingVolunteers?: boolean
    acceptingBackups?: boolean
    acceptingShirts?: boolean
    eventTimezone?: string
    startDate?: Date | string | null
    endDate?: Date | string | null
    raised?: number | null
    postEventPage?: JsonNullValueInput | InputJsonValue
    submissions?: SubmissionCreateNestedManyWithoutEventInput
    runs?: RunCreateNestedManyWithoutEventInput
    tickets?: TicketCreateNestedManyWithoutEventInput
    volunteer?: VolunteerCreateNestedManyWithoutEventInput
    donationIncentives?: IncentiveCreateNestedManyWithoutEventInput
    logo_filesize?: number | null
    logo_extension?: string | null
    logo_width?: number | null
    logo_height?: number | null
    logo_id?: string | null
    darkModeLogo_filesize?: number | null
    darkModeLogo_extension?: string | null
    darkModeLogo_width?: number | null
    darkModeLogo_height?: number | null
    darkModeLogo_id?: string | null
    heroImage_filesize?: number | null
    heroImage_extension?: string | null
    heroImage_width?: number | null
    heroImage_height?: number | null
    heroImage_id?: string | null
    ogImage_filesize?: number | null
    ogImage_extension?: string | null
    ogImage_width?: number | null
    ogImage_height?: number | null
    ogImage_id?: string | null
    postEventBackground_filesize?: number | null
    postEventBackground_extension?: string | null
    postEventBackground_width?: number | null
    postEventBackground_height?: number | null
    postEventBackground_id?: string | null
    pressKit_filename?: string | null
    pressKit_filesize?: number | null
    submissionInstructions?: JsonNullValueInput | InputJsonValue
    eventPage?: JsonNullValueInput | InputJsonValue
    from_Post_event?: PostCreateNestedManyWithoutEventInput
    from_Role_event?: RoleCreateNestedManyWithoutEventInput
  }

  export type EventUncheckedCreateInput = {
    id?: string
    name?: string
    shortname?: string
    published?: boolean
    acceptingSubmissions?: boolean
    acceptingTickets?: boolean
    scheduleReleased?: boolean
    acceptingVolunteers?: boolean
    acceptingBackups?: boolean
    acceptingShirts?: boolean
    eventTimezone?: string
    startDate?: Date | string | null
    endDate?: Date | string | null
    raised?: number | null
    postEventPage?: JsonNullValueInput | InputJsonValue
    submissions?: SubmissionUncheckedCreateNestedManyWithoutEventInput
    runs?: RunUncheckedCreateNestedManyWithoutEventInput
    tickets?: TicketUncheckedCreateNestedManyWithoutEventInput
    volunteer?: VolunteerUncheckedCreateNestedManyWithoutEventInput
    donationIncentives?: IncentiveUncheckedCreateNestedManyWithoutEventInput
    logo_filesize?: number | null
    logo_extension?: string | null
    logo_width?: number | null
    logo_height?: number | null
    logo_id?: string | null
    darkModeLogo_filesize?: number | null
    darkModeLogo_extension?: string | null
    darkModeLogo_width?: number | null
    darkModeLogo_height?: number | null
    darkModeLogo_id?: string | null
    heroImage_filesize?: number | null
    heroImage_extension?: string | null
    heroImage_width?: number | null
    heroImage_height?: number | null
    heroImage_id?: string | null
    ogImage_filesize?: number | null
    ogImage_extension?: string | null
    ogImage_width?: number | null
    ogImage_height?: number | null
    ogImage_id?: string | null
    postEventBackground_filesize?: number | null
    postEventBackground_extension?: string | null
    postEventBackground_width?: number | null
    postEventBackground_height?: number | null
    postEventBackground_id?: string | null
    pressKit_filename?: string | null
    pressKit_filesize?: number | null
    submissionInstructions?: JsonNullValueInput | InputJsonValue
    eventPage?: JsonNullValueInput | InputJsonValue
    from_Post_event?: PostUncheckedCreateNestedManyWithoutEventInput
    from_Role_event?: RoleUncheckedCreateNestedManyWithoutEventInput
  }

  export type EventUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    shortname?: StringFieldUpdateOperationsInput | string
    published?: BoolFieldUpdateOperationsInput | boolean
    acceptingSubmissions?: BoolFieldUpdateOperationsInput | boolean
    acceptingTickets?: BoolFieldUpdateOperationsInput | boolean
    scheduleReleased?: BoolFieldUpdateOperationsInput | boolean
    acceptingVolunteers?: BoolFieldUpdateOperationsInput | boolean
    acceptingBackups?: BoolFieldUpdateOperationsInput | boolean
    acceptingShirts?: BoolFieldUpdateOperationsInput | boolean
    eventTimezone?: StringFieldUpdateOperationsInput | string
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raised?: NullableFloatFieldUpdateOperationsInput | number | null
    postEventPage?: JsonNullValueInput | InputJsonValue
    submissions?: SubmissionUpdateManyWithoutEventNestedInput
    runs?: RunUpdateManyWithoutEventNestedInput
    tickets?: TicketUpdateManyWithoutEventNestedInput
    volunteer?: VolunteerUpdateManyWithoutEventNestedInput
    donationIncentives?: IncentiveUpdateManyWithoutEventNestedInput
    logo_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    logo_extension?: NullableStringFieldUpdateOperationsInput | string | null
    logo_width?: NullableIntFieldUpdateOperationsInput | number | null
    logo_height?: NullableIntFieldUpdateOperationsInput | number | null
    logo_id?: NullableStringFieldUpdateOperationsInput | string | null
    darkModeLogo_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_extension?: NullableStringFieldUpdateOperationsInput | string | null
    darkModeLogo_width?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_height?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_id?: NullableStringFieldUpdateOperationsInput | string | null
    heroImage_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_extension?: NullableStringFieldUpdateOperationsInput | string | null
    heroImage_width?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_height?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_id?: NullableStringFieldUpdateOperationsInput | string | null
    ogImage_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_extension?: NullableStringFieldUpdateOperationsInput | string | null
    ogImage_width?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_height?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_id?: NullableStringFieldUpdateOperationsInput | string | null
    postEventBackground_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_extension?: NullableStringFieldUpdateOperationsInput | string | null
    postEventBackground_width?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_height?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_id?: NullableStringFieldUpdateOperationsInput | string | null
    pressKit_filename?: NullableStringFieldUpdateOperationsInput | string | null
    pressKit_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    submissionInstructions?: JsonNullValueInput | InputJsonValue
    eventPage?: JsonNullValueInput | InputJsonValue
    from_Post_event?: PostUpdateManyWithoutEventNestedInput
    from_Role_event?: RoleUpdateManyWithoutEventNestedInput
  }

  export type EventUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    shortname?: StringFieldUpdateOperationsInput | string
    published?: BoolFieldUpdateOperationsInput | boolean
    acceptingSubmissions?: BoolFieldUpdateOperationsInput | boolean
    acceptingTickets?: BoolFieldUpdateOperationsInput | boolean
    scheduleReleased?: BoolFieldUpdateOperationsInput | boolean
    acceptingVolunteers?: BoolFieldUpdateOperationsInput | boolean
    acceptingBackups?: BoolFieldUpdateOperationsInput | boolean
    acceptingShirts?: BoolFieldUpdateOperationsInput | boolean
    eventTimezone?: StringFieldUpdateOperationsInput | string
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raised?: NullableFloatFieldUpdateOperationsInput | number | null
    postEventPage?: JsonNullValueInput | InputJsonValue
    submissions?: SubmissionUncheckedUpdateManyWithoutEventNestedInput
    runs?: RunUncheckedUpdateManyWithoutEventNestedInput
    tickets?: TicketUncheckedUpdateManyWithoutEventNestedInput
    volunteer?: VolunteerUncheckedUpdateManyWithoutEventNestedInput
    donationIncentives?: IncentiveUncheckedUpdateManyWithoutEventNestedInput
    logo_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    logo_extension?: NullableStringFieldUpdateOperationsInput | string | null
    logo_width?: NullableIntFieldUpdateOperationsInput | number | null
    logo_height?: NullableIntFieldUpdateOperationsInput | number | null
    logo_id?: NullableStringFieldUpdateOperationsInput | string | null
    darkModeLogo_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_extension?: NullableStringFieldUpdateOperationsInput | string | null
    darkModeLogo_width?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_height?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_id?: NullableStringFieldUpdateOperationsInput | string | null
    heroImage_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_extension?: NullableStringFieldUpdateOperationsInput | string | null
    heroImage_width?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_height?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_id?: NullableStringFieldUpdateOperationsInput | string | null
    ogImage_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_extension?: NullableStringFieldUpdateOperationsInput | string | null
    ogImage_width?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_height?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_id?: NullableStringFieldUpdateOperationsInput | string | null
    postEventBackground_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_extension?: NullableStringFieldUpdateOperationsInput | string | null
    postEventBackground_width?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_height?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_id?: NullableStringFieldUpdateOperationsInput | string | null
    pressKit_filename?: NullableStringFieldUpdateOperationsInput | string | null
    pressKit_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    submissionInstructions?: JsonNullValueInput | InputJsonValue
    eventPage?: JsonNullValueInput | InputJsonValue
    from_Post_event?: PostUncheckedUpdateManyWithoutEventNestedInput
    from_Role_event?: RoleUncheckedUpdateManyWithoutEventNestedInput
  }

  export type EventCreateManyInput = {
    id?: string
    name?: string
    shortname?: string
    published?: boolean
    acceptingSubmissions?: boolean
    acceptingTickets?: boolean
    scheduleReleased?: boolean
    acceptingVolunteers?: boolean
    acceptingBackups?: boolean
    acceptingShirts?: boolean
    eventTimezone?: string
    startDate?: Date | string | null
    endDate?: Date | string | null
    raised?: number | null
    postEventPage?: JsonNullValueInput | InputJsonValue
    logo_filesize?: number | null
    logo_extension?: string | null
    logo_width?: number | null
    logo_height?: number | null
    logo_id?: string | null
    darkModeLogo_filesize?: number | null
    darkModeLogo_extension?: string | null
    darkModeLogo_width?: number | null
    darkModeLogo_height?: number | null
    darkModeLogo_id?: string | null
    heroImage_filesize?: number | null
    heroImage_extension?: string | null
    heroImage_width?: number | null
    heroImage_height?: number | null
    heroImage_id?: string | null
    ogImage_filesize?: number | null
    ogImage_extension?: string | null
    ogImage_width?: number | null
    ogImage_height?: number | null
    ogImage_id?: string | null
    postEventBackground_filesize?: number | null
    postEventBackground_extension?: string | null
    postEventBackground_width?: number | null
    postEventBackground_height?: number | null
    postEventBackground_id?: string | null
    pressKit_filename?: string | null
    pressKit_filesize?: number | null
    submissionInstructions?: JsonNullValueInput | InputJsonValue
    eventPage?: JsonNullValueInput | InputJsonValue
  }

  export type EventUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    shortname?: StringFieldUpdateOperationsInput | string
    published?: BoolFieldUpdateOperationsInput | boolean
    acceptingSubmissions?: BoolFieldUpdateOperationsInput | boolean
    acceptingTickets?: BoolFieldUpdateOperationsInput | boolean
    scheduleReleased?: BoolFieldUpdateOperationsInput | boolean
    acceptingVolunteers?: BoolFieldUpdateOperationsInput | boolean
    acceptingBackups?: BoolFieldUpdateOperationsInput | boolean
    acceptingShirts?: BoolFieldUpdateOperationsInput | boolean
    eventTimezone?: StringFieldUpdateOperationsInput | string
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raised?: NullableFloatFieldUpdateOperationsInput | number | null
    postEventPage?: JsonNullValueInput | InputJsonValue
    logo_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    logo_extension?: NullableStringFieldUpdateOperationsInput | string | null
    logo_width?: NullableIntFieldUpdateOperationsInput | number | null
    logo_height?: NullableIntFieldUpdateOperationsInput | number | null
    logo_id?: NullableStringFieldUpdateOperationsInput | string | null
    darkModeLogo_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_extension?: NullableStringFieldUpdateOperationsInput | string | null
    darkModeLogo_width?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_height?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_id?: NullableStringFieldUpdateOperationsInput | string | null
    heroImage_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_extension?: NullableStringFieldUpdateOperationsInput | string | null
    heroImage_width?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_height?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_id?: NullableStringFieldUpdateOperationsInput | string | null
    ogImage_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_extension?: NullableStringFieldUpdateOperationsInput | string | null
    ogImage_width?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_height?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_id?: NullableStringFieldUpdateOperationsInput | string | null
    postEventBackground_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_extension?: NullableStringFieldUpdateOperationsInput | string | null
    postEventBackground_width?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_height?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_id?: NullableStringFieldUpdateOperationsInput | string | null
    pressKit_filename?: NullableStringFieldUpdateOperationsInput | string | null
    pressKit_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    submissionInstructions?: JsonNullValueInput | InputJsonValue
    eventPage?: JsonNullValueInput | InputJsonValue
  }

  export type EventUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    shortname?: StringFieldUpdateOperationsInput | string
    published?: BoolFieldUpdateOperationsInput | boolean
    acceptingSubmissions?: BoolFieldUpdateOperationsInput | boolean
    acceptingTickets?: BoolFieldUpdateOperationsInput | boolean
    scheduleReleased?: BoolFieldUpdateOperationsInput | boolean
    acceptingVolunteers?: BoolFieldUpdateOperationsInput | boolean
    acceptingBackups?: BoolFieldUpdateOperationsInput | boolean
    acceptingShirts?: BoolFieldUpdateOperationsInput | boolean
    eventTimezone?: StringFieldUpdateOperationsInput | string
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raised?: NullableFloatFieldUpdateOperationsInput | number | null
    postEventPage?: JsonNullValueInput | InputJsonValue
    logo_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    logo_extension?: NullableStringFieldUpdateOperationsInput | string | null
    logo_width?: NullableIntFieldUpdateOperationsInput | number | null
    logo_height?: NullableIntFieldUpdateOperationsInput | number | null
    logo_id?: NullableStringFieldUpdateOperationsInput | string | null
    darkModeLogo_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_extension?: NullableStringFieldUpdateOperationsInput | string | null
    darkModeLogo_width?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_height?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_id?: NullableStringFieldUpdateOperationsInput | string | null
    heroImage_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_extension?: NullableStringFieldUpdateOperationsInput | string | null
    heroImage_width?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_height?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_id?: NullableStringFieldUpdateOperationsInput | string | null
    ogImage_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_extension?: NullableStringFieldUpdateOperationsInput | string | null
    ogImage_width?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_height?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_id?: NullableStringFieldUpdateOperationsInput | string | null
    postEventBackground_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_extension?: NullableStringFieldUpdateOperationsInput | string | null
    postEventBackground_width?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_height?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_id?: NullableStringFieldUpdateOperationsInput | string | null
    pressKit_filename?: NullableStringFieldUpdateOperationsInput | string | null
    pressKit_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    submissionInstructions?: JsonNullValueInput | InputJsonValue
    eventPage?: JsonNullValueInput | InputJsonValue
  }

  export type RoleCreateInput = {
    id?: string
    name?: string
    admin?: boolean
    canManageContent?: boolean
    canManageUsers?: boolean
    runner?: boolean
    volunteer?: boolean
    users?: UserCreateNestedManyWithoutRolesInput
    event?: EventCreateNestedOneWithoutFrom_Role_eventInput
    show?: boolean
    colour?: string
    textColour?: RoleTextColourType | null
  }

  export type RoleUncheckedCreateInput = {
    id?: string
    name?: string
    admin?: boolean
    canManageContent?: boolean
    canManageUsers?: boolean
    runner?: boolean
    volunteer?: boolean
    users?: UserUncheckedCreateNestedManyWithoutRolesInput
    eventId?: string | null
    show?: boolean
    colour?: string
    textColour?: RoleTextColourType | null
  }

  export type RoleUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    admin?: BoolFieldUpdateOperationsInput | boolean
    canManageContent?: BoolFieldUpdateOperationsInput | boolean
    canManageUsers?: BoolFieldUpdateOperationsInput | boolean
    runner?: BoolFieldUpdateOperationsInput | boolean
    volunteer?: BoolFieldUpdateOperationsInput | boolean
    users?: UserUpdateManyWithoutRolesNestedInput
    event?: EventUpdateOneWithoutFrom_Role_eventNestedInput
    show?: BoolFieldUpdateOperationsInput | boolean
    colour?: StringFieldUpdateOperationsInput | string
    textColour?: NullableEnumRoleTextColourTypeFieldUpdateOperationsInput | RoleTextColourType | null
  }

  export type RoleUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    admin?: BoolFieldUpdateOperationsInput | boolean
    canManageContent?: BoolFieldUpdateOperationsInput | boolean
    canManageUsers?: BoolFieldUpdateOperationsInput | boolean
    runner?: BoolFieldUpdateOperationsInput | boolean
    volunteer?: BoolFieldUpdateOperationsInput | boolean
    users?: UserUncheckedUpdateManyWithoutRolesNestedInput
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
    show?: BoolFieldUpdateOperationsInput | boolean
    colour?: StringFieldUpdateOperationsInput | string
    textColour?: NullableEnumRoleTextColourTypeFieldUpdateOperationsInput | RoleTextColourType | null
  }

  export type RoleCreateManyInput = {
    id?: string
    name?: string
    admin?: boolean
    canManageContent?: boolean
    canManageUsers?: boolean
    runner?: boolean
    volunteer?: boolean
    eventId?: string | null
    show?: boolean
    colour?: string
    textColour?: RoleTextColourType | null
  }

  export type RoleUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    admin?: BoolFieldUpdateOperationsInput | boolean
    canManageContent?: BoolFieldUpdateOperationsInput | boolean
    canManageUsers?: BoolFieldUpdateOperationsInput | boolean
    runner?: BoolFieldUpdateOperationsInput | boolean
    volunteer?: BoolFieldUpdateOperationsInput | boolean
    show?: BoolFieldUpdateOperationsInput | boolean
    colour?: StringFieldUpdateOperationsInput | string
    textColour?: NullableEnumRoleTextColourTypeFieldUpdateOperationsInput | RoleTextColourType | null
  }

  export type RoleUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    admin?: BoolFieldUpdateOperationsInput | boolean
    canManageContent?: BoolFieldUpdateOperationsInput | boolean
    canManageUsers?: BoolFieldUpdateOperationsInput | boolean
    runner?: BoolFieldUpdateOperationsInput | boolean
    volunteer?: BoolFieldUpdateOperationsInput | boolean
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
    show?: BoolFieldUpdateOperationsInput | boolean
    colour?: StringFieldUpdateOperationsInput | string
    textColour?: NullableEnumRoleTextColourTypeFieldUpdateOperationsInput | RoleTextColourType | null
  }

  export type RunCreateInput = {
    id?: string
    runners?: UserCreateNestedManyWithoutRunsInput
    originalSubmission?: SubmissionCreateNestedOneWithoutFrom_Run_originalSubmissionInput
    game?: string
    category?: string
    platform?: string
    estimate?: string
    finalTime?: string
    donationIncentive?: string
    race?: boolean
    racer?: string
    coop?: boolean
    twitchVOD?: string
    youtubeVOD?: string
    event?: EventCreateNestedOneWithoutRunsInput
    donationIncentiveObject?: IncentiveCreateNestedManyWithoutRunInput
    scheduledTime?: Date | string | null
  }

  export type RunUncheckedCreateInput = {
    id?: string
    runners?: UserUncheckedCreateNestedManyWithoutRunsInput
    originalSubmissionId?: string | null
    game?: string
    category?: string
    platform?: string
    estimate?: string
    finalTime?: string
    donationIncentive?: string
    race?: boolean
    racer?: string
    coop?: boolean
    twitchVOD?: string
    youtubeVOD?: string
    eventId?: string | null
    donationIncentiveObject?: IncentiveUncheckedCreateNestedManyWithoutRunInput
    scheduledTime?: Date | string | null
  }

  export type RunUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    runners?: UserUpdateManyWithoutRunsNestedInput
    originalSubmission?: SubmissionUpdateOneWithoutFrom_Run_originalSubmissionNestedInput
    game?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    platform?: StringFieldUpdateOperationsInput | string
    estimate?: StringFieldUpdateOperationsInput | string
    finalTime?: StringFieldUpdateOperationsInput | string
    donationIncentive?: StringFieldUpdateOperationsInput | string
    race?: BoolFieldUpdateOperationsInput | boolean
    racer?: StringFieldUpdateOperationsInput | string
    coop?: BoolFieldUpdateOperationsInput | boolean
    twitchVOD?: StringFieldUpdateOperationsInput | string
    youtubeVOD?: StringFieldUpdateOperationsInput | string
    event?: EventUpdateOneWithoutRunsNestedInput
    donationIncentiveObject?: IncentiveUpdateManyWithoutRunNestedInput
    scheduledTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RunUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    runners?: UserUncheckedUpdateManyWithoutRunsNestedInput
    originalSubmissionId?: NullableStringFieldUpdateOperationsInput | string | null
    game?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    platform?: StringFieldUpdateOperationsInput | string
    estimate?: StringFieldUpdateOperationsInput | string
    finalTime?: StringFieldUpdateOperationsInput | string
    donationIncentive?: StringFieldUpdateOperationsInput | string
    race?: BoolFieldUpdateOperationsInput | boolean
    racer?: StringFieldUpdateOperationsInput | string
    coop?: BoolFieldUpdateOperationsInput | boolean
    twitchVOD?: StringFieldUpdateOperationsInput | string
    youtubeVOD?: StringFieldUpdateOperationsInput | string
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
    donationIncentiveObject?: IncentiveUncheckedUpdateManyWithoutRunNestedInput
    scheduledTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RunCreateManyInput = {
    id?: string
    originalSubmissionId?: string | null
    game?: string
    category?: string
    platform?: string
    estimate?: string
    finalTime?: string
    donationIncentive?: string
    race?: boolean
    racer?: string
    coop?: boolean
    twitchVOD?: string
    youtubeVOD?: string
    eventId?: string | null
    scheduledTime?: Date | string | null
  }

  export type RunUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    game?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    platform?: StringFieldUpdateOperationsInput | string
    estimate?: StringFieldUpdateOperationsInput | string
    finalTime?: StringFieldUpdateOperationsInput | string
    donationIncentive?: StringFieldUpdateOperationsInput | string
    race?: BoolFieldUpdateOperationsInput | boolean
    racer?: StringFieldUpdateOperationsInput | string
    coop?: BoolFieldUpdateOperationsInput | boolean
    twitchVOD?: StringFieldUpdateOperationsInput | string
    youtubeVOD?: StringFieldUpdateOperationsInput | string
    scheduledTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RunUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    originalSubmissionId?: NullableStringFieldUpdateOperationsInput | string | null
    game?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    platform?: StringFieldUpdateOperationsInput | string
    estimate?: StringFieldUpdateOperationsInput | string
    finalTime?: StringFieldUpdateOperationsInput | string
    donationIncentive?: StringFieldUpdateOperationsInput | string
    race?: BoolFieldUpdateOperationsInput | boolean
    racer?: StringFieldUpdateOperationsInput | string
    coop?: BoolFieldUpdateOperationsInput | boolean
    twitchVOD?: StringFieldUpdateOperationsInput | string
    youtubeVOD?: StringFieldUpdateOperationsInput | string
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type VerificationCreateInput = {
    id?: string
    code?: string
    account?: string
  }

  export type VerificationUncheckedCreateInput = {
    id?: string
    code?: string
    account?: string
  }

  export type VerificationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    account?: StringFieldUpdateOperationsInput | string
  }

  export type VerificationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    account?: StringFieldUpdateOperationsInput | string
  }

  export type VerificationCreateManyInput = {
    id?: string
    code?: string
    account?: string
  }

  export type VerificationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    account?: StringFieldUpdateOperationsInput | string
  }

  export type VerificationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    account?: StringFieldUpdateOperationsInput | string
  }

  export type TicketCreateInput = {
    id?: string
    user?: UserCreateNestedOneWithoutTicketsInput
    event?: EventCreateNestedOneWithoutTicketsInput
    taken?: boolean
    method: TicketMethodType
    ticketID?: string
    paid?: boolean
    notes?: string
    numberOfTickets?: number | null
    stripeID?: string
    created?: Date | string | null
  }

  export type TicketUncheckedCreateInput = {
    id?: string
    userId?: string | null
    eventId?: string | null
    taken?: boolean
    method: TicketMethodType
    ticketID?: string
    paid?: boolean
    notes?: string
    numberOfTickets?: number | null
    stripeID?: string
    created?: Date | string | null
  }

  export type TicketUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user?: UserUpdateOneWithoutTicketsNestedInput
    event?: EventUpdateOneWithoutTicketsNestedInput
    taken?: BoolFieldUpdateOperationsInput | boolean
    method?: EnumTicketMethodTypeFieldUpdateOperationsInput | TicketMethodType
    ticketID?: StringFieldUpdateOperationsInput | string
    paid?: BoolFieldUpdateOperationsInput | boolean
    notes?: StringFieldUpdateOperationsInput | string
    numberOfTickets?: NullableIntFieldUpdateOperationsInput | number | null
    stripeID?: StringFieldUpdateOperationsInput | string
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TicketUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
    taken?: BoolFieldUpdateOperationsInput | boolean
    method?: EnumTicketMethodTypeFieldUpdateOperationsInput | TicketMethodType
    ticketID?: StringFieldUpdateOperationsInput | string
    paid?: BoolFieldUpdateOperationsInput | boolean
    notes?: StringFieldUpdateOperationsInput | string
    numberOfTickets?: NullableIntFieldUpdateOperationsInput | number | null
    stripeID?: StringFieldUpdateOperationsInput | string
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TicketCreateManyInput = {
    id?: string
    userId?: string | null
    eventId?: string | null
    taken?: boolean
    method: TicketMethodType
    ticketID?: string
    paid?: boolean
    notes?: string
    numberOfTickets?: number | null
    stripeID?: string
    created?: Date | string | null
  }

  export type TicketUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    taken?: BoolFieldUpdateOperationsInput | boolean
    method?: EnumTicketMethodTypeFieldUpdateOperationsInput | TicketMethodType
    ticketID?: StringFieldUpdateOperationsInput | string
    paid?: BoolFieldUpdateOperationsInput | boolean
    notes?: StringFieldUpdateOperationsInput | string
    numberOfTickets?: NullableIntFieldUpdateOperationsInput | number | null
    stripeID?: StringFieldUpdateOperationsInput | string
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TicketUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
    taken?: BoolFieldUpdateOperationsInput | boolean
    method?: EnumTicketMethodTypeFieldUpdateOperationsInput | TicketMethodType
    ticketID?: StringFieldUpdateOperationsInput | string
    paid?: BoolFieldUpdateOperationsInput | boolean
    notes?: StringFieldUpdateOperationsInput | string
    numberOfTickets?: NullableIntFieldUpdateOperationsInput | number | null
    stripeID?: StringFieldUpdateOperationsInput | string
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type VolunteerCreateInput = {
    id?: string
    volunteer?: UserCreateNestedOneWithoutVolunteerInput
    jobType?: VolunteerJobTypeType | null
    eventHostTime?: number | null
    maxDailyHostTime?: number | null
    dayTimes?: NullableJsonNullValueInput | InputJsonValue
    specificGame?: string
    specificRunner?: string
    additionalInfo?: string
    experience?: string
    favMeme?: string
    runnerManagementAvailability?: string
    techAvailablity?: string
    techExperience?: string
    event?: EventCreateNestedOneWithoutVolunteerInput
  }

  export type VolunteerUncheckedCreateInput = {
    id?: string
    volunteerId?: string | null
    jobType?: VolunteerJobTypeType | null
    eventHostTime?: number | null
    maxDailyHostTime?: number | null
    dayTimes?: NullableJsonNullValueInput | InputJsonValue
    specificGame?: string
    specificRunner?: string
    additionalInfo?: string
    experience?: string
    favMeme?: string
    runnerManagementAvailability?: string
    techAvailablity?: string
    techExperience?: string
    eventId?: string | null
  }

  export type VolunteerUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    volunteer?: UserUpdateOneWithoutVolunteerNestedInput
    jobType?: NullableEnumVolunteerJobTypeTypeFieldUpdateOperationsInput | VolunteerJobTypeType | null
    eventHostTime?: NullableIntFieldUpdateOperationsInput | number | null
    maxDailyHostTime?: NullableIntFieldUpdateOperationsInput | number | null
    dayTimes?: NullableJsonNullValueInput | InputJsonValue
    specificGame?: StringFieldUpdateOperationsInput | string
    specificRunner?: StringFieldUpdateOperationsInput | string
    additionalInfo?: StringFieldUpdateOperationsInput | string
    experience?: StringFieldUpdateOperationsInput | string
    favMeme?: StringFieldUpdateOperationsInput | string
    runnerManagementAvailability?: StringFieldUpdateOperationsInput | string
    techAvailablity?: StringFieldUpdateOperationsInput | string
    techExperience?: StringFieldUpdateOperationsInput | string
    event?: EventUpdateOneWithoutVolunteerNestedInput
  }

  export type VolunteerUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    volunteerId?: NullableStringFieldUpdateOperationsInput | string | null
    jobType?: NullableEnumVolunteerJobTypeTypeFieldUpdateOperationsInput | VolunteerJobTypeType | null
    eventHostTime?: NullableIntFieldUpdateOperationsInput | number | null
    maxDailyHostTime?: NullableIntFieldUpdateOperationsInput | number | null
    dayTimes?: NullableJsonNullValueInput | InputJsonValue
    specificGame?: StringFieldUpdateOperationsInput | string
    specificRunner?: StringFieldUpdateOperationsInput | string
    additionalInfo?: StringFieldUpdateOperationsInput | string
    experience?: StringFieldUpdateOperationsInput | string
    favMeme?: StringFieldUpdateOperationsInput | string
    runnerManagementAvailability?: StringFieldUpdateOperationsInput | string
    techAvailablity?: StringFieldUpdateOperationsInput | string
    techExperience?: StringFieldUpdateOperationsInput | string
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type VolunteerCreateManyInput = {
    id?: string
    volunteerId?: string | null
    jobType?: VolunteerJobTypeType | null
    eventHostTime?: number | null
    maxDailyHostTime?: number | null
    dayTimes?: NullableJsonNullValueInput | InputJsonValue
    specificGame?: string
    specificRunner?: string
    additionalInfo?: string
    experience?: string
    favMeme?: string
    runnerManagementAvailability?: string
    techAvailablity?: string
    techExperience?: string
    eventId?: string | null
  }

  export type VolunteerUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobType?: NullableEnumVolunteerJobTypeTypeFieldUpdateOperationsInput | VolunteerJobTypeType | null
    eventHostTime?: NullableIntFieldUpdateOperationsInput | number | null
    maxDailyHostTime?: NullableIntFieldUpdateOperationsInput | number | null
    dayTimes?: NullableJsonNullValueInput | InputJsonValue
    specificGame?: StringFieldUpdateOperationsInput | string
    specificRunner?: StringFieldUpdateOperationsInput | string
    additionalInfo?: StringFieldUpdateOperationsInput | string
    experience?: StringFieldUpdateOperationsInput | string
    favMeme?: StringFieldUpdateOperationsInput | string
    runnerManagementAvailability?: StringFieldUpdateOperationsInput | string
    techAvailablity?: StringFieldUpdateOperationsInput | string
    techExperience?: StringFieldUpdateOperationsInput | string
  }

  export type VolunteerUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    volunteerId?: NullableStringFieldUpdateOperationsInput | string | null
    jobType?: NullableEnumVolunteerJobTypeTypeFieldUpdateOperationsInput | VolunteerJobTypeType | null
    eventHostTime?: NullableIntFieldUpdateOperationsInput | number | null
    maxDailyHostTime?: NullableIntFieldUpdateOperationsInput | number | null
    dayTimes?: NullableJsonNullValueInput | InputJsonValue
    specificGame?: StringFieldUpdateOperationsInput | string
    specificRunner?: StringFieldUpdateOperationsInput | string
    additionalInfo?: StringFieldUpdateOperationsInput | string
    experience?: StringFieldUpdateOperationsInput | string
    favMeme?: StringFieldUpdateOperationsInput | string
    runnerManagementAvailability?: StringFieldUpdateOperationsInput | string
    techAvailablity?: StringFieldUpdateOperationsInput | string
    techExperience?: StringFieldUpdateOperationsInput | string
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ShirtOrderCreateInput = {
    id?: string
    user?: UserCreateNestedOneWithoutShirtsInput
    taken?: boolean
    method: ShirtOrderMethodType
    shirtID?: string
    paid?: boolean
    notes?: string
    size: ShirtOrderSizeType
    colour: ShirtOrderColourType
    stripeID?: string
    created?: Date | string | null
  }

  export type ShirtOrderUncheckedCreateInput = {
    id?: string
    userId?: string | null
    taken?: boolean
    method: ShirtOrderMethodType
    shirtID?: string
    paid?: boolean
    notes?: string
    size: ShirtOrderSizeType
    colour: ShirtOrderColourType
    stripeID?: string
    created?: Date | string | null
  }

  export type ShirtOrderUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user?: UserUpdateOneWithoutShirtsNestedInput
    taken?: BoolFieldUpdateOperationsInput | boolean
    method?: EnumShirtOrderMethodTypeFieldUpdateOperationsInput | ShirtOrderMethodType
    shirtID?: StringFieldUpdateOperationsInput | string
    paid?: BoolFieldUpdateOperationsInput | boolean
    notes?: StringFieldUpdateOperationsInput | string
    size?: EnumShirtOrderSizeTypeFieldUpdateOperationsInput | ShirtOrderSizeType
    colour?: EnumShirtOrderColourTypeFieldUpdateOperationsInput | ShirtOrderColourType
    stripeID?: StringFieldUpdateOperationsInput | string
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ShirtOrderUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    taken?: BoolFieldUpdateOperationsInput | boolean
    method?: EnumShirtOrderMethodTypeFieldUpdateOperationsInput | ShirtOrderMethodType
    shirtID?: StringFieldUpdateOperationsInput | string
    paid?: BoolFieldUpdateOperationsInput | boolean
    notes?: StringFieldUpdateOperationsInput | string
    size?: EnumShirtOrderSizeTypeFieldUpdateOperationsInput | ShirtOrderSizeType
    colour?: EnumShirtOrderColourTypeFieldUpdateOperationsInput | ShirtOrderColourType
    stripeID?: StringFieldUpdateOperationsInput | string
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ShirtOrderCreateManyInput = {
    id?: string
    userId?: string | null
    taken?: boolean
    method: ShirtOrderMethodType
    shirtID?: string
    paid?: boolean
    notes?: string
    size: ShirtOrderSizeType
    colour: ShirtOrderColourType
    stripeID?: string
    created?: Date | string | null
  }

  export type ShirtOrderUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    taken?: BoolFieldUpdateOperationsInput | boolean
    method?: EnumShirtOrderMethodTypeFieldUpdateOperationsInput | ShirtOrderMethodType
    shirtID?: StringFieldUpdateOperationsInput | string
    paid?: BoolFieldUpdateOperationsInput | boolean
    notes?: StringFieldUpdateOperationsInput | string
    size?: EnumShirtOrderSizeTypeFieldUpdateOperationsInput | ShirtOrderSizeType
    colour?: EnumShirtOrderColourTypeFieldUpdateOperationsInput | ShirtOrderColourType
    stripeID?: StringFieldUpdateOperationsInput | string
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ShirtOrderUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    taken?: BoolFieldUpdateOperationsInput | boolean
    method?: EnumShirtOrderMethodTypeFieldUpdateOperationsInput | ShirtOrderMethodType
    shirtID?: StringFieldUpdateOperationsInput | string
    paid?: BoolFieldUpdateOperationsInput | boolean
    notes?: StringFieldUpdateOperationsInput | string
    size?: EnumShirtOrderSizeTypeFieldUpdateOperationsInput | ShirtOrderSizeType
    colour?: EnumShirtOrderColourTypeFieldUpdateOperationsInput | ShirtOrderColourType
    stripeID?: StringFieldUpdateOperationsInput | string
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IncentiveCreateInput = {
    id?: string
    run?: RunCreateNestedOneWithoutDonationIncentiveObjectInput
    event?: EventCreateNestedOneWithoutDonationIncentivesInput
    title?: string
    notes?: string
    type?: string
    data?: NullableJsonNullValueInput | InputJsonValue
    active?: boolean
  }

  export type IncentiveUncheckedCreateInput = {
    id?: string
    runId?: string | null
    eventId?: string | null
    title?: string
    notes?: string
    type?: string
    data?: NullableJsonNullValueInput | InputJsonValue
    active?: boolean
  }

  export type IncentiveUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    run?: RunUpdateOneWithoutDonationIncentiveObjectNestedInput
    event?: EventUpdateOneWithoutDonationIncentivesNestedInput
    title?: StringFieldUpdateOperationsInput | string
    notes?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    data?: NullableJsonNullValueInput | InputJsonValue
    active?: BoolFieldUpdateOperationsInput | boolean
  }

  export type IncentiveUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    runId?: NullableStringFieldUpdateOperationsInput | string | null
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    notes?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    data?: NullableJsonNullValueInput | InputJsonValue
    active?: BoolFieldUpdateOperationsInput | boolean
  }

  export type IncentiveCreateManyInput = {
    id?: string
    runId?: string | null
    eventId?: string | null
    title?: string
    notes?: string
    type?: string
    data?: NullableJsonNullValueInput | InputJsonValue
    active?: boolean
  }

  export type IncentiveUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    notes?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    data?: NullableJsonNullValueInput | InputJsonValue
    active?: BoolFieldUpdateOperationsInput | boolean
  }

  export type IncentiveUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    runId?: NullableStringFieldUpdateOperationsInput | string | null
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    notes?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    data?: NullableJsonNullValueInput | InputJsonValue
    active?: BoolFieldUpdateOperationsInput | boolean
  }

  export type StringFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringFilter | string
  }

  export type UserListRelationFilter = {
    every?: UserWhereInput
    some?: UserWhereInput
    none?: UserWhereInput
  }

  export type BoolFilter = {
    equals?: boolean
    not?: NestedBoolFilter | boolean
  }

  export type DateTimeNullableFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableFilter | Date | string | null
  }

  export type EnumPostRoleTypeNullableFilter = {
    equals?: PostRoleType | null
    in?: Enumerable<PostRoleType> | null
    notIn?: Enumerable<PostRoleType> | null
    not?: NestedEnumPostRoleTypeNullableFilter | PostRoleType | null
  }
  export type JsonFilter = 
    | PatchUndefined<
        Either<Required<JsonFilterBase>, Exclude<keyof Required<JsonFilterBase>, 'path'>>,
        Required<JsonFilterBase>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase>, 'path'>>

  export type JsonFilterBase = {
    equals?: InputJsonValue | JsonNullValueFilter
    path?: Array<string>
    string_contains?: string
    string_starts_with?: string
    string_ends_with?: string
    array_contains?: InputJsonValue | null
    array_starts_with?: InputJsonValue | null
    array_ends_with?: InputJsonValue | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonNullValueFilter
  }

  export type EventRelationFilter = {
    is?: EventWhereInput | null
    isNot?: EventWhereInput | null
  }

  export type StringNullableFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringNullableFilter | string | null
  }

  export type UserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PostCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    published?: SortOrder
    publishedDate?: SortOrder
    editedDate?: SortOrder
    role?: SortOrder
    content?: SortOrder
    intro?: SortOrder
    eventId?: SortOrder
  }

  export type PostMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    published?: SortOrder
    publishedDate?: SortOrder
    editedDate?: SortOrder
    role?: SortOrder
    intro?: SortOrder
    eventId?: SortOrder
  }

  export type PostMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    published?: SortOrder
    publishedDate?: SortOrder
    editedDate?: SortOrder
    role?: SortOrder
    intro?: SortOrder
    eventId?: SortOrder
  }

  export type StringWithAggregatesFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter | string
    _count?: NestedIntFilter
    _min?: NestedStringFilter
    _max?: NestedStringFilter
  }

  export type BoolWithAggregatesFilter = {
    equals?: boolean
    not?: NestedBoolWithAggregatesFilter | boolean
    _count?: NestedIntFilter
    _min?: NestedBoolFilter
    _max?: NestedBoolFilter
  }

  export type DateTimeNullableWithAggregatesFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableWithAggregatesFilter | Date | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedDateTimeNullableFilter
    _max?: NestedDateTimeNullableFilter
  }

  export type EnumPostRoleTypeNullableWithAggregatesFilter = {
    equals?: PostRoleType | null
    in?: Enumerable<PostRoleType> | null
    notIn?: Enumerable<PostRoleType> | null
    not?: NestedEnumPostRoleTypeNullableWithAggregatesFilter | PostRoleType | null
    _count?: NestedIntNullableFilter
    _min?: NestedEnumPostRoleTypeNullableFilter
    _max?: NestedEnumPostRoleTypeNullableFilter
  }
  export type JsonWithAggregatesFilter = 
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase>, Exclude<keyof Required<JsonWithAggregatesFilterBase>, 'path'>>,
        Required<JsonWithAggregatesFilterBase>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase>, 'path'>>

  export type JsonWithAggregatesFilterBase = {
    equals?: InputJsonValue | JsonNullValueFilter
    path?: Array<string>
    string_contains?: string
    string_starts_with?: string
    string_ends_with?: string
    array_contains?: InputJsonValue | null
    array_starts_with?: InputJsonValue | null
    array_ends_with?: InputJsonValue | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonNullValueFilter
    _count?: NestedIntFilter
    _min?: NestedJsonFilter
    _max?: NestedJsonFilter
  }

  export type StringNullableWithAggregatesFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedStringNullableFilter
    _max?: NestedStringNullableFilter
  }

  export type SubmissionListRelationFilter = {
    every?: SubmissionWhereInput
    some?: SubmissionWhereInput
    none?: SubmissionWhereInput
  }

  export type RoleListRelationFilter = {
    every?: RoleWhereInput
    some?: RoleWhereInput
    none?: RoleWhereInput
  }

  export type RunListRelationFilter = {
    every?: RunWhereInput
    some?: RunWhereInput
    none?: RunWhereInput
  }

  export type EnumUserStateTypeNullableFilter = {
    equals?: UserStateType | null
    in?: Enumerable<UserStateType> | null
    notIn?: Enumerable<UserStateType> | null
    not?: NestedEnumUserStateTypeNullableFilter | UserStateType | null
  }

  export type TicketListRelationFilter = {
    every?: TicketWhereInput
    some?: TicketWhereInput
    none?: TicketWhereInput
  }

  export type VolunteerListRelationFilter = {
    every?: VolunteerWhereInput
    some?: VolunteerWhereInput
    none?: VolunteerWhereInput
  }

  export type ShirtOrderListRelationFilter = {
    every?: ShirtOrderWhereInput
    some?: ShirtOrderWhereInput
    none?: ShirtOrderWhereInput
  }

  export type PostListRelationFilter = {
    every?: PostWhereInput
    some?: PostWhereInput
    none?: PostWhereInput
  }

  export type SubmissionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RoleOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RunOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TicketOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type VolunteerOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ShirtOrderOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PostOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    accountCreated?: SortOrder
    dateOfBirth?: SortOrder
    pronouns?: SortOrder
    verified?: SortOrder
    state?: SortOrder
    sentVerification?: SortOrder
    discord?: SortOrder
    twitter?: SortOrder
    twitch?: SortOrder
    passwordResetToken?: SortOrder
    passwordResetIssuedAt?: SortOrder
    passwordResetRedeemedAt?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    accountCreated?: SortOrder
    dateOfBirth?: SortOrder
    pronouns?: SortOrder
    verified?: SortOrder
    state?: SortOrder
    sentVerification?: SortOrder
    discord?: SortOrder
    twitter?: SortOrder
    twitch?: SortOrder
    passwordResetToken?: SortOrder
    passwordResetIssuedAt?: SortOrder
    passwordResetRedeemedAt?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    accountCreated?: SortOrder
    dateOfBirth?: SortOrder
    pronouns?: SortOrder
    verified?: SortOrder
    state?: SortOrder
    sentVerification?: SortOrder
    discord?: SortOrder
    twitter?: SortOrder
    twitch?: SortOrder
    passwordResetToken?: SortOrder
    passwordResetIssuedAt?: SortOrder
    passwordResetRedeemedAt?: SortOrder
  }

  export type EnumUserStateTypeNullableWithAggregatesFilter = {
    equals?: UserStateType | null
    in?: Enumerable<UserStateType> | null
    notIn?: Enumerable<UserStateType> | null
    not?: NestedEnumUserStateTypeNullableWithAggregatesFilter | UserStateType | null
    _count?: NestedIntNullableFilter
    _min?: NestedEnumUserStateTypeNullableFilter
    _max?: NestedEnumUserStateTypeNullableFilter
  }

  export type UserRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type EnumSubmissionAgeRatingTypeNullableFilter = {
    equals?: SubmissionAgeRatingType | null
    in?: Enumerable<SubmissionAgeRatingType> | null
    notIn?: Enumerable<SubmissionAgeRatingType> | null
    not?: NestedEnumSubmissionAgeRatingTypeNullableFilter | SubmissionAgeRatingType | null
  }
  export type JsonNullableFilter = 
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase>, Exclude<keyof Required<JsonNullableFilterBase>, 'path'>>,
        Required<JsonNullableFilterBase>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase>, 'path'>>

  export type JsonNullableFilterBase = {
    equals?: InputJsonValue | JsonNullValueFilter
    path?: Array<string>
    string_contains?: string
    string_starts_with?: string
    string_ends_with?: string
    array_contains?: InputJsonValue | null
    array_starts_with?: InputJsonValue | null
    array_ends_with?: InputJsonValue | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonNullValueFilter
  }

  export type EnumSubmissionRaceTypeNullableFilter = {
    equals?: SubmissionRaceType | null
    in?: Enumerable<SubmissionRaceType> | null
    notIn?: Enumerable<SubmissionRaceType> | null
    not?: NestedEnumSubmissionRaceTypeNullableFilter | SubmissionRaceType | null
  }

  export type EnumSubmissionStatusTypeNullableFilter = {
    equals?: SubmissionStatusType | null
    in?: Enumerable<SubmissionStatusType> | null
    notIn?: Enumerable<SubmissionStatusType> | null
    not?: NestedEnumSubmissionStatusTypeNullableFilter | SubmissionStatusType | null
  }

  export type SubmissionCountOrderByAggregateInput = {
    id?: SortOrder
    runnerId?: SortOrder
    created?: SortOrder
    game?: SortOrder
    category?: SortOrder
    platform?: SortOrder
    estimate?: SortOrder
    ageRating?: SortOrder
    donationIncentive?: SortOrder
    specialReqs?: SortOrder
    availability?: SortOrder
    race?: SortOrder
    racer?: SortOrder
    coop?: SortOrder
    video?: SortOrder
    status?: SortOrder
    eventId?: SortOrder
    willingBackup?: SortOrder
  }

  export type SubmissionMaxOrderByAggregateInput = {
    id?: SortOrder
    runnerId?: SortOrder
    created?: SortOrder
    game?: SortOrder
    category?: SortOrder
    platform?: SortOrder
    estimate?: SortOrder
    ageRating?: SortOrder
    donationIncentive?: SortOrder
    specialReqs?: SortOrder
    race?: SortOrder
    racer?: SortOrder
    coop?: SortOrder
    video?: SortOrder
    status?: SortOrder
    eventId?: SortOrder
    willingBackup?: SortOrder
  }

  export type SubmissionMinOrderByAggregateInput = {
    id?: SortOrder
    runnerId?: SortOrder
    created?: SortOrder
    game?: SortOrder
    category?: SortOrder
    platform?: SortOrder
    estimate?: SortOrder
    ageRating?: SortOrder
    donationIncentive?: SortOrder
    specialReqs?: SortOrder
    race?: SortOrder
    racer?: SortOrder
    coop?: SortOrder
    video?: SortOrder
    status?: SortOrder
    eventId?: SortOrder
    willingBackup?: SortOrder
  }

  export type EnumSubmissionAgeRatingTypeNullableWithAggregatesFilter = {
    equals?: SubmissionAgeRatingType | null
    in?: Enumerable<SubmissionAgeRatingType> | null
    notIn?: Enumerable<SubmissionAgeRatingType> | null
    not?: NestedEnumSubmissionAgeRatingTypeNullableWithAggregatesFilter | SubmissionAgeRatingType | null
    _count?: NestedIntNullableFilter
    _min?: NestedEnumSubmissionAgeRatingTypeNullableFilter
    _max?: NestedEnumSubmissionAgeRatingTypeNullableFilter
  }
  export type JsonNullableWithAggregatesFilter = 
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase = {
    equals?: InputJsonValue | JsonNullValueFilter
    path?: Array<string>
    string_contains?: string
    string_starts_with?: string
    string_ends_with?: string
    array_contains?: InputJsonValue | null
    array_starts_with?: InputJsonValue | null
    array_ends_with?: InputJsonValue | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonNullValueFilter
    _count?: NestedIntNullableFilter
    _min?: NestedJsonNullableFilter
    _max?: NestedJsonNullableFilter
  }

  export type EnumSubmissionRaceTypeNullableWithAggregatesFilter = {
    equals?: SubmissionRaceType | null
    in?: Enumerable<SubmissionRaceType> | null
    notIn?: Enumerable<SubmissionRaceType> | null
    not?: NestedEnumSubmissionRaceTypeNullableWithAggregatesFilter | SubmissionRaceType | null
    _count?: NestedIntNullableFilter
    _min?: NestedEnumSubmissionRaceTypeNullableFilter
    _max?: NestedEnumSubmissionRaceTypeNullableFilter
  }

  export type EnumSubmissionStatusTypeNullableWithAggregatesFilter = {
    equals?: SubmissionStatusType | null
    in?: Enumerable<SubmissionStatusType> | null
    notIn?: Enumerable<SubmissionStatusType> | null
    not?: NestedEnumSubmissionStatusTypeNullableWithAggregatesFilter | SubmissionStatusType | null
    _count?: NestedIntNullableFilter
    _min?: NestedEnumSubmissionStatusTypeNullableFilter
    _max?: NestedEnumSubmissionStatusTypeNullableFilter
  }

  export type FloatNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatNullableFilter | number | null
  }

  export type IncentiveListRelationFilter = {
    every?: IncentiveWhereInput
    some?: IncentiveWhereInput
    none?: IncentiveWhereInput
  }

  export type IntNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableFilter | number | null
  }

  export type IncentiveOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EventCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    shortname?: SortOrder
    published?: SortOrder
    acceptingSubmissions?: SortOrder
    acceptingTickets?: SortOrder
    scheduleReleased?: SortOrder
    acceptingVolunteers?: SortOrder
    acceptingBackups?: SortOrder
    acceptingShirts?: SortOrder
    eventTimezone?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    raised?: SortOrder
    postEventPage?: SortOrder
    logo_filesize?: SortOrder
    logo_extension?: SortOrder
    logo_width?: SortOrder
    logo_height?: SortOrder
    logo_id?: SortOrder
    darkModeLogo_filesize?: SortOrder
    darkModeLogo_extension?: SortOrder
    darkModeLogo_width?: SortOrder
    darkModeLogo_height?: SortOrder
    darkModeLogo_id?: SortOrder
    heroImage_filesize?: SortOrder
    heroImage_extension?: SortOrder
    heroImage_width?: SortOrder
    heroImage_height?: SortOrder
    heroImage_id?: SortOrder
    ogImage_filesize?: SortOrder
    ogImage_extension?: SortOrder
    ogImage_width?: SortOrder
    ogImage_height?: SortOrder
    ogImage_id?: SortOrder
    postEventBackground_filesize?: SortOrder
    postEventBackground_extension?: SortOrder
    postEventBackground_width?: SortOrder
    postEventBackground_height?: SortOrder
    postEventBackground_id?: SortOrder
    pressKit_filename?: SortOrder
    pressKit_filesize?: SortOrder
    submissionInstructions?: SortOrder
    eventPage?: SortOrder
  }

  export type EventAvgOrderByAggregateInput = {
    raised?: SortOrder
    logo_filesize?: SortOrder
    logo_width?: SortOrder
    logo_height?: SortOrder
    darkModeLogo_filesize?: SortOrder
    darkModeLogo_width?: SortOrder
    darkModeLogo_height?: SortOrder
    heroImage_filesize?: SortOrder
    heroImage_width?: SortOrder
    heroImage_height?: SortOrder
    ogImage_filesize?: SortOrder
    ogImage_width?: SortOrder
    ogImage_height?: SortOrder
    postEventBackground_filesize?: SortOrder
    postEventBackground_width?: SortOrder
    postEventBackground_height?: SortOrder
    pressKit_filesize?: SortOrder
  }

  export type EventMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    shortname?: SortOrder
    published?: SortOrder
    acceptingSubmissions?: SortOrder
    acceptingTickets?: SortOrder
    scheduleReleased?: SortOrder
    acceptingVolunteers?: SortOrder
    acceptingBackups?: SortOrder
    acceptingShirts?: SortOrder
    eventTimezone?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    raised?: SortOrder
    logo_filesize?: SortOrder
    logo_extension?: SortOrder
    logo_width?: SortOrder
    logo_height?: SortOrder
    logo_id?: SortOrder
    darkModeLogo_filesize?: SortOrder
    darkModeLogo_extension?: SortOrder
    darkModeLogo_width?: SortOrder
    darkModeLogo_height?: SortOrder
    darkModeLogo_id?: SortOrder
    heroImage_filesize?: SortOrder
    heroImage_extension?: SortOrder
    heroImage_width?: SortOrder
    heroImage_height?: SortOrder
    heroImage_id?: SortOrder
    ogImage_filesize?: SortOrder
    ogImage_extension?: SortOrder
    ogImage_width?: SortOrder
    ogImage_height?: SortOrder
    ogImage_id?: SortOrder
    postEventBackground_filesize?: SortOrder
    postEventBackground_extension?: SortOrder
    postEventBackground_width?: SortOrder
    postEventBackground_height?: SortOrder
    postEventBackground_id?: SortOrder
    pressKit_filename?: SortOrder
    pressKit_filesize?: SortOrder
  }

  export type EventMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    shortname?: SortOrder
    published?: SortOrder
    acceptingSubmissions?: SortOrder
    acceptingTickets?: SortOrder
    scheduleReleased?: SortOrder
    acceptingVolunteers?: SortOrder
    acceptingBackups?: SortOrder
    acceptingShirts?: SortOrder
    eventTimezone?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    raised?: SortOrder
    logo_filesize?: SortOrder
    logo_extension?: SortOrder
    logo_width?: SortOrder
    logo_height?: SortOrder
    logo_id?: SortOrder
    darkModeLogo_filesize?: SortOrder
    darkModeLogo_extension?: SortOrder
    darkModeLogo_width?: SortOrder
    darkModeLogo_height?: SortOrder
    darkModeLogo_id?: SortOrder
    heroImage_filesize?: SortOrder
    heroImage_extension?: SortOrder
    heroImage_width?: SortOrder
    heroImage_height?: SortOrder
    heroImage_id?: SortOrder
    ogImage_filesize?: SortOrder
    ogImage_extension?: SortOrder
    ogImage_width?: SortOrder
    ogImage_height?: SortOrder
    ogImage_id?: SortOrder
    postEventBackground_filesize?: SortOrder
    postEventBackground_extension?: SortOrder
    postEventBackground_width?: SortOrder
    postEventBackground_height?: SortOrder
    postEventBackground_id?: SortOrder
    pressKit_filename?: SortOrder
    pressKit_filesize?: SortOrder
  }

  export type EventSumOrderByAggregateInput = {
    raised?: SortOrder
    logo_filesize?: SortOrder
    logo_width?: SortOrder
    logo_height?: SortOrder
    darkModeLogo_filesize?: SortOrder
    darkModeLogo_width?: SortOrder
    darkModeLogo_height?: SortOrder
    heroImage_filesize?: SortOrder
    heroImage_width?: SortOrder
    heroImage_height?: SortOrder
    ogImage_filesize?: SortOrder
    ogImage_width?: SortOrder
    ogImage_height?: SortOrder
    postEventBackground_filesize?: SortOrder
    postEventBackground_width?: SortOrder
    postEventBackground_height?: SortOrder
    pressKit_filesize?: SortOrder
  }

  export type FloatNullableWithAggregatesFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatNullableWithAggregatesFilter | number | null
    _count?: NestedIntNullableFilter
    _avg?: NestedFloatNullableFilter
    _sum?: NestedFloatNullableFilter
    _min?: NestedFloatNullableFilter
    _max?: NestedFloatNullableFilter
  }

  export type IntNullableWithAggregatesFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableWithAggregatesFilter | number | null
    _count?: NestedIntNullableFilter
    _avg?: NestedFloatNullableFilter
    _sum?: NestedIntNullableFilter
    _min?: NestedIntNullableFilter
    _max?: NestedIntNullableFilter
  }

  export type EnumRoleTextColourTypeNullableFilter = {
    equals?: RoleTextColourType | null
    in?: Enumerable<RoleTextColourType> | null
    notIn?: Enumerable<RoleTextColourType> | null
    not?: NestedEnumRoleTextColourTypeNullableFilter | RoleTextColourType | null
  }

  export type RoleCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    admin?: SortOrder
    canManageContent?: SortOrder
    canManageUsers?: SortOrder
    runner?: SortOrder
    volunteer?: SortOrder
    eventId?: SortOrder
    show?: SortOrder
    colour?: SortOrder
    textColour?: SortOrder
  }

  export type RoleMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    admin?: SortOrder
    canManageContent?: SortOrder
    canManageUsers?: SortOrder
    runner?: SortOrder
    volunteer?: SortOrder
    eventId?: SortOrder
    show?: SortOrder
    colour?: SortOrder
    textColour?: SortOrder
  }

  export type RoleMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    admin?: SortOrder
    canManageContent?: SortOrder
    canManageUsers?: SortOrder
    runner?: SortOrder
    volunteer?: SortOrder
    eventId?: SortOrder
    show?: SortOrder
    colour?: SortOrder
    textColour?: SortOrder
  }

  export type EnumRoleTextColourTypeNullableWithAggregatesFilter = {
    equals?: RoleTextColourType | null
    in?: Enumerable<RoleTextColourType> | null
    notIn?: Enumerable<RoleTextColourType> | null
    not?: NestedEnumRoleTextColourTypeNullableWithAggregatesFilter | RoleTextColourType | null
    _count?: NestedIntNullableFilter
    _min?: NestedEnumRoleTextColourTypeNullableFilter
    _max?: NestedEnumRoleTextColourTypeNullableFilter
  }

  export type SubmissionRelationFilter = {
    is?: SubmissionWhereInput | null
    isNot?: SubmissionWhereInput | null
  }

  export type RunCountOrderByAggregateInput = {
    id?: SortOrder
    originalSubmissionId?: SortOrder
    game?: SortOrder
    category?: SortOrder
    platform?: SortOrder
    estimate?: SortOrder
    finalTime?: SortOrder
    donationIncentive?: SortOrder
    race?: SortOrder
    racer?: SortOrder
    coop?: SortOrder
    twitchVOD?: SortOrder
    youtubeVOD?: SortOrder
    eventId?: SortOrder
    scheduledTime?: SortOrder
  }

  export type RunMaxOrderByAggregateInput = {
    id?: SortOrder
    originalSubmissionId?: SortOrder
    game?: SortOrder
    category?: SortOrder
    platform?: SortOrder
    estimate?: SortOrder
    finalTime?: SortOrder
    donationIncentive?: SortOrder
    race?: SortOrder
    racer?: SortOrder
    coop?: SortOrder
    twitchVOD?: SortOrder
    youtubeVOD?: SortOrder
    eventId?: SortOrder
    scheduledTime?: SortOrder
  }

  export type RunMinOrderByAggregateInput = {
    id?: SortOrder
    originalSubmissionId?: SortOrder
    game?: SortOrder
    category?: SortOrder
    platform?: SortOrder
    estimate?: SortOrder
    finalTime?: SortOrder
    donationIncentive?: SortOrder
    race?: SortOrder
    racer?: SortOrder
    coop?: SortOrder
    twitchVOD?: SortOrder
    youtubeVOD?: SortOrder
    eventId?: SortOrder
    scheduledTime?: SortOrder
  }

  export type VerificationCountOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    account?: SortOrder
  }

  export type VerificationMaxOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    account?: SortOrder
  }

  export type VerificationMinOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    account?: SortOrder
  }

  export type EnumTicketMethodTypeFilter = {
    equals?: TicketMethodType
    in?: Enumerable<TicketMethodType>
    notIn?: Enumerable<TicketMethodType>
    not?: NestedEnumTicketMethodTypeFilter | TicketMethodType
  }

  export type TicketCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    eventId?: SortOrder
    taken?: SortOrder
    method?: SortOrder
    ticketID?: SortOrder
    paid?: SortOrder
    notes?: SortOrder
    numberOfTickets?: SortOrder
    stripeID?: SortOrder
    created?: SortOrder
  }

  export type TicketAvgOrderByAggregateInput = {
    numberOfTickets?: SortOrder
  }

  export type TicketMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    eventId?: SortOrder
    taken?: SortOrder
    method?: SortOrder
    ticketID?: SortOrder
    paid?: SortOrder
    notes?: SortOrder
    numberOfTickets?: SortOrder
    stripeID?: SortOrder
    created?: SortOrder
  }

  export type TicketMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    eventId?: SortOrder
    taken?: SortOrder
    method?: SortOrder
    ticketID?: SortOrder
    paid?: SortOrder
    notes?: SortOrder
    numberOfTickets?: SortOrder
    stripeID?: SortOrder
    created?: SortOrder
  }

  export type TicketSumOrderByAggregateInput = {
    numberOfTickets?: SortOrder
  }

  export type EnumTicketMethodTypeWithAggregatesFilter = {
    equals?: TicketMethodType
    in?: Enumerable<TicketMethodType>
    notIn?: Enumerable<TicketMethodType>
    not?: NestedEnumTicketMethodTypeWithAggregatesFilter | TicketMethodType
    _count?: NestedIntFilter
    _min?: NestedEnumTicketMethodTypeFilter
    _max?: NestedEnumTicketMethodTypeFilter
  }

  export type EnumVolunteerJobTypeTypeNullableFilter = {
    equals?: VolunteerJobTypeType | null
    in?: Enumerable<VolunteerJobTypeType> | null
    notIn?: Enumerable<VolunteerJobTypeType> | null
    not?: NestedEnumVolunteerJobTypeTypeNullableFilter | VolunteerJobTypeType | null
  }

  export type VolunteerCountOrderByAggregateInput = {
    id?: SortOrder
    volunteerId?: SortOrder
    jobType?: SortOrder
    eventHostTime?: SortOrder
    maxDailyHostTime?: SortOrder
    dayTimes?: SortOrder
    specificGame?: SortOrder
    specificRunner?: SortOrder
    additionalInfo?: SortOrder
    experience?: SortOrder
    favMeme?: SortOrder
    runnerManagementAvailability?: SortOrder
    techAvailablity?: SortOrder
    techExperience?: SortOrder
    eventId?: SortOrder
  }

  export type VolunteerAvgOrderByAggregateInput = {
    eventHostTime?: SortOrder
    maxDailyHostTime?: SortOrder
  }

  export type VolunteerMaxOrderByAggregateInput = {
    id?: SortOrder
    volunteerId?: SortOrder
    jobType?: SortOrder
    eventHostTime?: SortOrder
    maxDailyHostTime?: SortOrder
    specificGame?: SortOrder
    specificRunner?: SortOrder
    additionalInfo?: SortOrder
    experience?: SortOrder
    favMeme?: SortOrder
    runnerManagementAvailability?: SortOrder
    techAvailablity?: SortOrder
    techExperience?: SortOrder
    eventId?: SortOrder
  }

  export type VolunteerMinOrderByAggregateInput = {
    id?: SortOrder
    volunteerId?: SortOrder
    jobType?: SortOrder
    eventHostTime?: SortOrder
    maxDailyHostTime?: SortOrder
    specificGame?: SortOrder
    specificRunner?: SortOrder
    additionalInfo?: SortOrder
    experience?: SortOrder
    favMeme?: SortOrder
    runnerManagementAvailability?: SortOrder
    techAvailablity?: SortOrder
    techExperience?: SortOrder
    eventId?: SortOrder
  }

  export type VolunteerSumOrderByAggregateInput = {
    eventHostTime?: SortOrder
    maxDailyHostTime?: SortOrder
  }

  export type EnumVolunteerJobTypeTypeNullableWithAggregatesFilter = {
    equals?: VolunteerJobTypeType | null
    in?: Enumerable<VolunteerJobTypeType> | null
    notIn?: Enumerable<VolunteerJobTypeType> | null
    not?: NestedEnumVolunteerJobTypeTypeNullableWithAggregatesFilter | VolunteerJobTypeType | null
    _count?: NestedIntNullableFilter
    _min?: NestedEnumVolunteerJobTypeTypeNullableFilter
    _max?: NestedEnumVolunteerJobTypeTypeNullableFilter
  }

  export type EnumShirtOrderMethodTypeFilter = {
    equals?: ShirtOrderMethodType
    in?: Enumerable<ShirtOrderMethodType>
    notIn?: Enumerable<ShirtOrderMethodType>
    not?: NestedEnumShirtOrderMethodTypeFilter | ShirtOrderMethodType
  }

  export type EnumShirtOrderSizeTypeFilter = {
    equals?: ShirtOrderSizeType
    in?: Enumerable<ShirtOrderSizeType>
    notIn?: Enumerable<ShirtOrderSizeType>
    not?: NestedEnumShirtOrderSizeTypeFilter | ShirtOrderSizeType
  }

  export type EnumShirtOrderColourTypeFilter = {
    equals?: ShirtOrderColourType
    in?: Enumerable<ShirtOrderColourType>
    notIn?: Enumerable<ShirtOrderColourType>
    not?: NestedEnumShirtOrderColourTypeFilter | ShirtOrderColourType
  }

  export type ShirtOrderCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    taken?: SortOrder
    method?: SortOrder
    shirtID?: SortOrder
    paid?: SortOrder
    notes?: SortOrder
    size?: SortOrder
    colour?: SortOrder
    stripeID?: SortOrder
    created?: SortOrder
  }

  export type ShirtOrderMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    taken?: SortOrder
    method?: SortOrder
    shirtID?: SortOrder
    paid?: SortOrder
    notes?: SortOrder
    size?: SortOrder
    colour?: SortOrder
    stripeID?: SortOrder
    created?: SortOrder
  }

  export type ShirtOrderMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    taken?: SortOrder
    method?: SortOrder
    shirtID?: SortOrder
    paid?: SortOrder
    notes?: SortOrder
    size?: SortOrder
    colour?: SortOrder
    stripeID?: SortOrder
    created?: SortOrder
  }

  export type EnumShirtOrderMethodTypeWithAggregatesFilter = {
    equals?: ShirtOrderMethodType
    in?: Enumerable<ShirtOrderMethodType>
    notIn?: Enumerable<ShirtOrderMethodType>
    not?: NestedEnumShirtOrderMethodTypeWithAggregatesFilter | ShirtOrderMethodType
    _count?: NestedIntFilter
    _min?: NestedEnumShirtOrderMethodTypeFilter
    _max?: NestedEnumShirtOrderMethodTypeFilter
  }

  export type EnumShirtOrderSizeTypeWithAggregatesFilter = {
    equals?: ShirtOrderSizeType
    in?: Enumerable<ShirtOrderSizeType>
    notIn?: Enumerable<ShirtOrderSizeType>
    not?: NestedEnumShirtOrderSizeTypeWithAggregatesFilter | ShirtOrderSizeType
    _count?: NestedIntFilter
    _min?: NestedEnumShirtOrderSizeTypeFilter
    _max?: NestedEnumShirtOrderSizeTypeFilter
  }

  export type EnumShirtOrderColourTypeWithAggregatesFilter = {
    equals?: ShirtOrderColourType
    in?: Enumerable<ShirtOrderColourType>
    notIn?: Enumerable<ShirtOrderColourType>
    not?: NestedEnumShirtOrderColourTypeWithAggregatesFilter | ShirtOrderColourType
    _count?: NestedIntFilter
    _min?: NestedEnumShirtOrderColourTypeFilter
    _max?: NestedEnumShirtOrderColourTypeFilter
  }

  export type RunRelationFilter = {
    is?: RunWhereInput | null
    isNot?: RunWhereInput | null
  }

  export type IncentiveCountOrderByAggregateInput = {
    id?: SortOrder
    runId?: SortOrder
    eventId?: SortOrder
    title?: SortOrder
    notes?: SortOrder
    type?: SortOrder
    data?: SortOrder
    active?: SortOrder
  }

  export type IncentiveMaxOrderByAggregateInput = {
    id?: SortOrder
    runId?: SortOrder
    eventId?: SortOrder
    title?: SortOrder
    notes?: SortOrder
    type?: SortOrder
    active?: SortOrder
  }

  export type IncentiveMinOrderByAggregateInput = {
    id?: SortOrder
    runId?: SortOrder
    eventId?: SortOrder
    title?: SortOrder
    notes?: SortOrder
    type?: SortOrder
    active?: SortOrder
  }

  export type UserCreateNestedManyWithoutFrom_Post_authorInput = {
    create?: XOR<Enumerable<UserCreateWithoutFrom_Post_authorInput>, Enumerable<UserUncheckedCreateWithoutFrom_Post_authorInput>>
    connectOrCreate?: Enumerable<UserCreateOrConnectWithoutFrom_Post_authorInput>
    connect?: Enumerable<UserWhereUniqueInput>
  }

  export type EventCreateNestedOneWithoutFrom_Post_eventInput = {
    create?: XOR<EventCreateWithoutFrom_Post_eventInput, EventUncheckedCreateWithoutFrom_Post_eventInput>
    connectOrCreate?: EventCreateOrConnectWithoutFrom_Post_eventInput
    connect?: EventWhereUniqueInput
  }

  export type UserUncheckedCreateNestedManyWithoutFrom_Post_authorInput = {
    create?: XOR<Enumerable<UserCreateWithoutFrom_Post_authorInput>, Enumerable<UserUncheckedCreateWithoutFrom_Post_authorInput>>
    connectOrCreate?: Enumerable<UserCreateOrConnectWithoutFrom_Post_authorInput>
    connect?: Enumerable<UserWhereUniqueInput>
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type UserUpdateManyWithoutFrom_Post_authorNestedInput = {
    create?: XOR<Enumerable<UserCreateWithoutFrom_Post_authorInput>, Enumerable<UserUncheckedCreateWithoutFrom_Post_authorInput>>
    connectOrCreate?: Enumerable<UserCreateOrConnectWithoutFrom_Post_authorInput>
    upsert?: Enumerable<UserUpsertWithWhereUniqueWithoutFrom_Post_authorInput>
    set?: Enumerable<UserWhereUniqueInput>
    disconnect?: Enumerable<UserWhereUniqueInput>
    delete?: Enumerable<UserWhereUniqueInput>
    connect?: Enumerable<UserWhereUniqueInput>
    update?: Enumerable<UserUpdateWithWhereUniqueWithoutFrom_Post_authorInput>
    updateMany?: Enumerable<UserUpdateManyWithWhereWithoutFrom_Post_authorInput>
    deleteMany?: Enumerable<UserScalarWhereInput>
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type NullableEnumPostRoleTypeFieldUpdateOperationsInput = {
    set?: PostRoleType | null
  }

  export type EventUpdateOneWithoutFrom_Post_eventNestedInput = {
    create?: XOR<EventCreateWithoutFrom_Post_eventInput, EventUncheckedCreateWithoutFrom_Post_eventInput>
    connectOrCreate?: EventCreateOrConnectWithoutFrom_Post_eventInput
    upsert?: EventUpsertWithoutFrom_Post_eventInput
    disconnect?: boolean
    delete?: boolean
    connect?: EventWhereUniqueInput
    update?: XOR<EventUpdateWithoutFrom_Post_eventInput, EventUncheckedUpdateWithoutFrom_Post_eventInput>
  }

  export type UserUncheckedUpdateManyWithoutFrom_Post_authorNestedInput = {
    create?: XOR<Enumerable<UserCreateWithoutFrom_Post_authorInput>, Enumerable<UserUncheckedCreateWithoutFrom_Post_authorInput>>
    connectOrCreate?: Enumerable<UserCreateOrConnectWithoutFrom_Post_authorInput>
    upsert?: Enumerable<UserUpsertWithWhereUniqueWithoutFrom_Post_authorInput>
    set?: Enumerable<UserWhereUniqueInput>
    disconnect?: Enumerable<UserWhereUniqueInput>
    delete?: Enumerable<UserWhereUniqueInput>
    connect?: Enumerable<UserWhereUniqueInput>
    update?: Enumerable<UserUpdateWithWhereUniqueWithoutFrom_Post_authorInput>
    updateMany?: Enumerable<UserUpdateManyWithWhereWithoutFrom_Post_authorInput>
    deleteMany?: Enumerable<UserScalarWhereInput>
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type SubmissionCreateNestedManyWithoutRunnerInput = {
    create?: XOR<Enumerable<SubmissionCreateWithoutRunnerInput>, Enumerable<SubmissionUncheckedCreateWithoutRunnerInput>>
    connectOrCreate?: Enumerable<SubmissionCreateOrConnectWithoutRunnerInput>
    createMany?: SubmissionCreateManyRunnerInputEnvelope
    connect?: Enumerable<SubmissionWhereUniqueInput>
  }

  export type RoleCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<RoleCreateWithoutUsersInput>, Enumerable<RoleUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<RoleCreateOrConnectWithoutUsersInput>
    connect?: Enumerable<RoleWhereUniqueInput>
  }

  export type RunCreateNestedManyWithoutRunnersInput = {
    create?: XOR<Enumerable<RunCreateWithoutRunnersInput>, Enumerable<RunUncheckedCreateWithoutRunnersInput>>
    connectOrCreate?: Enumerable<RunCreateOrConnectWithoutRunnersInput>
    connect?: Enumerable<RunWhereUniqueInput>
  }

  export type TicketCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<TicketCreateWithoutUserInput>, Enumerable<TicketUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<TicketCreateOrConnectWithoutUserInput>
    createMany?: TicketCreateManyUserInputEnvelope
    connect?: Enumerable<TicketWhereUniqueInput>
  }

  export type VolunteerCreateNestedManyWithoutVolunteerInput = {
    create?: XOR<Enumerable<VolunteerCreateWithoutVolunteerInput>, Enumerable<VolunteerUncheckedCreateWithoutVolunteerInput>>
    connectOrCreate?: Enumerable<VolunteerCreateOrConnectWithoutVolunteerInput>
    createMany?: VolunteerCreateManyVolunteerInputEnvelope
    connect?: Enumerable<VolunteerWhereUniqueInput>
  }

  export type ShirtOrderCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<ShirtOrderCreateWithoutUserInput>, Enumerable<ShirtOrderUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ShirtOrderCreateOrConnectWithoutUserInput>
    createMany?: ShirtOrderCreateManyUserInputEnvelope
    connect?: Enumerable<ShirtOrderWhereUniqueInput>
  }

  export type PostCreateNestedManyWithoutAuthorInput = {
    create?: XOR<Enumerable<PostCreateWithoutAuthorInput>, Enumerable<PostUncheckedCreateWithoutAuthorInput>>
    connectOrCreate?: Enumerable<PostCreateOrConnectWithoutAuthorInput>
    connect?: Enumerable<PostWhereUniqueInput>
  }

  export type SubmissionUncheckedCreateNestedManyWithoutRunnerInput = {
    create?: XOR<Enumerable<SubmissionCreateWithoutRunnerInput>, Enumerable<SubmissionUncheckedCreateWithoutRunnerInput>>
    connectOrCreate?: Enumerable<SubmissionCreateOrConnectWithoutRunnerInput>
    createMany?: SubmissionCreateManyRunnerInputEnvelope
    connect?: Enumerable<SubmissionWhereUniqueInput>
  }

  export type RoleUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<RoleCreateWithoutUsersInput>, Enumerable<RoleUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<RoleCreateOrConnectWithoutUsersInput>
    connect?: Enumerable<RoleWhereUniqueInput>
  }

  export type RunUncheckedCreateNestedManyWithoutRunnersInput = {
    create?: XOR<Enumerable<RunCreateWithoutRunnersInput>, Enumerable<RunUncheckedCreateWithoutRunnersInput>>
    connectOrCreate?: Enumerable<RunCreateOrConnectWithoutRunnersInput>
    connect?: Enumerable<RunWhereUniqueInput>
  }

  export type TicketUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<TicketCreateWithoutUserInput>, Enumerable<TicketUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<TicketCreateOrConnectWithoutUserInput>
    createMany?: TicketCreateManyUserInputEnvelope
    connect?: Enumerable<TicketWhereUniqueInput>
  }

  export type VolunteerUncheckedCreateNestedManyWithoutVolunteerInput = {
    create?: XOR<Enumerable<VolunteerCreateWithoutVolunteerInput>, Enumerable<VolunteerUncheckedCreateWithoutVolunteerInput>>
    connectOrCreate?: Enumerable<VolunteerCreateOrConnectWithoutVolunteerInput>
    createMany?: VolunteerCreateManyVolunteerInputEnvelope
    connect?: Enumerable<VolunteerWhereUniqueInput>
  }

  export type ShirtOrderUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<ShirtOrderCreateWithoutUserInput>, Enumerable<ShirtOrderUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ShirtOrderCreateOrConnectWithoutUserInput>
    createMany?: ShirtOrderCreateManyUserInputEnvelope
    connect?: Enumerable<ShirtOrderWhereUniqueInput>
  }

  export type PostUncheckedCreateNestedManyWithoutAuthorInput = {
    create?: XOR<Enumerable<PostCreateWithoutAuthorInput>, Enumerable<PostUncheckedCreateWithoutAuthorInput>>
    connectOrCreate?: Enumerable<PostCreateOrConnectWithoutAuthorInput>
    connect?: Enumerable<PostWhereUniqueInput>
  }

  export type SubmissionUpdateManyWithoutRunnerNestedInput = {
    create?: XOR<Enumerable<SubmissionCreateWithoutRunnerInput>, Enumerable<SubmissionUncheckedCreateWithoutRunnerInput>>
    connectOrCreate?: Enumerable<SubmissionCreateOrConnectWithoutRunnerInput>
    upsert?: Enumerable<SubmissionUpsertWithWhereUniqueWithoutRunnerInput>
    createMany?: SubmissionCreateManyRunnerInputEnvelope
    set?: Enumerable<SubmissionWhereUniqueInput>
    disconnect?: Enumerable<SubmissionWhereUniqueInput>
    delete?: Enumerable<SubmissionWhereUniqueInput>
    connect?: Enumerable<SubmissionWhereUniqueInput>
    update?: Enumerable<SubmissionUpdateWithWhereUniqueWithoutRunnerInput>
    updateMany?: Enumerable<SubmissionUpdateManyWithWhereWithoutRunnerInput>
    deleteMany?: Enumerable<SubmissionScalarWhereInput>
  }

  export type RoleUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<RoleCreateWithoutUsersInput>, Enumerable<RoleUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<RoleCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<RoleUpsertWithWhereUniqueWithoutUsersInput>
    set?: Enumerable<RoleWhereUniqueInput>
    disconnect?: Enumerable<RoleWhereUniqueInput>
    delete?: Enumerable<RoleWhereUniqueInput>
    connect?: Enumerable<RoleWhereUniqueInput>
    update?: Enumerable<RoleUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<RoleUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<RoleScalarWhereInput>
  }

  export type RunUpdateManyWithoutRunnersNestedInput = {
    create?: XOR<Enumerable<RunCreateWithoutRunnersInput>, Enumerable<RunUncheckedCreateWithoutRunnersInput>>
    connectOrCreate?: Enumerable<RunCreateOrConnectWithoutRunnersInput>
    upsert?: Enumerable<RunUpsertWithWhereUniqueWithoutRunnersInput>
    set?: Enumerable<RunWhereUniqueInput>
    disconnect?: Enumerable<RunWhereUniqueInput>
    delete?: Enumerable<RunWhereUniqueInput>
    connect?: Enumerable<RunWhereUniqueInput>
    update?: Enumerable<RunUpdateWithWhereUniqueWithoutRunnersInput>
    updateMany?: Enumerable<RunUpdateManyWithWhereWithoutRunnersInput>
    deleteMany?: Enumerable<RunScalarWhereInput>
  }

  export type NullableEnumUserStateTypeFieldUpdateOperationsInput = {
    set?: UserStateType | null
  }

  export type TicketUpdateManyWithoutUserNestedInput = {
    create?: XOR<Enumerable<TicketCreateWithoutUserInput>, Enumerable<TicketUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<TicketCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<TicketUpsertWithWhereUniqueWithoutUserInput>
    createMany?: TicketCreateManyUserInputEnvelope
    set?: Enumerable<TicketWhereUniqueInput>
    disconnect?: Enumerable<TicketWhereUniqueInput>
    delete?: Enumerable<TicketWhereUniqueInput>
    connect?: Enumerable<TicketWhereUniqueInput>
    update?: Enumerable<TicketUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<TicketUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<TicketScalarWhereInput>
  }

  export type VolunteerUpdateManyWithoutVolunteerNestedInput = {
    create?: XOR<Enumerable<VolunteerCreateWithoutVolunteerInput>, Enumerable<VolunteerUncheckedCreateWithoutVolunteerInput>>
    connectOrCreate?: Enumerable<VolunteerCreateOrConnectWithoutVolunteerInput>
    upsert?: Enumerable<VolunteerUpsertWithWhereUniqueWithoutVolunteerInput>
    createMany?: VolunteerCreateManyVolunteerInputEnvelope
    set?: Enumerable<VolunteerWhereUniqueInput>
    disconnect?: Enumerable<VolunteerWhereUniqueInput>
    delete?: Enumerable<VolunteerWhereUniqueInput>
    connect?: Enumerable<VolunteerWhereUniqueInput>
    update?: Enumerable<VolunteerUpdateWithWhereUniqueWithoutVolunteerInput>
    updateMany?: Enumerable<VolunteerUpdateManyWithWhereWithoutVolunteerInput>
    deleteMany?: Enumerable<VolunteerScalarWhereInput>
  }

  export type ShirtOrderUpdateManyWithoutUserNestedInput = {
    create?: XOR<Enumerable<ShirtOrderCreateWithoutUserInput>, Enumerable<ShirtOrderUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ShirtOrderCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<ShirtOrderUpsertWithWhereUniqueWithoutUserInput>
    createMany?: ShirtOrderCreateManyUserInputEnvelope
    set?: Enumerable<ShirtOrderWhereUniqueInput>
    disconnect?: Enumerable<ShirtOrderWhereUniqueInput>
    delete?: Enumerable<ShirtOrderWhereUniqueInput>
    connect?: Enumerable<ShirtOrderWhereUniqueInput>
    update?: Enumerable<ShirtOrderUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<ShirtOrderUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<ShirtOrderScalarWhereInput>
  }

  export type PostUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<Enumerable<PostCreateWithoutAuthorInput>, Enumerable<PostUncheckedCreateWithoutAuthorInput>>
    connectOrCreate?: Enumerable<PostCreateOrConnectWithoutAuthorInput>
    upsert?: Enumerable<PostUpsertWithWhereUniqueWithoutAuthorInput>
    set?: Enumerable<PostWhereUniqueInput>
    disconnect?: Enumerable<PostWhereUniqueInput>
    delete?: Enumerable<PostWhereUniqueInput>
    connect?: Enumerable<PostWhereUniqueInput>
    update?: Enumerable<PostUpdateWithWhereUniqueWithoutAuthorInput>
    updateMany?: Enumerable<PostUpdateManyWithWhereWithoutAuthorInput>
    deleteMany?: Enumerable<PostScalarWhereInput>
  }

  export type SubmissionUncheckedUpdateManyWithoutRunnerNestedInput = {
    create?: XOR<Enumerable<SubmissionCreateWithoutRunnerInput>, Enumerable<SubmissionUncheckedCreateWithoutRunnerInput>>
    connectOrCreate?: Enumerable<SubmissionCreateOrConnectWithoutRunnerInput>
    upsert?: Enumerable<SubmissionUpsertWithWhereUniqueWithoutRunnerInput>
    createMany?: SubmissionCreateManyRunnerInputEnvelope
    set?: Enumerable<SubmissionWhereUniqueInput>
    disconnect?: Enumerable<SubmissionWhereUniqueInput>
    delete?: Enumerable<SubmissionWhereUniqueInput>
    connect?: Enumerable<SubmissionWhereUniqueInput>
    update?: Enumerable<SubmissionUpdateWithWhereUniqueWithoutRunnerInput>
    updateMany?: Enumerable<SubmissionUpdateManyWithWhereWithoutRunnerInput>
    deleteMany?: Enumerable<SubmissionScalarWhereInput>
  }

  export type RoleUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<RoleCreateWithoutUsersInput>, Enumerable<RoleUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<RoleCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<RoleUpsertWithWhereUniqueWithoutUsersInput>
    set?: Enumerable<RoleWhereUniqueInput>
    disconnect?: Enumerable<RoleWhereUniqueInput>
    delete?: Enumerable<RoleWhereUniqueInput>
    connect?: Enumerable<RoleWhereUniqueInput>
    update?: Enumerable<RoleUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<RoleUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<RoleScalarWhereInput>
  }

  export type RunUncheckedUpdateManyWithoutRunnersNestedInput = {
    create?: XOR<Enumerable<RunCreateWithoutRunnersInput>, Enumerable<RunUncheckedCreateWithoutRunnersInput>>
    connectOrCreate?: Enumerable<RunCreateOrConnectWithoutRunnersInput>
    upsert?: Enumerable<RunUpsertWithWhereUniqueWithoutRunnersInput>
    set?: Enumerable<RunWhereUniqueInput>
    disconnect?: Enumerable<RunWhereUniqueInput>
    delete?: Enumerable<RunWhereUniqueInput>
    connect?: Enumerable<RunWhereUniqueInput>
    update?: Enumerable<RunUpdateWithWhereUniqueWithoutRunnersInput>
    updateMany?: Enumerable<RunUpdateManyWithWhereWithoutRunnersInput>
    deleteMany?: Enumerable<RunScalarWhereInput>
  }

  export type TicketUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<Enumerable<TicketCreateWithoutUserInput>, Enumerable<TicketUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<TicketCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<TicketUpsertWithWhereUniqueWithoutUserInput>
    createMany?: TicketCreateManyUserInputEnvelope
    set?: Enumerable<TicketWhereUniqueInput>
    disconnect?: Enumerable<TicketWhereUniqueInput>
    delete?: Enumerable<TicketWhereUniqueInput>
    connect?: Enumerable<TicketWhereUniqueInput>
    update?: Enumerable<TicketUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<TicketUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<TicketScalarWhereInput>
  }

  export type VolunteerUncheckedUpdateManyWithoutVolunteerNestedInput = {
    create?: XOR<Enumerable<VolunteerCreateWithoutVolunteerInput>, Enumerable<VolunteerUncheckedCreateWithoutVolunteerInput>>
    connectOrCreate?: Enumerable<VolunteerCreateOrConnectWithoutVolunteerInput>
    upsert?: Enumerable<VolunteerUpsertWithWhereUniqueWithoutVolunteerInput>
    createMany?: VolunteerCreateManyVolunteerInputEnvelope
    set?: Enumerable<VolunteerWhereUniqueInput>
    disconnect?: Enumerable<VolunteerWhereUniqueInput>
    delete?: Enumerable<VolunteerWhereUniqueInput>
    connect?: Enumerable<VolunteerWhereUniqueInput>
    update?: Enumerable<VolunteerUpdateWithWhereUniqueWithoutVolunteerInput>
    updateMany?: Enumerable<VolunteerUpdateManyWithWhereWithoutVolunteerInput>
    deleteMany?: Enumerable<VolunteerScalarWhereInput>
  }

  export type ShirtOrderUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<Enumerable<ShirtOrderCreateWithoutUserInput>, Enumerable<ShirtOrderUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ShirtOrderCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<ShirtOrderUpsertWithWhereUniqueWithoutUserInput>
    createMany?: ShirtOrderCreateManyUserInputEnvelope
    set?: Enumerable<ShirtOrderWhereUniqueInput>
    disconnect?: Enumerable<ShirtOrderWhereUniqueInput>
    delete?: Enumerable<ShirtOrderWhereUniqueInput>
    connect?: Enumerable<ShirtOrderWhereUniqueInput>
    update?: Enumerable<ShirtOrderUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<ShirtOrderUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<ShirtOrderScalarWhereInput>
  }

  export type PostUncheckedUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<Enumerable<PostCreateWithoutAuthorInput>, Enumerable<PostUncheckedCreateWithoutAuthorInput>>
    connectOrCreate?: Enumerable<PostCreateOrConnectWithoutAuthorInput>
    upsert?: Enumerable<PostUpsertWithWhereUniqueWithoutAuthorInput>
    set?: Enumerable<PostWhereUniqueInput>
    disconnect?: Enumerable<PostWhereUniqueInput>
    delete?: Enumerable<PostWhereUniqueInput>
    connect?: Enumerable<PostWhereUniqueInput>
    update?: Enumerable<PostUpdateWithWhereUniqueWithoutAuthorInput>
    updateMany?: Enumerable<PostUpdateManyWithWhereWithoutAuthorInput>
    deleteMany?: Enumerable<PostScalarWhereInput>
  }

  export type UserCreateNestedOneWithoutSubmissionsInput = {
    create?: XOR<UserCreateWithoutSubmissionsInput, UserUncheckedCreateWithoutSubmissionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSubmissionsInput
    connect?: UserWhereUniqueInput
  }

  export type EventCreateNestedOneWithoutSubmissionsInput = {
    create?: XOR<EventCreateWithoutSubmissionsInput, EventUncheckedCreateWithoutSubmissionsInput>
    connectOrCreate?: EventCreateOrConnectWithoutSubmissionsInput
    connect?: EventWhereUniqueInput
  }

  export type RunCreateNestedManyWithoutOriginalSubmissionInput = {
    create?: XOR<Enumerable<RunCreateWithoutOriginalSubmissionInput>, Enumerable<RunUncheckedCreateWithoutOriginalSubmissionInput>>
    connectOrCreate?: Enumerable<RunCreateOrConnectWithoutOriginalSubmissionInput>
    createMany?: RunCreateManyOriginalSubmissionInputEnvelope
    connect?: Enumerable<RunWhereUniqueInput>
  }

  export type RunUncheckedCreateNestedManyWithoutOriginalSubmissionInput = {
    create?: XOR<Enumerable<RunCreateWithoutOriginalSubmissionInput>, Enumerable<RunUncheckedCreateWithoutOriginalSubmissionInput>>
    connectOrCreate?: Enumerable<RunCreateOrConnectWithoutOriginalSubmissionInput>
    createMany?: RunCreateManyOriginalSubmissionInputEnvelope
    connect?: Enumerable<RunWhereUniqueInput>
  }

  export type UserUpdateOneWithoutSubmissionsNestedInput = {
    create?: XOR<UserCreateWithoutSubmissionsInput, UserUncheckedCreateWithoutSubmissionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSubmissionsInput
    upsert?: UserUpsertWithoutSubmissionsInput
    disconnect?: boolean
    delete?: boolean
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutSubmissionsInput, UserUncheckedUpdateWithoutSubmissionsInput>
  }

  export type NullableEnumSubmissionAgeRatingTypeFieldUpdateOperationsInput = {
    set?: SubmissionAgeRatingType | null
  }

  export type NullableEnumSubmissionRaceTypeFieldUpdateOperationsInput = {
    set?: SubmissionRaceType | null
  }

  export type NullableEnumSubmissionStatusTypeFieldUpdateOperationsInput = {
    set?: SubmissionStatusType | null
  }

  export type EventUpdateOneWithoutSubmissionsNestedInput = {
    create?: XOR<EventCreateWithoutSubmissionsInput, EventUncheckedCreateWithoutSubmissionsInput>
    connectOrCreate?: EventCreateOrConnectWithoutSubmissionsInput
    upsert?: EventUpsertWithoutSubmissionsInput
    disconnect?: boolean
    delete?: boolean
    connect?: EventWhereUniqueInput
    update?: XOR<EventUpdateWithoutSubmissionsInput, EventUncheckedUpdateWithoutSubmissionsInput>
  }

  export type RunUpdateManyWithoutOriginalSubmissionNestedInput = {
    create?: XOR<Enumerable<RunCreateWithoutOriginalSubmissionInput>, Enumerable<RunUncheckedCreateWithoutOriginalSubmissionInput>>
    connectOrCreate?: Enumerable<RunCreateOrConnectWithoutOriginalSubmissionInput>
    upsert?: Enumerable<RunUpsertWithWhereUniqueWithoutOriginalSubmissionInput>
    createMany?: RunCreateManyOriginalSubmissionInputEnvelope
    set?: Enumerable<RunWhereUniqueInput>
    disconnect?: Enumerable<RunWhereUniqueInput>
    delete?: Enumerable<RunWhereUniqueInput>
    connect?: Enumerable<RunWhereUniqueInput>
    update?: Enumerable<RunUpdateWithWhereUniqueWithoutOriginalSubmissionInput>
    updateMany?: Enumerable<RunUpdateManyWithWhereWithoutOriginalSubmissionInput>
    deleteMany?: Enumerable<RunScalarWhereInput>
  }

  export type RunUncheckedUpdateManyWithoutOriginalSubmissionNestedInput = {
    create?: XOR<Enumerable<RunCreateWithoutOriginalSubmissionInput>, Enumerable<RunUncheckedCreateWithoutOriginalSubmissionInput>>
    connectOrCreate?: Enumerable<RunCreateOrConnectWithoutOriginalSubmissionInput>
    upsert?: Enumerable<RunUpsertWithWhereUniqueWithoutOriginalSubmissionInput>
    createMany?: RunCreateManyOriginalSubmissionInputEnvelope
    set?: Enumerable<RunWhereUniqueInput>
    disconnect?: Enumerable<RunWhereUniqueInput>
    delete?: Enumerable<RunWhereUniqueInput>
    connect?: Enumerable<RunWhereUniqueInput>
    update?: Enumerable<RunUpdateWithWhereUniqueWithoutOriginalSubmissionInput>
    updateMany?: Enumerable<RunUpdateManyWithWhereWithoutOriginalSubmissionInput>
    deleteMany?: Enumerable<RunScalarWhereInput>
  }

  export type SubmissionCreateNestedManyWithoutEventInput = {
    create?: XOR<Enumerable<SubmissionCreateWithoutEventInput>, Enumerable<SubmissionUncheckedCreateWithoutEventInput>>
    connectOrCreate?: Enumerable<SubmissionCreateOrConnectWithoutEventInput>
    createMany?: SubmissionCreateManyEventInputEnvelope
    connect?: Enumerable<SubmissionWhereUniqueInput>
  }

  export type RunCreateNestedManyWithoutEventInput = {
    create?: XOR<Enumerable<RunCreateWithoutEventInput>, Enumerable<RunUncheckedCreateWithoutEventInput>>
    connectOrCreate?: Enumerable<RunCreateOrConnectWithoutEventInput>
    createMany?: RunCreateManyEventInputEnvelope
    connect?: Enumerable<RunWhereUniqueInput>
  }

  export type TicketCreateNestedManyWithoutEventInput = {
    create?: XOR<Enumerable<TicketCreateWithoutEventInput>, Enumerable<TicketUncheckedCreateWithoutEventInput>>
    connectOrCreate?: Enumerable<TicketCreateOrConnectWithoutEventInput>
    createMany?: TicketCreateManyEventInputEnvelope
    connect?: Enumerable<TicketWhereUniqueInput>
  }

  export type VolunteerCreateNestedManyWithoutEventInput = {
    create?: XOR<Enumerable<VolunteerCreateWithoutEventInput>, Enumerable<VolunteerUncheckedCreateWithoutEventInput>>
    connectOrCreate?: Enumerable<VolunteerCreateOrConnectWithoutEventInput>
    createMany?: VolunteerCreateManyEventInputEnvelope
    connect?: Enumerable<VolunteerWhereUniqueInput>
  }

  export type IncentiveCreateNestedManyWithoutEventInput = {
    create?: XOR<Enumerable<IncentiveCreateWithoutEventInput>, Enumerable<IncentiveUncheckedCreateWithoutEventInput>>
    connectOrCreate?: Enumerable<IncentiveCreateOrConnectWithoutEventInput>
    createMany?: IncentiveCreateManyEventInputEnvelope
    connect?: Enumerable<IncentiveWhereUniqueInput>
  }

  export type PostCreateNestedManyWithoutEventInput = {
    create?: XOR<Enumerable<PostCreateWithoutEventInput>, Enumerable<PostUncheckedCreateWithoutEventInput>>
    connectOrCreate?: Enumerable<PostCreateOrConnectWithoutEventInput>
    createMany?: PostCreateManyEventInputEnvelope
    connect?: Enumerable<PostWhereUniqueInput>
  }

  export type RoleCreateNestedManyWithoutEventInput = {
    create?: XOR<Enumerable<RoleCreateWithoutEventInput>, Enumerable<RoleUncheckedCreateWithoutEventInput>>
    connectOrCreate?: Enumerable<RoleCreateOrConnectWithoutEventInput>
    createMany?: RoleCreateManyEventInputEnvelope
    connect?: Enumerable<RoleWhereUniqueInput>
  }

  export type SubmissionUncheckedCreateNestedManyWithoutEventInput = {
    create?: XOR<Enumerable<SubmissionCreateWithoutEventInput>, Enumerable<SubmissionUncheckedCreateWithoutEventInput>>
    connectOrCreate?: Enumerable<SubmissionCreateOrConnectWithoutEventInput>
    createMany?: SubmissionCreateManyEventInputEnvelope
    connect?: Enumerable<SubmissionWhereUniqueInput>
  }

  export type RunUncheckedCreateNestedManyWithoutEventInput = {
    create?: XOR<Enumerable<RunCreateWithoutEventInput>, Enumerable<RunUncheckedCreateWithoutEventInput>>
    connectOrCreate?: Enumerable<RunCreateOrConnectWithoutEventInput>
    createMany?: RunCreateManyEventInputEnvelope
    connect?: Enumerable<RunWhereUniqueInput>
  }

  export type TicketUncheckedCreateNestedManyWithoutEventInput = {
    create?: XOR<Enumerable<TicketCreateWithoutEventInput>, Enumerable<TicketUncheckedCreateWithoutEventInput>>
    connectOrCreate?: Enumerable<TicketCreateOrConnectWithoutEventInput>
    createMany?: TicketCreateManyEventInputEnvelope
    connect?: Enumerable<TicketWhereUniqueInput>
  }

  export type VolunteerUncheckedCreateNestedManyWithoutEventInput = {
    create?: XOR<Enumerable<VolunteerCreateWithoutEventInput>, Enumerable<VolunteerUncheckedCreateWithoutEventInput>>
    connectOrCreate?: Enumerable<VolunteerCreateOrConnectWithoutEventInput>
    createMany?: VolunteerCreateManyEventInputEnvelope
    connect?: Enumerable<VolunteerWhereUniqueInput>
  }

  export type IncentiveUncheckedCreateNestedManyWithoutEventInput = {
    create?: XOR<Enumerable<IncentiveCreateWithoutEventInput>, Enumerable<IncentiveUncheckedCreateWithoutEventInput>>
    connectOrCreate?: Enumerable<IncentiveCreateOrConnectWithoutEventInput>
    createMany?: IncentiveCreateManyEventInputEnvelope
    connect?: Enumerable<IncentiveWhereUniqueInput>
  }

  export type PostUncheckedCreateNestedManyWithoutEventInput = {
    create?: XOR<Enumerable<PostCreateWithoutEventInput>, Enumerable<PostUncheckedCreateWithoutEventInput>>
    connectOrCreate?: Enumerable<PostCreateOrConnectWithoutEventInput>
    createMany?: PostCreateManyEventInputEnvelope
    connect?: Enumerable<PostWhereUniqueInput>
  }

  export type RoleUncheckedCreateNestedManyWithoutEventInput = {
    create?: XOR<Enumerable<RoleCreateWithoutEventInput>, Enumerable<RoleUncheckedCreateWithoutEventInput>>
    connectOrCreate?: Enumerable<RoleCreateOrConnectWithoutEventInput>
    createMany?: RoleCreateManyEventInputEnvelope
    connect?: Enumerable<RoleWhereUniqueInput>
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type SubmissionUpdateManyWithoutEventNestedInput = {
    create?: XOR<Enumerable<SubmissionCreateWithoutEventInput>, Enumerable<SubmissionUncheckedCreateWithoutEventInput>>
    connectOrCreate?: Enumerable<SubmissionCreateOrConnectWithoutEventInput>
    upsert?: Enumerable<SubmissionUpsertWithWhereUniqueWithoutEventInput>
    createMany?: SubmissionCreateManyEventInputEnvelope
    set?: Enumerable<SubmissionWhereUniqueInput>
    disconnect?: Enumerable<SubmissionWhereUniqueInput>
    delete?: Enumerable<SubmissionWhereUniqueInput>
    connect?: Enumerable<SubmissionWhereUniqueInput>
    update?: Enumerable<SubmissionUpdateWithWhereUniqueWithoutEventInput>
    updateMany?: Enumerable<SubmissionUpdateManyWithWhereWithoutEventInput>
    deleteMany?: Enumerable<SubmissionScalarWhereInput>
  }

  export type RunUpdateManyWithoutEventNestedInput = {
    create?: XOR<Enumerable<RunCreateWithoutEventInput>, Enumerable<RunUncheckedCreateWithoutEventInput>>
    connectOrCreate?: Enumerable<RunCreateOrConnectWithoutEventInput>
    upsert?: Enumerable<RunUpsertWithWhereUniqueWithoutEventInput>
    createMany?: RunCreateManyEventInputEnvelope
    set?: Enumerable<RunWhereUniqueInput>
    disconnect?: Enumerable<RunWhereUniqueInput>
    delete?: Enumerable<RunWhereUniqueInput>
    connect?: Enumerable<RunWhereUniqueInput>
    update?: Enumerable<RunUpdateWithWhereUniqueWithoutEventInput>
    updateMany?: Enumerable<RunUpdateManyWithWhereWithoutEventInput>
    deleteMany?: Enumerable<RunScalarWhereInput>
  }

  export type TicketUpdateManyWithoutEventNestedInput = {
    create?: XOR<Enumerable<TicketCreateWithoutEventInput>, Enumerable<TicketUncheckedCreateWithoutEventInput>>
    connectOrCreate?: Enumerable<TicketCreateOrConnectWithoutEventInput>
    upsert?: Enumerable<TicketUpsertWithWhereUniqueWithoutEventInput>
    createMany?: TicketCreateManyEventInputEnvelope
    set?: Enumerable<TicketWhereUniqueInput>
    disconnect?: Enumerable<TicketWhereUniqueInput>
    delete?: Enumerable<TicketWhereUniqueInput>
    connect?: Enumerable<TicketWhereUniqueInput>
    update?: Enumerable<TicketUpdateWithWhereUniqueWithoutEventInput>
    updateMany?: Enumerable<TicketUpdateManyWithWhereWithoutEventInput>
    deleteMany?: Enumerable<TicketScalarWhereInput>
  }

  export type VolunteerUpdateManyWithoutEventNestedInput = {
    create?: XOR<Enumerable<VolunteerCreateWithoutEventInput>, Enumerable<VolunteerUncheckedCreateWithoutEventInput>>
    connectOrCreate?: Enumerable<VolunteerCreateOrConnectWithoutEventInput>
    upsert?: Enumerable<VolunteerUpsertWithWhereUniqueWithoutEventInput>
    createMany?: VolunteerCreateManyEventInputEnvelope
    set?: Enumerable<VolunteerWhereUniqueInput>
    disconnect?: Enumerable<VolunteerWhereUniqueInput>
    delete?: Enumerable<VolunteerWhereUniqueInput>
    connect?: Enumerable<VolunteerWhereUniqueInput>
    update?: Enumerable<VolunteerUpdateWithWhereUniqueWithoutEventInput>
    updateMany?: Enumerable<VolunteerUpdateManyWithWhereWithoutEventInput>
    deleteMany?: Enumerable<VolunteerScalarWhereInput>
  }

  export type IncentiveUpdateManyWithoutEventNestedInput = {
    create?: XOR<Enumerable<IncentiveCreateWithoutEventInput>, Enumerable<IncentiveUncheckedCreateWithoutEventInput>>
    connectOrCreate?: Enumerable<IncentiveCreateOrConnectWithoutEventInput>
    upsert?: Enumerable<IncentiveUpsertWithWhereUniqueWithoutEventInput>
    createMany?: IncentiveCreateManyEventInputEnvelope
    set?: Enumerable<IncentiveWhereUniqueInput>
    disconnect?: Enumerable<IncentiveWhereUniqueInput>
    delete?: Enumerable<IncentiveWhereUniqueInput>
    connect?: Enumerable<IncentiveWhereUniqueInput>
    update?: Enumerable<IncentiveUpdateWithWhereUniqueWithoutEventInput>
    updateMany?: Enumerable<IncentiveUpdateManyWithWhereWithoutEventInput>
    deleteMany?: Enumerable<IncentiveScalarWhereInput>
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type PostUpdateManyWithoutEventNestedInput = {
    create?: XOR<Enumerable<PostCreateWithoutEventInput>, Enumerable<PostUncheckedCreateWithoutEventInput>>
    connectOrCreate?: Enumerable<PostCreateOrConnectWithoutEventInput>
    upsert?: Enumerable<PostUpsertWithWhereUniqueWithoutEventInput>
    createMany?: PostCreateManyEventInputEnvelope
    set?: Enumerable<PostWhereUniqueInput>
    disconnect?: Enumerable<PostWhereUniqueInput>
    delete?: Enumerable<PostWhereUniqueInput>
    connect?: Enumerable<PostWhereUniqueInput>
    update?: Enumerable<PostUpdateWithWhereUniqueWithoutEventInput>
    updateMany?: Enumerable<PostUpdateManyWithWhereWithoutEventInput>
    deleteMany?: Enumerable<PostScalarWhereInput>
  }

  export type RoleUpdateManyWithoutEventNestedInput = {
    create?: XOR<Enumerable<RoleCreateWithoutEventInput>, Enumerable<RoleUncheckedCreateWithoutEventInput>>
    connectOrCreate?: Enumerable<RoleCreateOrConnectWithoutEventInput>
    upsert?: Enumerable<RoleUpsertWithWhereUniqueWithoutEventInput>
    createMany?: RoleCreateManyEventInputEnvelope
    set?: Enumerable<RoleWhereUniqueInput>
    disconnect?: Enumerable<RoleWhereUniqueInput>
    delete?: Enumerable<RoleWhereUniqueInput>
    connect?: Enumerable<RoleWhereUniqueInput>
    update?: Enumerable<RoleUpdateWithWhereUniqueWithoutEventInput>
    updateMany?: Enumerable<RoleUpdateManyWithWhereWithoutEventInput>
    deleteMany?: Enumerable<RoleScalarWhereInput>
  }

  export type SubmissionUncheckedUpdateManyWithoutEventNestedInput = {
    create?: XOR<Enumerable<SubmissionCreateWithoutEventInput>, Enumerable<SubmissionUncheckedCreateWithoutEventInput>>
    connectOrCreate?: Enumerable<SubmissionCreateOrConnectWithoutEventInput>
    upsert?: Enumerable<SubmissionUpsertWithWhereUniqueWithoutEventInput>
    createMany?: SubmissionCreateManyEventInputEnvelope
    set?: Enumerable<SubmissionWhereUniqueInput>
    disconnect?: Enumerable<SubmissionWhereUniqueInput>
    delete?: Enumerable<SubmissionWhereUniqueInput>
    connect?: Enumerable<SubmissionWhereUniqueInput>
    update?: Enumerable<SubmissionUpdateWithWhereUniqueWithoutEventInput>
    updateMany?: Enumerable<SubmissionUpdateManyWithWhereWithoutEventInput>
    deleteMany?: Enumerable<SubmissionScalarWhereInput>
  }

  export type RunUncheckedUpdateManyWithoutEventNestedInput = {
    create?: XOR<Enumerable<RunCreateWithoutEventInput>, Enumerable<RunUncheckedCreateWithoutEventInput>>
    connectOrCreate?: Enumerable<RunCreateOrConnectWithoutEventInput>
    upsert?: Enumerable<RunUpsertWithWhereUniqueWithoutEventInput>
    createMany?: RunCreateManyEventInputEnvelope
    set?: Enumerable<RunWhereUniqueInput>
    disconnect?: Enumerable<RunWhereUniqueInput>
    delete?: Enumerable<RunWhereUniqueInput>
    connect?: Enumerable<RunWhereUniqueInput>
    update?: Enumerable<RunUpdateWithWhereUniqueWithoutEventInput>
    updateMany?: Enumerable<RunUpdateManyWithWhereWithoutEventInput>
    deleteMany?: Enumerable<RunScalarWhereInput>
  }

  export type TicketUncheckedUpdateManyWithoutEventNestedInput = {
    create?: XOR<Enumerable<TicketCreateWithoutEventInput>, Enumerable<TicketUncheckedCreateWithoutEventInput>>
    connectOrCreate?: Enumerable<TicketCreateOrConnectWithoutEventInput>
    upsert?: Enumerable<TicketUpsertWithWhereUniqueWithoutEventInput>
    createMany?: TicketCreateManyEventInputEnvelope
    set?: Enumerable<TicketWhereUniqueInput>
    disconnect?: Enumerable<TicketWhereUniqueInput>
    delete?: Enumerable<TicketWhereUniqueInput>
    connect?: Enumerable<TicketWhereUniqueInput>
    update?: Enumerable<TicketUpdateWithWhereUniqueWithoutEventInput>
    updateMany?: Enumerable<TicketUpdateManyWithWhereWithoutEventInput>
    deleteMany?: Enumerable<TicketScalarWhereInput>
  }

  export type VolunteerUncheckedUpdateManyWithoutEventNestedInput = {
    create?: XOR<Enumerable<VolunteerCreateWithoutEventInput>, Enumerable<VolunteerUncheckedCreateWithoutEventInput>>
    connectOrCreate?: Enumerable<VolunteerCreateOrConnectWithoutEventInput>
    upsert?: Enumerable<VolunteerUpsertWithWhereUniqueWithoutEventInput>
    createMany?: VolunteerCreateManyEventInputEnvelope
    set?: Enumerable<VolunteerWhereUniqueInput>
    disconnect?: Enumerable<VolunteerWhereUniqueInput>
    delete?: Enumerable<VolunteerWhereUniqueInput>
    connect?: Enumerable<VolunteerWhereUniqueInput>
    update?: Enumerable<VolunteerUpdateWithWhereUniqueWithoutEventInput>
    updateMany?: Enumerable<VolunteerUpdateManyWithWhereWithoutEventInput>
    deleteMany?: Enumerable<VolunteerScalarWhereInput>
  }

  export type IncentiveUncheckedUpdateManyWithoutEventNestedInput = {
    create?: XOR<Enumerable<IncentiveCreateWithoutEventInput>, Enumerable<IncentiveUncheckedCreateWithoutEventInput>>
    connectOrCreate?: Enumerable<IncentiveCreateOrConnectWithoutEventInput>
    upsert?: Enumerable<IncentiveUpsertWithWhereUniqueWithoutEventInput>
    createMany?: IncentiveCreateManyEventInputEnvelope
    set?: Enumerable<IncentiveWhereUniqueInput>
    disconnect?: Enumerable<IncentiveWhereUniqueInput>
    delete?: Enumerable<IncentiveWhereUniqueInput>
    connect?: Enumerable<IncentiveWhereUniqueInput>
    update?: Enumerable<IncentiveUpdateWithWhereUniqueWithoutEventInput>
    updateMany?: Enumerable<IncentiveUpdateManyWithWhereWithoutEventInput>
    deleteMany?: Enumerable<IncentiveScalarWhereInput>
  }

  export type PostUncheckedUpdateManyWithoutEventNestedInput = {
    create?: XOR<Enumerable<PostCreateWithoutEventInput>, Enumerable<PostUncheckedCreateWithoutEventInput>>
    connectOrCreate?: Enumerable<PostCreateOrConnectWithoutEventInput>
    upsert?: Enumerable<PostUpsertWithWhereUniqueWithoutEventInput>
    createMany?: PostCreateManyEventInputEnvelope
    set?: Enumerable<PostWhereUniqueInput>
    disconnect?: Enumerable<PostWhereUniqueInput>
    delete?: Enumerable<PostWhereUniqueInput>
    connect?: Enumerable<PostWhereUniqueInput>
    update?: Enumerable<PostUpdateWithWhereUniqueWithoutEventInput>
    updateMany?: Enumerable<PostUpdateManyWithWhereWithoutEventInput>
    deleteMany?: Enumerable<PostScalarWhereInput>
  }

  export type RoleUncheckedUpdateManyWithoutEventNestedInput = {
    create?: XOR<Enumerable<RoleCreateWithoutEventInput>, Enumerable<RoleUncheckedCreateWithoutEventInput>>
    connectOrCreate?: Enumerable<RoleCreateOrConnectWithoutEventInput>
    upsert?: Enumerable<RoleUpsertWithWhereUniqueWithoutEventInput>
    createMany?: RoleCreateManyEventInputEnvelope
    set?: Enumerable<RoleWhereUniqueInput>
    disconnect?: Enumerable<RoleWhereUniqueInput>
    delete?: Enumerable<RoleWhereUniqueInput>
    connect?: Enumerable<RoleWhereUniqueInput>
    update?: Enumerable<RoleUpdateWithWhereUniqueWithoutEventInput>
    updateMany?: Enumerable<RoleUpdateManyWithWhereWithoutEventInput>
    deleteMany?: Enumerable<RoleScalarWhereInput>
  }

  export type UserCreateNestedManyWithoutRolesInput = {
    create?: XOR<Enumerable<UserCreateWithoutRolesInput>, Enumerable<UserUncheckedCreateWithoutRolesInput>>
    connectOrCreate?: Enumerable<UserCreateOrConnectWithoutRolesInput>
    connect?: Enumerable<UserWhereUniqueInput>
  }

  export type EventCreateNestedOneWithoutFrom_Role_eventInput = {
    create?: XOR<EventCreateWithoutFrom_Role_eventInput, EventUncheckedCreateWithoutFrom_Role_eventInput>
    connectOrCreate?: EventCreateOrConnectWithoutFrom_Role_eventInput
    connect?: EventWhereUniqueInput
  }

  export type UserUncheckedCreateNestedManyWithoutRolesInput = {
    create?: XOR<Enumerable<UserCreateWithoutRolesInput>, Enumerable<UserUncheckedCreateWithoutRolesInput>>
    connectOrCreate?: Enumerable<UserCreateOrConnectWithoutRolesInput>
    connect?: Enumerable<UserWhereUniqueInput>
  }

  export type UserUpdateManyWithoutRolesNestedInput = {
    create?: XOR<Enumerable<UserCreateWithoutRolesInput>, Enumerable<UserUncheckedCreateWithoutRolesInput>>
    connectOrCreate?: Enumerable<UserCreateOrConnectWithoutRolesInput>
    upsert?: Enumerable<UserUpsertWithWhereUniqueWithoutRolesInput>
    set?: Enumerable<UserWhereUniqueInput>
    disconnect?: Enumerable<UserWhereUniqueInput>
    delete?: Enumerable<UserWhereUniqueInput>
    connect?: Enumerable<UserWhereUniqueInput>
    update?: Enumerable<UserUpdateWithWhereUniqueWithoutRolesInput>
    updateMany?: Enumerable<UserUpdateManyWithWhereWithoutRolesInput>
    deleteMany?: Enumerable<UserScalarWhereInput>
  }

  export type EventUpdateOneWithoutFrom_Role_eventNestedInput = {
    create?: XOR<EventCreateWithoutFrom_Role_eventInput, EventUncheckedCreateWithoutFrom_Role_eventInput>
    connectOrCreate?: EventCreateOrConnectWithoutFrom_Role_eventInput
    upsert?: EventUpsertWithoutFrom_Role_eventInput
    disconnect?: boolean
    delete?: boolean
    connect?: EventWhereUniqueInput
    update?: XOR<EventUpdateWithoutFrom_Role_eventInput, EventUncheckedUpdateWithoutFrom_Role_eventInput>
  }

  export type NullableEnumRoleTextColourTypeFieldUpdateOperationsInput = {
    set?: RoleTextColourType | null
  }

  export type UserUncheckedUpdateManyWithoutRolesNestedInput = {
    create?: XOR<Enumerable<UserCreateWithoutRolesInput>, Enumerable<UserUncheckedCreateWithoutRolesInput>>
    connectOrCreate?: Enumerable<UserCreateOrConnectWithoutRolesInput>
    upsert?: Enumerable<UserUpsertWithWhereUniqueWithoutRolesInput>
    set?: Enumerable<UserWhereUniqueInput>
    disconnect?: Enumerable<UserWhereUniqueInput>
    delete?: Enumerable<UserWhereUniqueInput>
    connect?: Enumerable<UserWhereUniqueInput>
    update?: Enumerable<UserUpdateWithWhereUniqueWithoutRolesInput>
    updateMany?: Enumerable<UserUpdateManyWithWhereWithoutRolesInput>
    deleteMany?: Enumerable<UserScalarWhereInput>
  }

  export type UserCreateNestedManyWithoutRunsInput = {
    create?: XOR<Enumerable<UserCreateWithoutRunsInput>, Enumerable<UserUncheckedCreateWithoutRunsInput>>
    connectOrCreate?: Enumerable<UserCreateOrConnectWithoutRunsInput>
    connect?: Enumerable<UserWhereUniqueInput>
  }

  export type SubmissionCreateNestedOneWithoutFrom_Run_originalSubmissionInput = {
    create?: XOR<SubmissionCreateWithoutFrom_Run_originalSubmissionInput, SubmissionUncheckedCreateWithoutFrom_Run_originalSubmissionInput>
    connectOrCreate?: SubmissionCreateOrConnectWithoutFrom_Run_originalSubmissionInput
    connect?: SubmissionWhereUniqueInput
  }

  export type EventCreateNestedOneWithoutRunsInput = {
    create?: XOR<EventCreateWithoutRunsInput, EventUncheckedCreateWithoutRunsInput>
    connectOrCreate?: EventCreateOrConnectWithoutRunsInput
    connect?: EventWhereUniqueInput
  }

  export type IncentiveCreateNestedManyWithoutRunInput = {
    create?: XOR<Enumerable<IncentiveCreateWithoutRunInput>, Enumerable<IncentiveUncheckedCreateWithoutRunInput>>
    connectOrCreate?: Enumerable<IncentiveCreateOrConnectWithoutRunInput>
    createMany?: IncentiveCreateManyRunInputEnvelope
    connect?: Enumerable<IncentiveWhereUniqueInput>
  }

  export type UserUncheckedCreateNestedManyWithoutRunsInput = {
    create?: XOR<Enumerable<UserCreateWithoutRunsInput>, Enumerable<UserUncheckedCreateWithoutRunsInput>>
    connectOrCreate?: Enumerable<UserCreateOrConnectWithoutRunsInput>
    connect?: Enumerable<UserWhereUniqueInput>
  }

  export type IncentiveUncheckedCreateNestedManyWithoutRunInput = {
    create?: XOR<Enumerable<IncentiveCreateWithoutRunInput>, Enumerable<IncentiveUncheckedCreateWithoutRunInput>>
    connectOrCreate?: Enumerable<IncentiveCreateOrConnectWithoutRunInput>
    createMany?: IncentiveCreateManyRunInputEnvelope
    connect?: Enumerable<IncentiveWhereUniqueInput>
  }

  export type UserUpdateManyWithoutRunsNestedInput = {
    create?: XOR<Enumerable<UserCreateWithoutRunsInput>, Enumerable<UserUncheckedCreateWithoutRunsInput>>
    connectOrCreate?: Enumerable<UserCreateOrConnectWithoutRunsInput>
    upsert?: Enumerable<UserUpsertWithWhereUniqueWithoutRunsInput>
    set?: Enumerable<UserWhereUniqueInput>
    disconnect?: Enumerable<UserWhereUniqueInput>
    delete?: Enumerable<UserWhereUniqueInput>
    connect?: Enumerable<UserWhereUniqueInput>
    update?: Enumerable<UserUpdateWithWhereUniqueWithoutRunsInput>
    updateMany?: Enumerable<UserUpdateManyWithWhereWithoutRunsInput>
    deleteMany?: Enumerable<UserScalarWhereInput>
  }

  export type SubmissionUpdateOneWithoutFrom_Run_originalSubmissionNestedInput = {
    create?: XOR<SubmissionCreateWithoutFrom_Run_originalSubmissionInput, SubmissionUncheckedCreateWithoutFrom_Run_originalSubmissionInput>
    connectOrCreate?: SubmissionCreateOrConnectWithoutFrom_Run_originalSubmissionInput
    upsert?: SubmissionUpsertWithoutFrom_Run_originalSubmissionInput
    disconnect?: boolean
    delete?: boolean
    connect?: SubmissionWhereUniqueInput
    update?: XOR<SubmissionUpdateWithoutFrom_Run_originalSubmissionInput, SubmissionUncheckedUpdateWithoutFrom_Run_originalSubmissionInput>
  }

  export type EventUpdateOneWithoutRunsNestedInput = {
    create?: XOR<EventCreateWithoutRunsInput, EventUncheckedCreateWithoutRunsInput>
    connectOrCreate?: EventCreateOrConnectWithoutRunsInput
    upsert?: EventUpsertWithoutRunsInput
    disconnect?: boolean
    delete?: boolean
    connect?: EventWhereUniqueInput
    update?: XOR<EventUpdateWithoutRunsInput, EventUncheckedUpdateWithoutRunsInput>
  }

  export type IncentiveUpdateManyWithoutRunNestedInput = {
    create?: XOR<Enumerable<IncentiveCreateWithoutRunInput>, Enumerable<IncentiveUncheckedCreateWithoutRunInput>>
    connectOrCreate?: Enumerable<IncentiveCreateOrConnectWithoutRunInput>
    upsert?: Enumerable<IncentiveUpsertWithWhereUniqueWithoutRunInput>
    createMany?: IncentiveCreateManyRunInputEnvelope
    set?: Enumerable<IncentiveWhereUniqueInput>
    disconnect?: Enumerable<IncentiveWhereUniqueInput>
    delete?: Enumerable<IncentiveWhereUniqueInput>
    connect?: Enumerable<IncentiveWhereUniqueInput>
    update?: Enumerable<IncentiveUpdateWithWhereUniqueWithoutRunInput>
    updateMany?: Enumerable<IncentiveUpdateManyWithWhereWithoutRunInput>
    deleteMany?: Enumerable<IncentiveScalarWhereInput>
  }

  export type UserUncheckedUpdateManyWithoutRunsNestedInput = {
    create?: XOR<Enumerable<UserCreateWithoutRunsInput>, Enumerable<UserUncheckedCreateWithoutRunsInput>>
    connectOrCreate?: Enumerable<UserCreateOrConnectWithoutRunsInput>
    upsert?: Enumerable<UserUpsertWithWhereUniqueWithoutRunsInput>
    set?: Enumerable<UserWhereUniqueInput>
    disconnect?: Enumerable<UserWhereUniqueInput>
    delete?: Enumerable<UserWhereUniqueInput>
    connect?: Enumerable<UserWhereUniqueInput>
    update?: Enumerable<UserUpdateWithWhereUniqueWithoutRunsInput>
    updateMany?: Enumerable<UserUpdateManyWithWhereWithoutRunsInput>
    deleteMany?: Enumerable<UserScalarWhereInput>
  }

  export type IncentiveUncheckedUpdateManyWithoutRunNestedInput = {
    create?: XOR<Enumerable<IncentiveCreateWithoutRunInput>, Enumerable<IncentiveUncheckedCreateWithoutRunInput>>
    connectOrCreate?: Enumerable<IncentiveCreateOrConnectWithoutRunInput>
    upsert?: Enumerable<IncentiveUpsertWithWhereUniqueWithoutRunInput>
    createMany?: IncentiveCreateManyRunInputEnvelope
    set?: Enumerable<IncentiveWhereUniqueInput>
    disconnect?: Enumerable<IncentiveWhereUniqueInput>
    delete?: Enumerable<IncentiveWhereUniqueInput>
    connect?: Enumerable<IncentiveWhereUniqueInput>
    update?: Enumerable<IncentiveUpdateWithWhereUniqueWithoutRunInput>
    updateMany?: Enumerable<IncentiveUpdateManyWithWhereWithoutRunInput>
    deleteMany?: Enumerable<IncentiveScalarWhereInput>
  }

  export type UserCreateNestedOneWithoutTicketsInput = {
    create?: XOR<UserCreateWithoutTicketsInput, UserUncheckedCreateWithoutTicketsInput>
    connectOrCreate?: UserCreateOrConnectWithoutTicketsInput
    connect?: UserWhereUniqueInput
  }

  export type EventCreateNestedOneWithoutTicketsInput = {
    create?: XOR<EventCreateWithoutTicketsInput, EventUncheckedCreateWithoutTicketsInput>
    connectOrCreate?: EventCreateOrConnectWithoutTicketsInput
    connect?: EventWhereUniqueInput
  }

  export type UserUpdateOneWithoutTicketsNestedInput = {
    create?: XOR<UserCreateWithoutTicketsInput, UserUncheckedCreateWithoutTicketsInput>
    connectOrCreate?: UserCreateOrConnectWithoutTicketsInput
    upsert?: UserUpsertWithoutTicketsInput
    disconnect?: boolean
    delete?: boolean
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutTicketsInput, UserUncheckedUpdateWithoutTicketsInput>
  }

  export type EventUpdateOneWithoutTicketsNestedInput = {
    create?: XOR<EventCreateWithoutTicketsInput, EventUncheckedCreateWithoutTicketsInput>
    connectOrCreate?: EventCreateOrConnectWithoutTicketsInput
    upsert?: EventUpsertWithoutTicketsInput
    disconnect?: boolean
    delete?: boolean
    connect?: EventWhereUniqueInput
    update?: XOR<EventUpdateWithoutTicketsInput, EventUncheckedUpdateWithoutTicketsInput>
  }

  export type EnumTicketMethodTypeFieldUpdateOperationsInput = {
    set?: TicketMethodType
  }

  export type UserCreateNestedOneWithoutVolunteerInput = {
    create?: XOR<UserCreateWithoutVolunteerInput, UserUncheckedCreateWithoutVolunteerInput>
    connectOrCreate?: UserCreateOrConnectWithoutVolunteerInput
    connect?: UserWhereUniqueInput
  }

  export type EventCreateNestedOneWithoutVolunteerInput = {
    create?: XOR<EventCreateWithoutVolunteerInput, EventUncheckedCreateWithoutVolunteerInput>
    connectOrCreate?: EventCreateOrConnectWithoutVolunteerInput
    connect?: EventWhereUniqueInput
  }

  export type UserUpdateOneWithoutVolunteerNestedInput = {
    create?: XOR<UserCreateWithoutVolunteerInput, UserUncheckedCreateWithoutVolunteerInput>
    connectOrCreate?: UserCreateOrConnectWithoutVolunteerInput
    upsert?: UserUpsertWithoutVolunteerInput
    disconnect?: boolean
    delete?: boolean
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutVolunteerInput, UserUncheckedUpdateWithoutVolunteerInput>
  }

  export type NullableEnumVolunteerJobTypeTypeFieldUpdateOperationsInput = {
    set?: VolunteerJobTypeType | null
  }

  export type EventUpdateOneWithoutVolunteerNestedInput = {
    create?: XOR<EventCreateWithoutVolunteerInput, EventUncheckedCreateWithoutVolunteerInput>
    connectOrCreate?: EventCreateOrConnectWithoutVolunteerInput
    upsert?: EventUpsertWithoutVolunteerInput
    disconnect?: boolean
    delete?: boolean
    connect?: EventWhereUniqueInput
    update?: XOR<EventUpdateWithoutVolunteerInput, EventUncheckedUpdateWithoutVolunteerInput>
  }

  export type UserCreateNestedOneWithoutShirtsInput = {
    create?: XOR<UserCreateWithoutShirtsInput, UserUncheckedCreateWithoutShirtsInput>
    connectOrCreate?: UserCreateOrConnectWithoutShirtsInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneWithoutShirtsNestedInput = {
    create?: XOR<UserCreateWithoutShirtsInput, UserUncheckedCreateWithoutShirtsInput>
    connectOrCreate?: UserCreateOrConnectWithoutShirtsInput
    upsert?: UserUpsertWithoutShirtsInput
    disconnect?: boolean
    delete?: boolean
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutShirtsInput, UserUncheckedUpdateWithoutShirtsInput>
  }

  export type EnumShirtOrderMethodTypeFieldUpdateOperationsInput = {
    set?: ShirtOrderMethodType
  }

  export type EnumShirtOrderSizeTypeFieldUpdateOperationsInput = {
    set?: ShirtOrderSizeType
  }

  export type EnumShirtOrderColourTypeFieldUpdateOperationsInput = {
    set?: ShirtOrderColourType
  }

  export type RunCreateNestedOneWithoutDonationIncentiveObjectInput = {
    create?: XOR<RunCreateWithoutDonationIncentiveObjectInput, RunUncheckedCreateWithoutDonationIncentiveObjectInput>
    connectOrCreate?: RunCreateOrConnectWithoutDonationIncentiveObjectInput
    connect?: RunWhereUniqueInput
  }

  export type EventCreateNestedOneWithoutDonationIncentivesInput = {
    create?: XOR<EventCreateWithoutDonationIncentivesInput, EventUncheckedCreateWithoutDonationIncentivesInput>
    connectOrCreate?: EventCreateOrConnectWithoutDonationIncentivesInput
    connect?: EventWhereUniqueInput
  }

  export type RunUpdateOneWithoutDonationIncentiveObjectNestedInput = {
    create?: XOR<RunCreateWithoutDonationIncentiveObjectInput, RunUncheckedCreateWithoutDonationIncentiveObjectInput>
    connectOrCreate?: RunCreateOrConnectWithoutDonationIncentiveObjectInput
    upsert?: RunUpsertWithoutDonationIncentiveObjectInput
    disconnect?: boolean
    delete?: boolean
    connect?: RunWhereUniqueInput
    update?: XOR<RunUpdateWithoutDonationIncentiveObjectInput, RunUncheckedUpdateWithoutDonationIncentiveObjectInput>
  }

  export type EventUpdateOneWithoutDonationIncentivesNestedInput = {
    create?: XOR<EventCreateWithoutDonationIncentivesInput, EventUncheckedCreateWithoutDonationIncentivesInput>
    connectOrCreate?: EventCreateOrConnectWithoutDonationIncentivesInput
    upsert?: EventUpsertWithoutDonationIncentivesInput
    disconnect?: boolean
    delete?: boolean
    connect?: EventWhereUniqueInput
    update?: XOR<EventUpdateWithoutDonationIncentivesInput, EventUncheckedUpdateWithoutDonationIncentivesInput>
  }

  export type NestedStringFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringFilter | string
  }

  export type NestedBoolFilter = {
    equals?: boolean
    not?: NestedBoolFilter | boolean
  }

  export type NestedDateTimeNullableFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableFilter | Date | string | null
  }

  export type NestedEnumPostRoleTypeNullableFilter = {
    equals?: PostRoleType | null
    in?: Enumerable<PostRoleType> | null
    notIn?: Enumerable<PostRoleType> | null
    not?: NestedEnumPostRoleTypeNullableFilter | PostRoleType | null
  }

  export type NestedStringNullableFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringNullableFilter | string | null
  }

  export type NestedStringWithAggregatesFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringWithAggregatesFilter | string
    _count?: NestedIntFilter
    _min?: NestedStringFilter
    _max?: NestedStringFilter
  }

  export type NestedIntFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntFilter | number
  }

  export type NestedBoolWithAggregatesFilter = {
    equals?: boolean
    not?: NestedBoolWithAggregatesFilter | boolean
    _count?: NestedIntFilter
    _min?: NestedBoolFilter
    _max?: NestedBoolFilter
  }

  export type NestedDateTimeNullableWithAggregatesFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableWithAggregatesFilter | Date | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedDateTimeNullableFilter
    _max?: NestedDateTimeNullableFilter
  }

  export type NestedIntNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableFilter | number | null
  }

  export type NestedEnumPostRoleTypeNullableWithAggregatesFilter = {
    equals?: PostRoleType | null
    in?: Enumerable<PostRoleType> | null
    notIn?: Enumerable<PostRoleType> | null
    not?: NestedEnumPostRoleTypeNullableWithAggregatesFilter | PostRoleType | null
    _count?: NestedIntNullableFilter
    _min?: NestedEnumPostRoleTypeNullableFilter
    _max?: NestedEnumPostRoleTypeNullableFilter
  }
  export type NestedJsonFilter = 
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase>, Exclude<keyof Required<NestedJsonFilterBase>, 'path'>>,
        Required<NestedJsonFilterBase>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase>, 'path'>>

  export type NestedJsonFilterBase = {
    equals?: InputJsonValue | JsonNullValueFilter
    path?: Array<string>
    string_contains?: string
    string_starts_with?: string
    string_ends_with?: string
    array_contains?: InputJsonValue | null
    array_starts_with?: InputJsonValue | null
    array_ends_with?: InputJsonValue | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonNullValueFilter
  }

  export type NestedStringNullableWithAggregatesFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringNullableWithAggregatesFilter | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedStringNullableFilter
    _max?: NestedStringNullableFilter
  }

  export type NestedEnumUserStateTypeNullableFilter = {
    equals?: UserStateType | null
    in?: Enumerable<UserStateType> | null
    notIn?: Enumerable<UserStateType> | null
    not?: NestedEnumUserStateTypeNullableFilter | UserStateType | null
  }

  export type NestedEnumUserStateTypeNullableWithAggregatesFilter = {
    equals?: UserStateType | null
    in?: Enumerable<UserStateType> | null
    notIn?: Enumerable<UserStateType> | null
    not?: NestedEnumUserStateTypeNullableWithAggregatesFilter | UserStateType | null
    _count?: NestedIntNullableFilter
    _min?: NestedEnumUserStateTypeNullableFilter
    _max?: NestedEnumUserStateTypeNullableFilter
  }

  export type NestedEnumSubmissionAgeRatingTypeNullableFilter = {
    equals?: SubmissionAgeRatingType | null
    in?: Enumerable<SubmissionAgeRatingType> | null
    notIn?: Enumerable<SubmissionAgeRatingType> | null
    not?: NestedEnumSubmissionAgeRatingTypeNullableFilter | SubmissionAgeRatingType | null
  }

  export type NestedEnumSubmissionRaceTypeNullableFilter = {
    equals?: SubmissionRaceType | null
    in?: Enumerable<SubmissionRaceType> | null
    notIn?: Enumerable<SubmissionRaceType> | null
    not?: NestedEnumSubmissionRaceTypeNullableFilter | SubmissionRaceType | null
  }

  export type NestedEnumSubmissionStatusTypeNullableFilter = {
    equals?: SubmissionStatusType | null
    in?: Enumerable<SubmissionStatusType> | null
    notIn?: Enumerable<SubmissionStatusType> | null
    not?: NestedEnumSubmissionStatusTypeNullableFilter | SubmissionStatusType | null
  }

  export type NestedEnumSubmissionAgeRatingTypeNullableWithAggregatesFilter = {
    equals?: SubmissionAgeRatingType | null
    in?: Enumerable<SubmissionAgeRatingType> | null
    notIn?: Enumerable<SubmissionAgeRatingType> | null
    not?: NestedEnumSubmissionAgeRatingTypeNullableWithAggregatesFilter | SubmissionAgeRatingType | null
    _count?: NestedIntNullableFilter
    _min?: NestedEnumSubmissionAgeRatingTypeNullableFilter
    _max?: NestedEnumSubmissionAgeRatingTypeNullableFilter
  }
  export type NestedJsonNullableFilter = 
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase>, Exclude<keyof Required<NestedJsonNullableFilterBase>, 'path'>>,
        Required<NestedJsonNullableFilterBase>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase>, 'path'>>

  export type NestedJsonNullableFilterBase = {
    equals?: InputJsonValue | JsonNullValueFilter
    path?: Array<string>
    string_contains?: string
    string_starts_with?: string
    string_ends_with?: string
    array_contains?: InputJsonValue | null
    array_starts_with?: InputJsonValue | null
    array_ends_with?: InputJsonValue | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonNullValueFilter
  }

  export type NestedEnumSubmissionRaceTypeNullableWithAggregatesFilter = {
    equals?: SubmissionRaceType | null
    in?: Enumerable<SubmissionRaceType> | null
    notIn?: Enumerable<SubmissionRaceType> | null
    not?: NestedEnumSubmissionRaceTypeNullableWithAggregatesFilter | SubmissionRaceType | null
    _count?: NestedIntNullableFilter
    _min?: NestedEnumSubmissionRaceTypeNullableFilter
    _max?: NestedEnumSubmissionRaceTypeNullableFilter
  }

  export type NestedEnumSubmissionStatusTypeNullableWithAggregatesFilter = {
    equals?: SubmissionStatusType | null
    in?: Enumerable<SubmissionStatusType> | null
    notIn?: Enumerable<SubmissionStatusType> | null
    not?: NestedEnumSubmissionStatusTypeNullableWithAggregatesFilter | SubmissionStatusType | null
    _count?: NestedIntNullableFilter
    _min?: NestedEnumSubmissionStatusTypeNullableFilter
    _max?: NestedEnumSubmissionStatusTypeNullableFilter
  }

  export type NestedFloatNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatNullableFilter | number | null
  }

  export type NestedFloatNullableWithAggregatesFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatNullableWithAggregatesFilter | number | null
    _count?: NestedIntNullableFilter
    _avg?: NestedFloatNullableFilter
    _sum?: NestedFloatNullableFilter
    _min?: NestedFloatNullableFilter
    _max?: NestedFloatNullableFilter
  }

  export type NestedIntNullableWithAggregatesFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableWithAggregatesFilter | number | null
    _count?: NestedIntNullableFilter
    _avg?: NestedFloatNullableFilter
    _sum?: NestedIntNullableFilter
    _min?: NestedIntNullableFilter
    _max?: NestedIntNullableFilter
  }

  export type NestedEnumRoleTextColourTypeNullableFilter = {
    equals?: RoleTextColourType | null
    in?: Enumerable<RoleTextColourType> | null
    notIn?: Enumerable<RoleTextColourType> | null
    not?: NestedEnumRoleTextColourTypeNullableFilter | RoleTextColourType | null
  }

  export type NestedEnumRoleTextColourTypeNullableWithAggregatesFilter = {
    equals?: RoleTextColourType | null
    in?: Enumerable<RoleTextColourType> | null
    notIn?: Enumerable<RoleTextColourType> | null
    not?: NestedEnumRoleTextColourTypeNullableWithAggregatesFilter | RoleTextColourType | null
    _count?: NestedIntNullableFilter
    _min?: NestedEnumRoleTextColourTypeNullableFilter
    _max?: NestedEnumRoleTextColourTypeNullableFilter
  }

  export type NestedEnumTicketMethodTypeFilter = {
    equals?: TicketMethodType
    in?: Enumerable<TicketMethodType>
    notIn?: Enumerable<TicketMethodType>
    not?: NestedEnumTicketMethodTypeFilter | TicketMethodType
  }

  export type NestedEnumTicketMethodTypeWithAggregatesFilter = {
    equals?: TicketMethodType
    in?: Enumerable<TicketMethodType>
    notIn?: Enumerable<TicketMethodType>
    not?: NestedEnumTicketMethodTypeWithAggregatesFilter | TicketMethodType
    _count?: NestedIntFilter
    _min?: NestedEnumTicketMethodTypeFilter
    _max?: NestedEnumTicketMethodTypeFilter
  }

  export type NestedEnumVolunteerJobTypeTypeNullableFilter = {
    equals?: VolunteerJobTypeType | null
    in?: Enumerable<VolunteerJobTypeType> | null
    notIn?: Enumerable<VolunteerJobTypeType> | null
    not?: NestedEnumVolunteerJobTypeTypeNullableFilter | VolunteerJobTypeType | null
  }

  export type NestedEnumVolunteerJobTypeTypeNullableWithAggregatesFilter = {
    equals?: VolunteerJobTypeType | null
    in?: Enumerable<VolunteerJobTypeType> | null
    notIn?: Enumerable<VolunteerJobTypeType> | null
    not?: NestedEnumVolunteerJobTypeTypeNullableWithAggregatesFilter | VolunteerJobTypeType | null
    _count?: NestedIntNullableFilter
    _min?: NestedEnumVolunteerJobTypeTypeNullableFilter
    _max?: NestedEnumVolunteerJobTypeTypeNullableFilter
  }

  export type NestedEnumShirtOrderMethodTypeFilter = {
    equals?: ShirtOrderMethodType
    in?: Enumerable<ShirtOrderMethodType>
    notIn?: Enumerable<ShirtOrderMethodType>
    not?: NestedEnumShirtOrderMethodTypeFilter | ShirtOrderMethodType
  }

  export type NestedEnumShirtOrderSizeTypeFilter = {
    equals?: ShirtOrderSizeType
    in?: Enumerable<ShirtOrderSizeType>
    notIn?: Enumerable<ShirtOrderSizeType>
    not?: NestedEnumShirtOrderSizeTypeFilter | ShirtOrderSizeType
  }

  export type NestedEnumShirtOrderColourTypeFilter = {
    equals?: ShirtOrderColourType
    in?: Enumerable<ShirtOrderColourType>
    notIn?: Enumerable<ShirtOrderColourType>
    not?: NestedEnumShirtOrderColourTypeFilter | ShirtOrderColourType
  }

  export type NestedEnumShirtOrderMethodTypeWithAggregatesFilter = {
    equals?: ShirtOrderMethodType
    in?: Enumerable<ShirtOrderMethodType>
    notIn?: Enumerable<ShirtOrderMethodType>
    not?: NestedEnumShirtOrderMethodTypeWithAggregatesFilter | ShirtOrderMethodType
    _count?: NestedIntFilter
    _min?: NestedEnumShirtOrderMethodTypeFilter
    _max?: NestedEnumShirtOrderMethodTypeFilter
  }

  export type NestedEnumShirtOrderSizeTypeWithAggregatesFilter = {
    equals?: ShirtOrderSizeType
    in?: Enumerable<ShirtOrderSizeType>
    notIn?: Enumerable<ShirtOrderSizeType>
    not?: NestedEnumShirtOrderSizeTypeWithAggregatesFilter | ShirtOrderSizeType
    _count?: NestedIntFilter
    _min?: NestedEnumShirtOrderSizeTypeFilter
    _max?: NestedEnumShirtOrderSizeTypeFilter
  }

  export type NestedEnumShirtOrderColourTypeWithAggregatesFilter = {
    equals?: ShirtOrderColourType
    in?: Enumerable<ShirtOrderColourType>
    notIn?: Enumerable<ShirtOrderColourType>
    not?: NestedEnumShirtOrderColourTypeWithAggregatesFilter | ShirtOrderColourType
    _count?: NestedIntFilter
    _min?: NestedEnumShirtOrderColourTypeFilter
    _max?: NestedEnumShirtOrderColourTypeFilter
  }

  export type UserCreateWithoutFrom_Post_authorInput = {
    id?: string
    name?: string
    username?: string
    email?: string
    password: string
    accountCreated?: Date | string | null
    dateOfBirth?: Date | string | null
    pronouns?: string
    submissions?: SubmissionCreateNestedManyWithoutRunnerInput
    roles?: RoleCreateNestedManyWithoutUsersInput
    runs?: RunCreateNestedManyWithoutRunnersInput
    verified?: boolean
    state?: UserStateType | null
    sentVerification?: Date | string | null
    discord?: string
    twitter?: string
    twitch?: string
    tickets?: TicketCreateNestedManyWithoutUserInput
    volunteer?: VolunteerCreateNestedManyWithoutVolunteerInput
    shirts?: ShirtOrderCreateNestedManyWithoutUserInput
    passwordResetToken?: string | null
    passwordResetIssuedAt?: Date | string | null
    passwordResetRedeemedAt?: Date | string | null
  }

  export type UserUncheckedCreateWithoutFrom_Post_authorInput = {
    id?: string
    name?: string
    username?: string
    email?: string
    password: string
    accountCreated?: Date | string | null
    dateOfBirth?: Date | string | null
    pronouns?: string
    submissions?: SubmissionUncheckedCreateNestedManyWithoutRunnerInput
    roles?: RoleUncheckedCreateNestedManyWithoutUsersInput
    runs?: RunUncheckedCreateNestedManyWithoutRunnersInput
    verified?: boolean
    state?: UserStateType | null
    sentVerification?: Date | string | null
    discord?: string
    twitter?: string
    twitch?: string
    tickets?: TicketUncheckedCreateNestedManyWithoutUserInput
    volunteer?: VolunteerUncheckedCreateNestedManyWithoutVolunteerInput
    shirts?: ShirtOrderUncheckedCreateNestedManyWithoutUserInput
    passwordResetToken?: string | null
    passwordResetIssuedAt?: Date | string | null
    passwordResetRedeemedAt?: Date | string | null
  }

  export type UserCreateOrConnectWithoutFrom_Post_authorInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFrom_Post_authorInput, UserUncheckedCreateWithoutFrom_Post_authorInput>
  }

  export type EventCreateWithoutFrom_Post_eventInput = {
    id?: string
    name?: string
    shortname?: string
    published?: boolean
    acceptingSubmissions?: boolean
    acceptingTickets?: boolean
    scheduleReleased?: boolean
    acceptingVolunteers?: boolean
    acceptingBackups?: boolean
    acceptingShirts?: boolean
    eventTimezone?: string
    startDate?: Date | string | null
    endDate?: Date | string | null
    raised?: number | null
    postEventPage?: JsonNullValueInput | InputJsonValue
    submissions?: SubmissionCreateNestedManyWithoutEventInput
    runs?: RunCreateNestedManyWithoutEventInput
    tickets?: TicketCreateNestedManyWithoutEventInput
    volunteer?: VolunteerCreateNestedManyWithoutEventInput
    donationIncentives?: IncentiveCreateNestedManyWithoutEventInput
    logo_filesize?: number | null
    logo_extension?: string | null
    logo_width?: number | null
    logo_height?: number | null
    logo_id?: string | null
    darkModeLogo_filesize?: number | null
    darkModeLogo_extension?: string | null
    darkModeLogo_width?: number | null
    darkModeLogo_height?: number | null
    darkModeLogo_id?: string | null
    heroImage_filesize?: number | null
    heroImage_extension?: string | null
    heroImage_width?: number | null
    heroImage_height?: number | null
    heroImage_id?: string | null
    ogImage_filesize?: number | null
    ogImage_extension?: string | null
    ogImage_width?: number | null
    ogImage_height?: number | null
    ogImage_id?: string | null
    postEventBackground_filesize?: number | null
    postEventBackground_extension?: string | null
    postEventBackground_width?: number | null
    postEventBackground_height?: number | null
    postEventBackground_id?: string | null
    pressKit_filename?: string | null
    pressKit_filesize?: number | null
    submissionInstructions?: JsonNullValueInput | InputJsonValue
    eventPage?: JsonNullValueInput | InputJsonValue
    from_Role_event?: RoleCreateNestedManyWithoutEventInput
  }

  export type EventUncheckedCreateWithoutFrom_Post_eventInput = {
    id?: string
    name?: string
    shortname?: string
    published?: boolean
    acceptingSubmissions?: boolean
    acceptingTickets?: boolean
    scheduleReleased?: boolean
    acceptingVolunteers?: boolean
    acceptingBackups?: boolean
    acceptingShirts?: boolean
    eventTimezone?: string
    startDate?: Date | string | null
    endDate?: Date | string | null
    raised?: number | null
    postEventPage?: JsonNullValueInput | InputJsonValue
    submissions?: SubmissionUncheckedCreateNestedManyWithoutEventInput
    runs?: RunUncheckedCreateNestedManyWithoutEventInput
    tickets?: TicketUncheckedCreateNestedManyWithoutEventInput
    volunteer?: VolunteerUncheckedCreateNestedManyWithoutEventInput
    donationIncentives?: IncentiveUncheckedCreateNestedManyWithoutEventInput
    logo_filesize?: number | null
    logo_extension?: string | null
    logo_width?: number | null
    logo_height?: number | null
    logo_id?: string | null
    darkModeLogo_filesize?: number | null
    darkModeLogo_extension?: string | null
    darkModeLogo_width?: number | null
    darkModeLogo_height?: number | null
    darkModeLogo_id?: string | null
    heroImage_filesize?: number | null
    heroImage_extension?: string | null
    heroImage_width?: number | null
    heroImage_height?: number | null
    heroImage_id?: string | null
    ogImage_filesize?: number | null
    ogImage_extension?: string | null
    ogImage_width?: number | null
    ogImage_height?: number | null
    ogImage_id?: string | null
    postEventBackground_filesize?: number | null
    postEventBackground_extension?: string | null
    postEventBackground_width?: number | null
    postEventBackground_height?: number | null
    postEventBackground_id?: string | null
    pressKit_filename?: string | null
    pressKit_filesize?: number | null
    submissionInstructions?: JsonNullValueInput | InputJsonValue
    eventPage?: JsonNullValueInput | InputJsonValue
    from_Role_event?: RoleUncheckedCreateNestedManyWithoutEventInput
  }

  export type EventCreateOrConnectWithoutFrom_Post_eventInput = {
    where: EventWhereUniqueInput
    create: XOR<EventCreateWithoutFrom_Post_eventInput, EventUncheckedCreateWithoutFrom_Post_eventInput>
  }

  export type UserUpsertWithWhereUniqueWithoutFrom_Post_authorInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutFrom_Post_authorInput, UserUncheckedUpdateWithoutFrom_Post_authorInput>
    create: XOR<UserCreateWithoutFrom_Post_authorInput, UserUncheckedCreateWithoutFrom_Post_authorInput>
  }

  export type UserUpdateWithWhereUniqueWithoutFrom_Post_authorInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutFrom_Post_authorInput, UserUncheckedUpdateWithoutFrom_Post_authorInput>
  }

  export type UserUpdateManyWithWhereWithoutFrom_Post_authorInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutAuthorInput>
  }

  export type UserScalarWhereInput = {
    AND?: Enumerable<UserScalarWhereInput>
    OR?: Enumerable<UserScalarWhereInput>
    NOT?: Enumerable<UserScalarWhereInput>
    id?: StringFilter | string
    name?: StringFilter | string
    username?: StringFilter | string
    email?: StringFilter | string
    password?: StringFilter | string
    accountCreated?: DateTimeNullableFilter | Date | string | null
    dateOfBirth?: DateTimeNullableFilter | Date | string | null
    pronouns?: StringFilter | string
    verified?: BoolFilter | boolean
    state?: EnumUserStateTypeNullableFilter | UserStateType | null
    sentVerification?: DateTimeNullableFilter | Date | string | null
    discord?: StringFilter | string
    twitter?: StringFilter | string
    twitch?: StringFilter | string
    passwordResetToken?: StringNullableFilter | string | null
    passwordResetIssuedAt?: DateTimeNullableFilter | Date | string | null
    passwordResetRedeemedAt?: DateTimeNullableFilter | Date | string | null
  }

  export type EventUpsertWithoutFrom_Post_eventInput = {
    update: XOR<EventUpdateWithoutFrom_Post_eventInput, EventUncheckedUpdateWithoutFrom_Post_eventInput>
    create: XOR<EventCreateWithoutFrom_Post_eventInput, EventUncheckedCreateWithoutFrom_Post_eventInput>
  }

  export type EventUpdateWithoutFrom_Post_eventInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    shortname?: StringFieldUpdateOperationsInput | string
    published?: BoolFieldUpdateOperationsInput | boolean
    acceptingSubmissions?: BoolFieldUpdateOperationsInput | boolean
    acceptingTickets?: BoolFieldUpdateOperationsInput | boolean
    scheduleReleased?: BoolFieldUpdateOperationsInput | boolean
    acceptingVolunteers?: BoolFieldUpdateOperationsInput | boolean
    acceptingBackups?: BoolFieldUpdateOperationsInput | boolean
    acceptingShirts?: BoolFieldUpdateOperationsInput | boolean
    eventTimezone?: StringFieldUpdateOperationsInput | string
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raised?: NullableFloatFieldUpdateOperationsInput | number | null
    postEventPage?: JsonNullValueInput | InputJsonValue
    submissions?: SubmissionUpdateManyWithoutEventNestedInput
    runs?: RunUpdateManyWithoutEventNestedInput
    tickets?: TicketUpdateManyWithoutEventNestedInput
    volunteer?: VolunteerUpdateManyWithoutEventNestedInput
    donationIncentives?: IncentiveUpdateManyWithoutEventNestedInput
    logo_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    logo_extension?: NullableStringFieldUpdateOperationsInput | string | null
    logo_width?: NullableIntFieldUpdateOperationsInput | number | null
    logo_height?: NullableIntFieldUpdateOperationsInput | number | null
    logo_id?: NullableStringFieldUpdateOperationsInput | string | null
    darkModeLogo_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_extension?: NullableStringFieldUpdateOperationsInput | string | null
    darkModeLogo_width?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_height?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_id?: NullableStringFieldUpdateOperationsInput | string | null
    heroImage_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_extension?: NullableStringFieldUpdateOperationsInput | string | null
    heroImage_width?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_height?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_id?: NullableStringFieldUpdateOperationsInput | string | null
    ogImage_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_extension?: NullableStringFieldUpdateOperationsInput | string | null
    ogImage_width?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_height?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_id?: NullableStringFieldUpdateOperationsInput | string | null
    postEventBackground_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_extension?: NullableStringFieldUpdateOperationsInput | string | null
    postEventBackground_width?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_height?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_id?: NullableStringFieldUpdateOperationsInput | string | null
    pressKit_filename?: NullableStringFieldUpdateOperationsInput | string | null
    pressKit_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    submissionInstructions?: JsonNullValueInput | InputJsonValue
    eventPage?: JsonNullValueInput | InputJsonValue
    from_Role_event?: RoleUpdateManyWithoutEventNestedInput
  }

  export type EventUncheckedUpdateWithoutFrom_Post_eventInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    shortname?: StringFieldUpdateOperationsInput | string
    published?: BoolFieldUpdateOperationsInput | boolean
    acceptingSubmissions?: BoolFieldUpdateOperationsInput | boolean
    acceptingTickets?: BoolFieldUpdateOperationsInput | boolean
    scheduleReleased?: BoolFieldUpdateOperationsInput | boolean
    acceptingVolunteers?: BoolFieldUpdateOperationsInput | boolean
    acceptingBackups?: BoolFieldUpdateOperationsInput | boolean
    acceptingShirts?: BoolFieldUpdateOperationsInput | boolean
    eventTimezone?: StringFieldUpdateOperationsInput | string
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raised?: NullableFloatFieldUpdateOperationsInput | number | null
    postEventPage?: JsonNullValueInput | InputJsonValue
    submissions?: SubmissionUncheckedUpdateManyWithoutEventNestedInput
    runs?: RunUncheckedUpdateManyWithoutEventNestedInput
    tickets?: TicketUncheckedUpdateManyWithoutEventNestedInput
    volunteer?: VolunteerUncheckedUpdateManyWithoutEventNestedInput
    donationIncentives?: IncentiveUncheckedUpdateManyWithoutEventNestedInput
    logo_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    logo_extension?: NullableStringFieldUpdateOperationsInput | string | null
    logo_width?: NullableIntFieldUpdateOperationsInput | number | null
    logo_height?: NullableIntFieldUpdateOperationsInput | number | null
    logo_id?: NullableStringFieldUpdateOperationsInput | string | null
    darkModeLogo_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_extension?: NullableStringFieldUpdateOperationsInput | string | null
    darkModeLogo_width?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_height?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_id?: NullableStringFieldUpdateOperationsInput | string | null
    heroImage_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_extension?: NullableStringFieldUpdateOperationsInput | string | null
    heroImage_width?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_height?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_id?: NullableStringFieldUpdateOperationsInput | string | null
    ogImage_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_extension?: NullableStringFieldUpdateOperationsInput | string | null
    ogImage_width?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_height?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_id?: NullableStringFieldUpdateOperationsInput | string | null
    postEventBackground_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_extension?: NullableStringFieldUpdateOperationsInput | string | null
    postEventBackground_width?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_height?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_id?: NullableStringFieldUpdateOperationsInput | string | null
    pressKit_filename?: NullableStringFieldUpdateOperationsInput | string | null
    pressKit_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    submissionInstructions?: JsonNullValueInput | InputJsonValue
    eventPage?: JsonNullValueInput | InputJsonValue
    from_Role_event?: RoleUncheckedUpdateManyWithoutEventNestedInput
  }

  export type SubmissionCreateWithoutRunnerInput = {
    id?: string
    created?: Date | string | null
    game?: string
    category?: string
    platform?: string
    estimate?: string
    ageRating?: SubmissionAgeRatingType | null
    donationIncentive?: string
    specialReqs?: string
    availability?: NullableJsonNullValueInput | InputJsonValue
    race?: SubmissionRaceType | null
    racer?: string
    coop?: boolean
    video?: string
    status?: SubmissionStatusType | null
    event?: EventCreateNestedOneWithoutSubmissionsInput
    willingBackup?: boolean
    from_Run_originalSubmission?: RunCreateNestedManyWithoutOriginalSubmissionInput
  }

  export type SubmissionUncheckedCreateWithoutRunnerInput = {
    id?: string
    created?: Date | string | null
    game?: string
    category?: string
    platform?: string
    estimate?: string
    ageRating?: SubmissionAgeRatingType | null
    donationIncentive?: string
    specialReqs?: string
    availability?: NullableJsonNullValueInput | InputJsonValue
    race?: SubmissionRaceType | null
    racer?: string
    coop?: boolean
    video?: string
    status?: SubmissionStatusType | null
    eventId?: string | null
    willingBackup?: boolean
    from_Run_originalSubmission?: RunUncheckedCreateNestedManyWithoutOriginalSubmissionInput
  }

  export type SubmissionCreateOrConnectWithoutRunnerInput = {
    where: SubmissionWhereUniqueInput
    create: XOR<SubmissionCreateWithoutRunnerInput, SubmissionUncheckedCreateWithoutRunnerInput>
  }

  export type SubmissionCreateManyRunnerInputEnvelope = {
    data: Enumerable<SubmissionCreateManyRunnerInput>
    skipDuplicates?: boolean
  }

  export type RoleCreateWithoutUsersInput = {
    id?: string
    name?: string
    admin?: boolean
    canManageContent?: boolean
    canManageUsers?: boolean
    runner?: boolean
    volunteer?: boolean
    event?: EventCreateNestedOneWithoutFrom_Role_eventInput
    show?: boolean
    colour?: string
    textColour?: RoleTextColourType | null
  }

  export type RoleUncheckedCreateWithoutUsersInput = {
    id?: string
    name?: string
    admin?: boolean
    canManageContent?: boolean
    canManageUsers?: boolean
    runner?: boolean
    volunteer?: boolean
    eventId?: string | null
    show?: boolean
    colour?: string
    textColour?: RoleTextColourType | null
  }

  export type RoleCreateOrConnectWithoutUsersInput = {
    where: RoleWhereUniqueInput
    create: XOR<RoleCreateWithoutUsersInput, RoleUncheckedCreateWithoutUsersInput>
  }

  export type RunCreateWithoutRunnersInput = {
    id?: string
    originalSubmission?: SubmissionCreateNestedOneWithoutFrom_Run_originalSubmissionInput
    game?: string
    category?: string
    platform?: string
    estimate?: string
    finalTime?: string
    donationIncentive?: string
    race?: boolean
    racer?: string
    coop?: boolean
    twitchVOD?: string
    youtubeVOD?: string
    event?: EventCreateNestedOneWithoutRunsInput
    donationIncentiveObject?: IncentiveCreateNestedManyWithoutRunInput
    scheduledTime?: Date | string | null
  }

  export type RunUncheckedCreateWithoutRunnersInput = {
    id?: string
    originalSubmissionId?: string | null
    game?: string
    category?: string
    platform?: string
    estimate?: string
    finalTime?: string
    donationIncentive?: string
    race?: boolean
    racer?: string
    coop?: boolean
    twitchVOD?: string
    youtubeVOD?: string
    eventId?: string | null
    donationIncentiveObject?: IncentiveUncheckedCreateNestedManyWithoutRunInput
    scheduledTime?: Date | string | null
  }

  export type RunCreateOrConnectWithoutRunnersInput = {
    where: RunWhereUniqueInput
    create: XOR<RunCreateWithoutRunnersInput, RunUncheckedCreateWithoutRunnersInput>
  }

  export type TicketCreateWithoutUserInput = {
    id?: string
    event?: EventCreateNestedOneWithoutTicketsInput
    taken?: boolean
    method: TicketMethodType
    ticketID?: string
    paid?: boolean
    notes?: string
    numberOfTickets?: number | null
    stripeID?: string
    created?: Date | string | null
  }

  export type TicketUncheckedCreateWithoutUserInput = {
    id?: string
    eventId?: string | null
    taken?: boolean
    method: TicketMethodType
    ticketID?: string
    paid?: boolean
    notes?: string
    numberOfTickets?: number | null
    stripeID?: string
    created?: Date | string | null
  }

  export type TicketCreateOrConnectWithoutUserInput = {
    where: TicketWhereUniqueInput
    create: XOR<TicketCreateWithoutUserInput, TicketUncheckedCreateWithoutUserInput>
  }

  export type TicketCreateManyUserInputEnvelope = {
    data: Enumerable<TicketCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type VolunteerCreateWithoutVolunteerInput = {
    id?: string
    jobType?: VolunteerJobTypeType | null
    eventHostTime?: number | null
    maxDailyHostTime?: number | null
    dayTimes?: NullableJsonNullValueInput | InputJsonValue
    specificGame?: string
    specificRunner?: string
    additionalInfo?: string
    experience?: string
    favMeme?: string
    runnerManagementAvailability?: string
    techAvailablity?: string
    techExperience?: string
    event?: EventCreateNestedOneWithoutVolunteerInput
  }

  export type VolunteerUncheckedCreateWithoutVolunteerInput = {
    id?: string
    jobType?: VolunteerJobTypeType | null
    eventHostTime?: number | null
    maxDailyHostTime?: number | null
    dayTimes?: NullableJsonNullValueInput | InputJsonValue
    specificGame?: string
    specificRunner?: string
    additionalInfo?: string
    experience?: string
    favMeme?: string
    runnerManagementAvailability?: string
    techAvailablity?: string
    techExperience?: string
    eventId?: string | null
  }

  export type VolunteerCreateOrConnectWithoutVolunteerInput = {
    where: VolunteerWhereUniqueInput
    create: XOR<VolunteerCreateWithoutVolunteerInput, VolunteerUncheckedCreateWithoutVolunteerInput>
  }

  export type VolunteerCreateManyVolunteerInputEnvelope = {
    data: Enumerable<VolunteerCreateManyVolunteerInput>
    skipDuplicates?: boolean
  }

  export type ShirtOrderCreateWithoutUserInput = {
    id?: string
    taken?: boolean
    method: ShirtOrderMethodType
    shirtID?: string
    paid?: boolean
    notes?: string
    size: ShirtOrderSizeType
    colour: ShirtOrderColourType
    stripeID?: string
    created?: Date | string | null
  }

  export type ShirtOrderUncheckedCreateWithoutUserInput = {
    id?: string
    taken?: boolean
    method: ShirtOrderMethodType
    shirtID?: string
    paid?: boolean
    notes?: string
    size: ShirtOrderSizeType
    colour: ShirtOrderColourType
    stripeID?: string
    created?: Date | string | null
  }

  export type ShirtOrderCreateOrConnectWithoutUserInput = {
    where: ShirtOrderWhereUniqueInput
    create: XOR<ShirtOrderCreateWithoutUserInput, ShirtOrderUncheckedCreateWithoutUserInput>
  }

  export type ShirtOrderCreateManyUserInputEnvelope = {
    data: Enumerable<ShirtOrderCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type PostCreateWithoutAuthorInput = {
    id?: string
    title?: string
    slug?: string
    published?: boolean
    publishedDate?: Date | string | null
    editedDate?: Date | string | null
    role?: PostRoleType | null
    content?: JsonNullValueInput | InputJsonValue
    intro?: string
    event?: EventCreateNestedOneWithoutFrom_Post_eventInput
  }

  export type PostUncheckedCreateWithoutAuthorInput = {
    id?: string
    title?: string
    slug?: string
    published?: boolean
    publishedDate?: Date | string | null
    editedDate?: Date | string | null
    role?: PostRoleType | null
    content?: JsonNullValueInput | InputJsonValue
    intro?: string
    eventId?: string | null
  }

  export type PostCreateOrConnectWithoutAuthorInput = {
    where: PostWhereUniqueInput
    create: XOR<PostCreateWithoutAuthorInput, PostUncheckedCreateWithoutAuthorInput>
  }

  export type SubmissionUpsertWithWhereUniqueWithoutRunnerInput = {
    where: SubmissionWhereUniqueInput
    update: XOR<SubmissionUpdateWithoutRunnerInput, SubmissionUncheckedUpdateWithoutRunnerInput>
    create: XOR<SubmissionCreateWithoutRunnerInput, SubmissionUncheckedCreateWithoutRunnerInput>
  }

  export type SubmissionUpdateWithWhereUniqueWithoutRunnerInput = {
    where: SubmissionWhereUniqueInput
    data: XOR<SubmissionUpdateWithoutRunnerInput, SubmissionUncheckedUpdateWithoutRunnerInput>
  }

  export type SubmissionUpdateManyWithWhereWithoutRunnerInput = {
    where: SubmissionScalarWhereInput
    data: XOR<SubmissionUpdateManyMutationInput, SubmissionUncheckedUpdateManyWithoutSubmissionsInput>
  }

  export type SubmissionScalarWhereInput = {
    AND?: Enumerable<SubmissionScalarWhereInput>
    OR?: Enumerable<SubmissionScalarWhereInput>
    NOT?: Enumerable<SubmissionScalarWhereInput>
    id?: StringFilter | string
    runnerId?: StringNullableFilter | string | null
    created?: DateTimeNullableFilter | Date | string | null
    game?: StringFilter | string
    category?: StringFilter | string
    platform?: StringFilter | string
    estimate?: StringFilter | string
    ageRating?: EnumSubmissionAgeRatingTypeNullableFilter | SubmissionAgeRatingType | null
    donationIncentive?: StringFilter | string
    specialReqs?: StringFilter | string
    availability?: JsonNullableFilter
    race?: EnumSubmissionRaceTypeNullableFilter | SubmissionRaceType | null
    racer?: StringFilter | string
    coop?: BoolFilter | boolean
    video?: StringFilter | string
    status?: EnumSubmissionStatusTypeNullableFilter | SubmissionStatusType | null
    eventId?: StringNullableFilter | string | null
    willingBackup?: BoolFilter | boolean
  }

  export type RoleUpsertWithWhereUniqueWithoutUsersInput = {
    where: RoleWhereUniqueInput
    update: XOR<RoleUpdateWithoutUsersInput, RoleUncheckedUpdateWithoutUsersInput>
    create: XOR<RoleCreateWithoutUsersInput, RoleUncheckedCreateWithoutUsersInput>
  }

  export type RoleUpdateWithWhereUniqueWithoutUsersInput = {
    where: RoleWhereUniqueInput
    data: XOR<RoleUpdateWithoutUsersInput, RoleUncheckedUpdateWithoutUsersInput>
  }

  export type RoleUpdateManyWithWhereWithoutUsersInput = {
    where: RoleScalarWhereInput
    data: XOR<RoleUpdateManyMutationInput, RoleUncheckedUpdateManyWithoutRolesInput>
  }

  export type RoleScalarWhereInput = {
    AND?: Enumerable<RoleScalarWhereInput>
    OR?: Enumerable<RoleScalarWhereInput>
    NOT?: Enumerable<RoleScalarWhereInput>
    id?: StringFilter | string
    name?: StringFilter | string
    admin?: BoolFilter | boolean
    canManageContent?: BoolFilter | boolean
    canManageUsers?: BoolFilter | boolean
    runner?: BoolFilter | boolean
    volunteer?: BoolFilter | boolean
    eventId?: StringNullableFilter | string | null
    show?: BoolFilter | boolean
    colour?: StringFilter | string
    textColour?: EnumRoleTextColourTypeNullableFilter | RoleTextColourType | null
  }

  export type RunUpsertWithWhereUniqueWithoutRunnersInput = {
    where: RunWhereUniqueInput
    update: XOR<RunUpdateWithoutRunnersInput, RunUncheckedUpdateWithoutRunnersInput>
    create: XOR<RunCreateWithoutRunnersInput, RunUncheckedCreateWithoutRunnersInput>
  }

  export type RunUpdateWithWhereUniqueWithoutRunnersInput = {
    where: RunWhereUniqueInput
    data: XOR<RunUpdateWithoutRunnersInput, RunUncheckedUpdateWithoutRunnersInput>
  }

  export type RunUpdateManyWithWhereWithoutRunnersInput = {
    where: RunScalarWhereInput
    data: XOR<RunUpdateManyMutationInput, RunUncheckedUpdateManyWithoutRunsInput>
  }

  export type RunScalarWhereInput = {
    AND?: Enumerable<RunScalarWhereInput>
    OR?: Enumerable<RunScalarWhereInput>
    NOT?: Enumerable<RunScalarWhereInput>
    id?: StringFilter | string
    originalSubmissionId?: StringNullableFilter | string | null
    game?: StringFilter | string
    category?: StringFilter | string
    platform?: StringFilter | string
    estimate?: StringFilter | string
    finalTime?: StringFilter | string
    donationIncentive?: StringFilter | string
    race?: BoolFilter | boolean
    racer?: StringFilter | string
    coop?: BoolFilter | boolean
    twitchVOD?: StringFilter | string
    youtubeVOD?: StringFilter | string
    eventId?: StringNullableFilter | string | null
    scheduledTime?: DateTimeNullableFilter | Date | string | null
  }

  export type TicketUpsertWithWhereUniqueWithoutUserInput = {
    where: TicketWhereUniqueInput
    update: XOR<TicketUpdateWithoutUserInput, TicketUncheckedUpdateWithoutUserInput>
    create: XOR<TicketCreateWithoutUserInput, TicketUncheckedCreateWithoutUserInput>
  }

  export type TicketUpdateWithWhereUniqueWithoutUserInput = {
    where: TicketWhereUniqueInput
    data: XOR<TicketUpdateWithoutUserInput, TicketUncheckedUpdateWithoutUserInput>
  }

  export type TicketUpdateManyWithWhereWithoutUserInput = {
    where: TicketScalarWhereInput
    data: XOR<TicketUpdateManyMutationInput, TicketUncheckedUpdateManyWithoutTicketsInput>
  }

  export type TicketScalarWhereInput = {
    AND?: Enumerable<TicketScalarWhereInput>
    OR?: Enumerable<TicketScalarWhereInput>
    NOT?: Enumerable<TicketScalarWhereInput>
    id?: StringFilter | string
    userId?: StringNullableFilter | string | null
    eventId?: StringNullableFilter | string | null
    taken?: BoolFilter | boolean
    method?: EnumTicketMethodTypeFilter | TicketMethodType
    ticketID?: StringFilter | string
    paid?: BoolFilter | boolean
    notes?: StringFilter | string
    numberOfTickets?: IntNullableFilter | number | null
    stripeID?: StringFilter | string
    created?: DateTimeNullableFilter | Date | string | null
  }

  export type VolunteerUpsertWithWhereUniqueWithoutVolunteerInput = {
    where: VolunteerWhereUniqueInput
    update: XOR<VolunteerUpdateWithoutVolunteerInput, VolunteerUncheckedUpdateWithoutVolunteerInput>
    create: XOR<VolunteerCreateWithoutVolunteerInput, VolunteerUncheckedCreateWithoutVolunteerInput>
  }

  export type VolunteerUpdateWithWhereUniqueWithoutVolunteerInput = {
    where: VolunteerWhereUniqueInput
    data: XOR<VolunteerUpdateWithoutVolunteerInput, VolunteerUncheckedUpdateWithoutVolunteerInput>
  }

  export type VolunteerUpdateManyWithWhereWithoutVolunteerInput = {
    where: VolunteerScalarWhereInput
    data: XOR<VolunteerUpdateManyMutationInput, VolunteerUncheckedUpdateManyWithoutVolunteerInput>
  }

  export type VolunteerScalarWhereInput = {
    AND?: Enumerable<VolunteerScalarWhereInput>
    OR?: Enumerable<VolunteerScalarWhereInput>
    NOT?: Enumerable<VolunteerScalarWhereInput>
    id?: StringFilter | string
    volunteerId?: StringNullableFilter | string | null
    jobType?: EnumVolunteerJobTypeTypeNullableFilter | VolunteerJobTypeType | null
    eventHostTime?: IntNullableFilter | number | null
    maxDailyHostTime?: IntNullableFilter | number | null
    dayTimes?: JsonNullableFilter
    specificGame?: StringFilter | string
    specificRunner?: StringFilter | string
    additionalInfo?: StringFilter | string
    experience?: StringFilter | string
    favMeme?: StringFilter | string
    runnerManagementAvailability?: StringFilter | string
    techAvailablity?: StringFilter | string
    techExperience?: StringFilter | string
    eventId?: StringNullableFilter | string | null
  }

  export type ShirtOrderUpsertWithWhereUniqueWithoutUserInput = {
    where: ShirtOrderWhereUniqueInput
    update: XOR<ShirtOrderUpdateWithoutUserInput, ShirtOrderUncheckedUpdateWithoutUserInput>
    create: XOR<ShirtOrderCreateWithoutUserInput, ShirtOrderUncheckedCreateWithoutUserInput>
  }

  export type ShirtOrderUpdateWithWhereUniqueWithoutUserInput = {
    where: ShirtOrderWhereUniqueInput
    data: XOR<ShirtOrderUpdateWithoutUserInput, ShirtOrderUncheckedUpdateWithoutUserInput>
  }

  export type ShirtOrderUpdateManyWithWhereWithoutUserInput = {
    where: ShirtOrderScalarWhereInput
    data: XOR<ShirtOrderUpdateManyMutationInput, ShirtOrderUncheckedUpdateManyWithoutShirtsInput>
  }

  export type ShirtOrderScalarWhereInput = {
    AND?: Enumerable<ShirtOrderScalarWhereInput>
    OR?: Enumerable<ShirtOrderScalarWhereInput>
    NOT?: Enumerable<ShirtOrderScalarWhereInput>
    id?: StringFilter | string
    userId?: StringNullableFilter | string | null
    taken?: BoolFilter | boolean
    method?: EnumShirtOrderMethodTypeFilter | ShirtOrderMethodType
    shirtID?: StringFilter | string
    paid?: BoolFilter | boolean
    notes?: StringFilter | string
    size?: EnumShirtOrderSizeTypeFilter | ShirtOrderSizeType
    colour?: EnumShirtOrderColourTypeFilter | ShirtOrderColourType
    stripeID?: StringFilter | string
    created?: DateTimeNullableFilter | Date | string | null
  }

  export type PostUpsertWithWhereUniqueWithoutAuthorInput = {
    where: PostWhereUniqueInput
    update: XOR<PostUpdateWithoutAuthorInput, PostUncheckedUpdateWithoutAuthorInput>
    create: XOR<PostCreateWithoutAuthorInput, PostUncheckedCreateWithoutAuthorInput>
  }

  export type PostUpdateWithWhereUniqueWithoutAuthorInput = {
    where: PostWhereUniqueInput
    data: XOR<PostUpdateWithoutAuthorInput, PostUncheckedUpdateWithoutAuthorInput>
  }

  export type PostUpdateManyWithWhereWithoutAuthorInput = {
    where: PostScalarWhereInput
    data: XOR<PostUpdateManyMutationInput, PostUncheckedUpdateManyWithoutFrom_Post_authorInput>
  }

  export type PostScalarWhereInput = {
    AND?: Enumerable<PostScalarWhereInput>
    OR?: Enumerable<PostScalarWhereInput>
    NOT?: Enumerable<PostScalarWhereInput>
    id?: StringFilter | string
    title?: StringFilter | string
    slug?: StringFilter | string
    published?: BoolFilter | boolean
    publishedDate?: DateTimeNullableFilter | Date | string | null
    editedDate?: DateTimeNullableFilter | Date | string | null
    role?: EnumPostRoleTypeNullableFilter | PostRoleType | null
    content?: JsonFilter
    intro?: StringFilter | string
    eventId?: StringNullableFilter | string | null
  }

  export type UserCreateWithoutSubmissionsInput = {
    id?: string
    name?: string
    username?: string
    email?: string
    password: string
    accountCreated?: Date | string | null
    dateOfBirth?: Date | string | null
    pronouns?: string
    roles?: RoleCreateNestedManyWithoutUsersInput
    runs?: RunCreateNestedManyWithoutRunnersInput
    verified?: boolean
    state?: UserStateType | null
    sentVerification?: Date | string | null
    discord?: string
    twitter?: string
    twitch?: string
    tickets?: TicketCreateNestedManyWithoutUserInput
    volunteer?: VolunteerCreateNestedManyWithoutVolunteerInput
    shirts?: ShirtOrderCreateNestedManyWithoutUserInput
    passwordResetToken?: string | null
    passwordResetIssuedAt?: Date | string | null
    passwordResetRedeemedAt?: Date | string | null
    from_Post_author?: PostCreateNestedManyWithoutAuthorInput
  }

  export type UserUncheckedCreateWithoutSubmissionsInput = {
    id?: string
    name?: string
    username?: string
    email?: string
    password: string
    accountCreated?: Date | string | null
    dateOfBirth?: Date | string | null
    pronouns?: string
    roles?: RoleUncheckedCreateNestedManyWithoutUsersInput
    runs?: RunUncheckedCreateNestedManyWithoutRunnersInput
    verified?: boolean
    state?: UserStateType | null
    sentVerification?: Date | string | null
    discord?: string
    twitter?: string
    twitch?: string
    tickets?: TicketUncheckedCreateNestedManyWithoutUserInput
    volunteer?: VolunteerUncheckedCreateNestedManyWithoutVolunteerInput
    shirts?: ShirtOrderUncheckedCreateNestedManyWithoutUserInput
    passwordResetToken?: string | null
    passwordResetIssuedAt?: Date | string | null
    passwordResetRedeemedAt?: Date | string | null
    from_Post_author?: PostUncheckedCreateNestedManyWithoutAuthorInput
  }

  export type UserCreateOrConnectWithoutSubmissionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSubmissionsInput, UserUncheckedCreateWithoutSubmissionsInput>
  }

  export type EventCreateWithoutSubmissionsInput = {
    id?: string
    name?: string
    shortname?: string
    published?: boolean
    acceptingSubmissions?: boolean
    acceptingTickets?: boolean
    scheduleReleased?: boolean
    acceptingVolunteers?: boolean
    acceptingBackups?: boolean
    acceptingShirts?: boolean
    eventTimezone?: string
    startDate?: Date | string | null
    endDate?: Date | string | null
    raised?: number | null
    postEventPage?: JsonNullValueInput | InputJsonValue
    runs?: RunCreateNestedManyWithoutEventInput
    tickets?: TicketCreateNestedManyWithoutEventInput
    volunteer?: VolunteerCreateNestedManyWithoutEventInput
    donationIncentives?: IncentiveCreateNestedManyWithoutEventInput
    logo_filesize?: number | null
    logo_extension?: string | null
    logo_width?: number | null
    logo_height?: number | null
    logo_id?: string | null
    darkModeLogo_filesize?: number | null
    darkModeLogo_extension?: string | null
    darkModeLogo_width?: number | null
    darkModeLogo_height?: number | null
    darkModeLogo_id?: string | null
    heroImage_filesize?: number | null
    heroImage_extension?: string | null
    heroImage_width?: number | null
    heroImage_height?: number | null
    heroImage_id?: string | null
    ogImage_filesize?: number | null
    ogImage_extension?: string | null
    ogImage_width?: number | null
    ogImage_height?: number | null
    ogImage_id?: string | null
    postEventBackground_filesize?: number | null
    postEventBackground_extension?: string | null
    postEventBackground_width?: number | null
    postEventBackground_height?: number | null
    postEventBackground_id?: string | null
    pressKit_filename?: string | null
    pressKit_filesize?: number | null
    submissionInstructions?: JsonNullValueInput | InputJsonValue
    eventPage?: JsonNullValueInput | InputJsonValue
    from_Post_event?: PostCreateNestedManyWithoutEventInput
    from_Role_event?: RoleCreateNestedManyWithoutEventInput
  }

  export type EventUncheckedCreateWithoutSubmissionsInput = {
    id?: string
    name?: string
    shortname?: string
    published?: boolean
    acceptingSubmissions?: boolean
    acceptingTickets?: boolean
    scheduleReleased?: boolean
    acceptingVolunteers?: boolean
    acceptingBackups?: boolean
    acceptingShirts?: boolean
    eventTimezone?: string
    startDate?: Date | string | null
    endDate?: Date | string | null
    raised?: number | null
    postEventPage?: JsonNullValueInput | InputJsonValue
    runs?: RunUncheckedCreateNestedManyWithoutEventInput
    tickets?: TicketUncheckedCreateNestedManyWithoutEventInput
    volunteer?: VolunteerUncheckedCreateNestedManyWithoutEventInput
    donationIncentives?: IncentiveUncheckedCreateNestedManyWithoutEventInput
    logo_filesize?: number | null
    logo_extension?: string | null
    logo_width?: number | null
    logo_height?: number | null
    logo_id?: string | null
    darkModeLogo_filesize?: number | null
    darkModeLogo_extension?: string | null
    darkModeLogo_width?: number | null
    darkModeLogo_height?: number | null
    darkModeLogo_id?: string | null
    heroImage_filesize?: number | null
    heroImage_extension?: string | null
    heroImage_width?: number | null
    heroImage_height?: number | null
    heroImage_id?: string | null
    ogImage_filesize?: number | null
    ogImage_extension?: string | null
    ogImage_width?: number | null
    ogImage_height?: number | null
    ogImage_id?: string | null
    postEventBackground_filesize?: number | null
    postEventBackground_extension?: string | null
    postEventBackground_width?: number | null
    postEventBackground_height?: number | null
    postEventBackground_id?: string | null
    pressKit_filename?: string | null
    pressKit_filesize?: number | null
    submissionInstructions?: JsonNullValueInput | InputJsonValue
    eventPage?: JsonNullValueInput | InputJsonValue
    from_Post_event?: PostUncheckedCreateNestedManyWithoutEventInput
    from_Role_event?: RoleUncheckedCreateNestedManyWithoutEventInput
  }

  export type EventCreateOrConnectWithoutSubmissionsInput = {
    where: EventWhereUniqueInput
    create: XOR<EventCreateWithoutSubmissionsInput, EventUncheckedCreateWithoutSubmissionsInput>
  }

  export type RunCreateWithoutOriginalSubmissionInput = {
    id?: string
    runners?: UserCreateNestedManyWithoutRunsInput
    game?: string
    category?: string
    platform?: string
    estimate?: string
    finalTime?: string
    donationIncentive?: string
    race?: boolean
    racer?: string
    coop?: boolean
    twitchVOD?: string
    youtubeVOD?: string
    event?: EventCreateNestedOneWithoutRunsInput
    donationIncentiveObject?: IncentiveCreateNestedManyWithoutRunInput
    scheduledTime?: Date | string | null
  }

  export type RunUncheckedCreateWithoutOriginalSubmissionInput = {
    id?: string
    runners?: UserUncheckedCreateNestedManyWithoutRunsInput
    game?: string
    category?: string
    platform?: string
    estimate?: string
    finalTime?: string
    donationIncentive?: string
    race?: boolean
    racer?: string
    coop?: boolean
    twitchVOD?: string
    youtubeVOD?: string
    eventId?: string | null
    donationIncentiveObject?: IncentiveUncheckedCreateNestedManyWithoutRunInput
    scheduledTime?: Date | string | null
  }

  export type RunCreateOrConnectWithoutOriginalSubmissionInput = {
    where: RunWhereUniqueInput
    create: XOR<RunCreateWithoutOriginalSubmissionInput, RunUncheckedCreateWithoutOriginalSubmissionInput>
  }

  export type RunCreateManyOriginalSubmissionInputEnvelope = {
    data: Enumerable<RunCreateManyOriginalSubmissionInput>
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutSubmissionsInput = {
    update: XOR<UserUpdateWithoutSubmissionsInput, UserUncheckedUpdateWithoutSubmissionsInput>
    create: XOR<UserCreateWithoutSubmissionsInput, UserUncheckedCreateWithoutSubmissionsInput>
  }

  export type UserUpdateWithoutSubmissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    accountCreated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pronouns?: StringFieldUpdateOperationsInput | string
    roles?: RoleUpdateManyWithoutUsersNestedInput
    runs?: RunUpdateManyWithoutRunnersNestedInput
    verified?: BoolFieldUpdateOperationsInput | boolean
    state?: NullableEnumUserStateTypeFieldUpdateOperationsInput | UserStateType | null
    sentVerification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discord?: StringFieldUpdateOperationsInput | string
    twitter?: StringFieldUpdateOperationsInput | string
    twitch?: StringFieldUpdateOperationsInput | string
    tickets?: TicketUpdateManyWithoutUserNestedInput
    volunteer?: VolunteerUpdateManyWithoutVolunteerNestedInput
    shirts?: ShirtOrderUpdateManyWithoutUserNestedInput
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetIssuedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordResetRedeemedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    from_Post_author?: PostUpdateManyWithoutAuthorNestedInput
  }

  export type UserUncheckedUpdateWithoutSubmissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    accountCreated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pronouns?: StringFieldUpdateOperationsInput | string
    roles?: RoleUncheckedUpdateManyWithoutUsersNestedInput
    runs?: RunUncheckedUpdateManyWithoutRunnersNestedInput
    verified?: BoolFieldUpdateOperationsInput | boolean
    state?: NullableEnumUserStateTypeFieldUpdateOperationsInput | UserStateType | null
    sentVerification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discord?: StringFieldUpdateOperationsInput | string
    twitter?: StringFieldUpdateOperationsInput | string
    twitch?: StringFieldUpdateOperationsInput | string
    tickets?: TicketUncheckedUpdateManyWithoutUserNestedInput
    volunteer?: VolunteerUncheckedUpdateManyWithoutVolunteerNestedInput
    shirts?: ShirtOrderUncheckedUpdateManyWithoutUserNestedInput
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetIssuedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordResetRedeemedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    from_Post_author?: PostUncheckedUpdateManyWithoutAuthorNestedInput
  }

  export type EventUpsertWithoutSubmissionsInput = {
    update: XOR<EventUpdateWithoutSubmissionsInput, EventUncheckedUpdateWithoutSubmissionsInput>
    create: XOR<EventCreateWithoutSubmissionsInput, EventUncheckedCreateWithoutSubmissionsInput>
  }

  export type EventUpdateWithoutSubmissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    shortname?: StringFieldUpdateOperationsInput | string
    published?: BoolFieldUpdateOperationsInput | boolean
    acceptingSubmissions?: BoolFieldUpdateOperationsInput | boolean
    acceptingTickets?: BoolFieldUpdateOperationsInput | boolean
    scheduleReleased?: BoolFieldUpdateOperationsInput | boolean
    acceptingVolunteers?: BoolFieldUpdateOperationsInput | boolean
    acceptingBackups?: BoolFieldUpdateOperationsInput | boolean
    acceptingShirts?: BoolFieldUpdateOperationsInput | boolean
    eventTimezone?: StringFieldUpdateOperationsInput | string
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raised?: NullableFloatFieldUpdateOperationsInput | number | null
    postEventPage?: JsonNullValueInput | InputJsonValue
    runs?: RunUpdateManyWithoutEventNestedInput
    tickets?: TicketUpdateManyWithoutEventNestedInput
    volunteer?: VolunteerUpdateManyWithoutEventNestedInput
    donationIncentives?: IncentiveUpdateManyWithoutEventNestedInput
    logo_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    logo_extension?: NullableStringFieldUpdateOperationsInput | string | null
    logo_width?: NullableIntFieldUpdateOperationsInput | number | null
    logo_height?: NullableIntFieldUpdateOperationsInput | number | null
    logo_id?: NullableStringFieldUpdateOperationsInput | string | null
    darkModeLogo_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_extension?: NullableStringFieldUpdateOperationsInput | string | null
    darkModeLogo_width?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_height?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_id?: NullableStringFieldUpdateOperationsInput | string | null
    heroImage_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_extension?: NullableStringFieldUpdateOperationsInput | string | null
    heroImage_width?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_height?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_id?: NullableStringFieldUpdateOperationsInput | string | null
    ogImage_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_extension?: NullableStringFieldUpdateOperationsInput | string | null
    ogImage_width?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_height?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_id?: NullableStringFieldUpdateOperationsInput | string | null
    postEventBackground_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_extension?: NullableStringFieldUpdateOperationsInput | string | null
    postEventBackground_width?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_height?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_id?: NullableStringFieldUpdateOperationsInput | string | null
    pressKit_filename?: NullableStringFieldUpdateOperationsInput | string | null
    pressKit_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    submissionInstructions?: JsonNullValueInput | InputJsonValue
    eventPage?: JsonNullValueInput | InputJsonValue
    from_Post_event?: PostUpdateManyWithoutEventNestedInput
    from_Role_event?: RoleUpdateManyWithoutEventNestedInput
  }

  export type EventUncheckedUpdateWithoutSubmissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    shortname?: StringFieldUpdateOperationsInput | string
    published?: BoolFieldUpdateOperationsInput | boolean
    acceptingSubmissions?: BoolFieldUpdateOperationsInput | boolean
    acceptingTickets?: BoolFieldUpdateOperationsInput | boolean
    scheduleReleased?: BoolFieldUpdateOperationsInput | boolean
    acceptingVolunteers?: BoolFieldUpdateOperationsInput | boolean
    acceptingBackups?: BoolFieldUpdateOperationsInput | boolean
    acceptingShirts?: BoolFieldUpdateOperationsInput | boolean
    eventTimezone?: StringFieldUpdateOperationsInput | string
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raised?: NullableFloatFieldUpdateOperationsInput | number | null
    postEventPage?: JsonNullValueInput | InputJsonValue
    runs?: RunUncheckedUpdateManyWithoutEventNestedInput
    tickets?: TicketUncheckedUpdateManyWithoutEventNestedInput
    volunteer?: VolunteerUncheckedUpdateManyWithoutEventNestedInput
    donationIncentives?: IncentiveUncheckedUpdateManyWithoutEventNestedInput
    logo_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    logo_extension?: NullableStringFieldUpdateOperationsInput | string | null
    logo_width?: NullableIntFieldUpdateOperationsInput | number | null
    logo_height?: NullableIntFieldUpdateOperationsInput | number | null
    logo_id?: NullableStringFieldUpdateOperationsInput | string | null
    darkModeLogo_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_extension?: NullableStringFieldUpdateOperationsInput | string | null
    darkModeLogo_width?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_height?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_id?: NullableStringFieldUpdateOperationsInput | string | null
    heroImage_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_extension?: NullableStringFieldUpdateOperationsInput | string | null
    heroImage_width?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_height?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_id?: NullableStringFieldUpdateOperationsInput | string | null
    ogImage_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_extension?: NullableStringFieldUpdateOperationsInput | string | null
    ogImage_width?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_height?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_id?: NullableStringFieldUpdateOperationsInput | string | null
    postEventBackground_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_extension?: NullableStringFieldUpdateOperationsInput | string | null
    postEventBackground_width?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_height?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_id?: NullableStringFieldUpdateOperationsInput | string | null
    pressKit_filename?: NullableStringFieldUpdateOperationsInput | string | null
    pressKit_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    submissionInstructions?: JsonNullValueInput | InputJsonValue
    eventPage?: JsonNullValueInput | InputJsonValue
    from_Post_event?: PostUncheckedUpdateManyWithoutEventNestedInput
    from_Role_event?: RoleUncheckedUpdateManyWithoutEventNestedInput
  }

  export type RunUpsertWithWhereUniqueWithoutOriginalSubmissionInput = {
    where: RunWhereUniqueInput
    update: XOR<RunUpdateWithoutOriginalSubmissionInput, RunUncheckedUpdateWithoutOriginalSubmissionInput>
    create: XOR<RunCreateWithoutOriginalSubmissionInput, RunUncheckedCreateWithoutOriginalSubmissionInput>
  }

  export type RunUpdateWithWhereUniqueWithoutOriginalSubmissionInput = {
    where: RunWhereUniqueInput
    data: XOR<RunUpdateWithoutOriginalSubmissionInput, RunUncheckedUpdateWithoutOriginalSubmissionInput>
  }

  export type RunUpdateManyWithWhereWithoutOriginalSubmissionInput = {
    where: RunScalarWhereInput
    data: XOR<RunUpdateManyMutationInput, RunUncheckedUpdateManyWithoutFrom_Run_originalSubmissionInput>
  }

  export type SubmissionCreateWithoutEventInput = {
    id?: string
    runner?: UserCreateNestedOneWithoutSubmissionsInput
    created?: Date | string | null
    game?: string
    category?: string
    platform?: string
    estimate?: string
    ageRating?: SubmissionAgeRatingType | null
    donationIncentive?: string
    specialReqs?: string
    availability?: NullableJsonNullValueInput | InputJsonValue
    race?: SubmissionRaceType | null
    racer?: string
    coop?: boolean
    video?: string
    status?: SubmissionStatusType | null
    willingBackup?: boolean
    from_Run_originalSubmission?: RunCreateNestedManyWithoutOriginalSubmissionInput
  }

  export type SubmissionUncheckedCreateWithoutEventInput = {
    id?: string
    runnerId?: string | null
    created?: Date | string | null
    game?: string
    category?: string
    platform?: string
    estimate?: string
    ageRating?: SubmissionAgeRatingType | null
    donationIncentive?: string
    specialReqs?: string
    availability?: NullableJsonNullValueInput | InputJsonValue
    race?: SubmissionRaceType | null
    racer?: string
    coop?: boolean
    video?: string
    status?: SubmissionStatusType | null
    willingBackup?: boolean
    from_Run_originalSubmission?: RunUncheckedCreateNestedManyWithoutOriginalSubmissionInput
  }

  export type SubmissionCreateOrConnectWithoutEventInput = {
    where: SubmissionWhereUniqueInput
    create: XOR<SubmissionCreateWithoutEventInput, SubmissionUncheckedCreateWithoutEventInput>
  }

  export type SubmissionCreateManyEventInputEnvelope = {
    data: Enumerable<SubmissionCreateManyEventInput>
    skipDuplicates?: boolean
  }

  export type RunCreateWithoutEventInput = {
    id?: string
    runners?: UserCreateNestedManyWithoutRunsInput
    originalSubmission?: SubmissionCreateNestedOneWithoutFrom_Run_originalSubmissionInput
    game?: string
    category?: string
    platform?: string
    estimate?: string
    finalTime?: string
    donationIncentive?: string
    race?: boolean
    racer?: string
    coop?: boolean
    twitchVOD?: string
    youtubeVOD?: string
    donationIncentiveObject?: IncentiveCreateNestedManyWithoutRunInput
    scheduledTime?: Date | string | null
  }

  export type RunUncheckedCreateWithoutEventInput = {
    id?: string
    runners?: UserUncheckedCreateNestedManyWithoutRunsInput
    originalSubmissionId?: string | null
    game?: string
    category?: string
    platform?: string
    estimate?: string
    finalTime?: string
    donationIncentive?: string
    race?: boolean
    racer?: string
    coop?: boolean
    twitchVOD?: string
    youtubeVOD?: string
    donationIncentiveObject?: IncentiveUncheckedCreateNestedManyWithoutRunInput
    scheduledTime?: Date | string | null
  }

  export type RunCreateOrConnectWithoutEventInput = {
    where: RunWhereUniqueInput
    create: XOR<RunCreateWithoutEventInput, RunUncheckedCreateWithoutEventInput>
  }

  export type RunCreateManyEventInputEnvelope = {
    data: Enumerable<RunCreateManyEventInput>
    skipDuplicates?: boolean
  }

  export type TicketCreateWithoutEventInput = {
    id?: string
    user?: UserCreateNestedOneWithoutTicketsInput
    taken?: boolean
    method: TicketMethodType
    ticketID?: string
    paid?: boolean
    notes?: string
    numberOfTickets?: number | null
    stripeID?: string
    created?: Date | string | null
  }

  export type TicketUncheckedCreateWithoutEventInput = {
    id?: string
    userId?: string | null
    taken?: boolean
    method: TicketMethodType
    ticketID?: string
    paid?: boolean
    notes?: string
    numberOfTickets?: number | null
    stripeID?: string
    created?: Date | string | null
  }

  export type TicketCreateOrConnectWithoutEventInput = {
    where: TicketWhereUniqueInput
    create: XOR<TicketCreateWithoutEventInput, TicketUncheckedCreateWithoutEventInput>
  }

  export type TicketCreateManyEventInputEnvelope = {
    data: Enumerable<TicketCreateManyEventInput>
    skipDuplicates?: boolean
  }

  export type VolunteerCreateWithoutEventInput = {
    id?: string
    volunteer?: UserCreateNestedOneWithoutVolunteerInput
    jobType?: VolunteerJobTypeType | null
    eventHostTime?: number | null
    maxDailyHostTime?: number | null
    dayTimes?: NullableJsonNullValueInput | InputJsonValue
    specificGame?: string
    specificRunner?: string
    additionalInfo?: string
    experience?: string
    favMeme?: string
    runnerManagementAvailability?: string
    techAvailablity?: string
    techExperience?: string
  }

  export type VolunteerUncheckedCreateWithoutEventInput = {
    id?: string
    volunteerId?: string | null
    jobType?: VolunteerJobTypeType | null
    eventHostTime?: number | null
    maxDailyHostTime?: number | null
    dayTimes?: NullableJsonNullValueInput | InputJsonValue
    specificGame?: string
    specificRunner?: string
    additionalInfo?: string
    experience?: string
    favMeme?: string
    runnerManagementAvailability?: string
    techAvailablity?: string
    techExperience?: string
  }

  export type VolunteerCreateOrConnectWithoutEventInput = {
    where: VolunteerWhereUniqueInput
    create: XOR<VolunteerCreateWithoutEventInput, VolunteerUncheckedCreateWithoutEventInput>
  }

  export type VolunteerCreateManyEventInputEnvelope = {
    data: Enumerable<VolunteerCreateManyEventInput>
    skipDuplicates?: boolean
  }

  export type IncentiveCreateWithoutEventInput = {
    id?: string
    run?: RunCreateNestedOneWithoutDonationIncentiveObjectInput
    title?: string
    notes?: string
    type?: string
    data?: NullableJsonNullValueInput | InputJsonValue
    active?: boolean
  }

  export type IncentiveUncheckedCreateWithoutEventInput = {
    id?: string
    runId?: string | null
    title?: string
    notes?: string
    type?: string
    data?: NullableJsonNullValueInput | InputJsonValue
    active?: boolean
  }

  export type IncentiveCreateOrConnectWithoutEventInput = {
    where: IncentiveWhereUniqueInput
    create: XOR<IncentiveCreateWithoutEventInput, IncentiveUncheckedCreateWithoutEventInput>
  }

  export type IncentiveCreateManyEventInputEnvelope = {
    data: Enumerable<IncentiveCreateManyEventInput>
    skipDuplicates?: boolean
  }

  export type PostCreateWithoutEventInput = {
    id?: string
    title?: string
    slug?: string
    author?: UserCreateNestedManyWithoutFrom_Post_authorInput
    published?: boolean
    publishedDate?: Date | string | null
    editedDate?: Date | string | null
    role?: PostRoleType | null
    content?: JsonNullValueInput | InputJsonValue
    intro?: string
  }

  export type PostUncheckedCreateWithoutEventInput = {
    id?: string
    title?: string
    slug?: string
    author?: UserUncheckedCreateNestedManyWithoutFrom_Post_authorInput
    published?: boolean
    publishedDate?: Date | string | null
    editedDate?: Date | string | null
    role?: PostRoleType | null
    content?: JsonNullValueInput | InputJsonValue
    intro?: string
  }

  export type PostCreateOrConnectWithoutEventInput = {
    where: PostWhereUniqueInput
    create: XOR<PostCreateWithoutEventInput, PostUncheckedCreateWithoutEventInput>
  }

  export type PostCreateManyEventInputEnvelope = {
    data: Enumerable<PostCreateManyEventInput>
    skipDuplicates?: boolean
  }

  export type RoleCreateWithoutEventInput = {
    id?: string
    name?: string
    admin?: boolean
    canManageContent?: boolean
    canManageUsers?: boolean
    runner?: boolean
    volunteer?: boolean
    users?: UserCreateNestedManyWithoutRolesInput
    show?: boolean
    colour?: string
    textColour?: RoleTextColourType | null
  }

  export type RoleUncheckedCreateWithoutEventInput = {
    id?: string
    name?: string
    admin?: boolean
    canManageContent?: boolean
    canManageUsers?: boolean
    runner?: boolean
    volunteer?: boolean
    users?: UserUncheckedCreateNestedManyWithoutRolesInput
    show?: boolean
    colour?: string
    textColour?: RoleTextColourType | null
  }

  export type RoleCreateOrConnectWithoutEventInput = {
    where: RoleWhereUniqueInput
    create: XOR<RoleCreateWithoutEventInput, RoleUncheckedCreateWithoutEventInput>
  }

  export type RoleCreateManyEventInputEnvelope = {
    data: Enumerable<RoleCreateManyEventInput>
    skipDuplicates?: boolean
  }

  export type SubmissionUpsertWithWhereUniqueWithoutEventInput = {
    where: SubmissionWhereUniqueInput
    update: XOR<SubmissionUpdateWithoutEventInput, SubmissionUncheckedUpdateWithoutEventInput>
    create: XOR<SubmissionCreateWithoutEventInput, SubmissionUncheckedCreateWithoutEventInput>
  }

  export type SubmissionUpdateWithWhereUniqueWithoutEventInput = {
    where: SubmissionWhereUniqueInput
    data: XOR<SubmissionUpdateWithoutEventInput, SubmissionUncheckedUpdateWithoutEventInput>
  }

  export type SubmissionUpdateManyWithWhereWithoutEventInput = {
    where: SubmissionScalarWhereInput
    data: XOR<SubmissionUpdateManyMutationInput, SubmissionUncheckedUpdateManyWithoutSubmissionsInput>
  }

  export type RunUpsertWithWhereUniqueWithoutEventInput = {
    where: RunWhereUniqueInput
    update: XOR<RunUpdateWithoutEventInput, RunUncheckedUpdateWithoutEventInput>
    create: XOR<RunCreateWithoutEventInput, RunUncheckedCreateWithoutEventInput>
  }

  export type RunUpdateWithWhereUniqueWithoutEventInput = {
    where: RunWhereUniqueInput
    data: XOR<RunUpdateWithoutEventInput, RunUncheckedUpdateWithoutEventInput>
  }

  export type RunUpdateManyWithWhereWithoutEventInput = {
    where: RunScalarWhereInput
    data: XOR<RunUpdateManyMutationInput, RunUncheckedUpdateManyWithoutRunsInput>
  }

  export type TicketUpsertWithWhereUniqueWithoutEventInput = {
    where: TicketWhereUniqueInput
    update: XOR<TicketUpdateWithoutEventInput, TicketUncheckedUpdateWithoutEventInput>
    create: XOR<TicketCreateWithoutEventInput, TicketUncheckedCreateWithoutEventInput>
  }

  export type TicketUpdateWithWhereUniqueWithoutEventInput = {
    where: TicketWhereUniqueInput
    data: XOR<TicketUpdateWithoutEventInput, TicketUncheckedUpdateWithoutEventInput>
  }

  export type TicketUpdateManyWithWhereWithoutEventInput = {
    where: TicketScalarWhereInput
    data: XOR<TicketUpdateManyMutationInput, TicketUncheckedUpdateManyWithoutTicketsInput>
  }

  export type VolunteerUpsertWithWhereUniqueWithoutEventInput = {
    where: VolunteerWhereUniqueInput
    update: XOR<VolunteerUpdateWithoutEventInput, VolunteerUncheckedUpdateWithoutEventInput>
    create: XOR<VolunteerCreateWithoutEventInput, VolunteerUncheckedCreateWithoutEventInput>
  }

  export type VolunteerUpdateWithWhereUniqueWithoutEventInput = {
    where: VolunteerWhereUniqueInput
    data: XOR<VolunteerUpdateWithoutEventInput, VolunteerUncheckedUpdateWithoutEventInput>
  }

  export type VolunteerUpdateManyWithWhereWithoutEventInput = {
    where: VolunteerScalarWhereInput
    data: XOR<VolunteerUpdateManyMutationInput, VolunteerUncheckedUpdateManyWithoutVolunteerInput>
  }

  export type IncentiveUpsertWithWhereUniqueWithoutEventInput = {
    where: IncentiveWhereUniqueInput
    update: XOR<IncentiveUpdateWithoutEventInput, IncentiveUncheckedUpdateWithoutEventInput>
    create: XOR<IncentiveCreateWithoutEventInput, IncentiveUncheckedCreateWithoutEventInput>
  }

  export type IncentiveUpdateWithWhereUniqueWithoutEventInput = {
    where: IncentiveWhereUniqueInput
    data: XOR<IncentiveUpdateWithoutEventInput, IncentiveUncheckedUpdateWithoutEventInput>
  }

  export type IncentiveUpdateManyWithWhereWithoutEventInput = {
    where: IncentiveScalarWhereInput
    data: XOR<IncentiveUpdateManyMutationInput, IncentiveUncheckedUpdateManyWithoutDonationIncentivesInput>
  }

  export type IncentiveScalarWhereInput = {
    AND?: Enumerable<IncentiveScalarWhereInput>
    OR?: Enumerable<IncentiveScalarWhereInput>
    NOT?: Enumerable<IncentiveScalarWhereInput>
    id?: StringFilter | string
    runId?: StringNullableFilter | string | null
    eventId?: StringNullableFilter | string | null
    title?: StringFilter | string
    notes?: StringFilter | string
    type?: StringFilter | string
    data?: JsonNullableFilter
    active?: BoolFilter | boolean
  }

  export type PostUpsertWithWhereUniqueWithoutEventInput = {
    where: PostWhereUniqueInput
    update: XOR<PostUpdateWithoutEventInput, PostUncheckedUpdateWithoutEventInput>
    create: XOR<PostCreateWithoutEventInput, PostUncheckedCreateWithoutEventInput>
  }

  export type PostUpdateWithWhereUniqueWithoutEventInput = {
    where: PostWhereUniqueInput
    data: XOR<PostUpdateWithoutEventInput, PostUncheckedUpdateWithoutEventInput>
  }

  export type PostUpdateManyWithWhereWithoutEventInput = {
    where: PostScalarWhereInput
    data: XOR<PostUpdateManyMutationInput, PostUncheckedUpdateManyWithoutFrom_Post_eventInput>
  }

  export type RoleUpsertWithWhereUniqueWithoutEventInput = {
    where: RoleWhereUniqueInput
    update: XOR<RoleUpdateWithoutEventInput, RoleUncheckedUpdateWithoutEventInput>
    create: XOR<RoleCreateWithoutEventInput, RoleUncheckedCreateWithoutEventInput>
  }

  export type RoleUpdateWithWhereUniqueWithoutEventInput = {
    where: RoleWhereUniqueInput
    data: XOR<RoleUpdateWithoutEventInput, RoleUncheckedUpdateWithoutEventInput>
  }

  export type RoleUpdateManyWithWhereWithoutEventInput = {
    where: RoleScalarWhereInput
    data: XOR<RoleUpdateManyMutationInput, RoleUncheckedUpdateManyWithoutFrom_Role_eventInput>
  }

  export type UserCreateWithoutRolesInput = {
    id?: string
    name?: string
    username?: string
    email?: string
    password: string
    accountCreated?: Date | string | null
    dateOfBirth?: Date | string | null
    pronouns?: string
    submissions?: SubmissionCreateNestedManyWithoutRunnerInput
    runs?: RunCreateNestedManyWithoutRunnersInput
    verified?: boolean
    state?: UserStateType | null
    sentVerification?: Date | string | null
    discord?: string
    twitter?: string
    twitch?: string
    tickets?: TicketCreateNestedManyWithoutUserInput
    volunteer?: VolunteerCreateNestedManyWithoutVolunteerInput
    shirts?: ShirtOrderCreateNestedManyWithoutUserInput
    passwordResetToken?: string | null
    passwordResetIssuedAt?: Date | string | null
    passwordResetRedeemedAt?: Date | string | null
    from_Post_author?: PostCreateNestedManyWithoutAuthorInput
  }

  export type UserUncheckedCreateWithoutRolesInput = {
    id?: string
    name?: string
    username?: string
    email?: string
    password: string
    accountCreated?: Date | string | null
    dateOfBirth?: Date | string | null
    pronouns?: string
    submissions?: SubmissionUncheckedCreateNestedManyWithoutRunnerInput
    runs?: RunUncheckedCreateNestedManyWithoutRunnersInput
    verified?: boolean
    state?: UserStateType | null
    sentVerification?: Date | string | null
    discord?: string
    twitter?: string
    twitch?: string
    tickets?: TicketUncheckedCreateNestedManyWithoutUserInput
    volunteer?: VolunteerUncheckedCreateNestedManyWithoutVolunteerInput
    shirts?: ShirtOrderUncheckedCreateNestedManyWithoutUserInput
    passwordResetToken?: string | null
    passwordResetIssuedAt?: Date | string | null
    passwordResetRedeemedAt?: Date | string | null
    from_Post_author?: PostUncheckedCreateNestedManyWithoutAuthorInput
  }

  export type UserCreateOrConnectWithoutRolesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutRolesInput, UserUncheckedCreateWithoutRolesInput>
  }

  export type EventCreateWithoutFrom_Role_eventInput = {
    id?: string
    name?: string
    shortname?: string
    published?: boolean
    acceptingSubmissions?: boolean
    acceptingTickets?: boolean
    scheduleReleased?: boolean
    acceptingVolunteers?: boolean
    acceptingBackups?: boolean
    acceptingShirts?: boolean
    eventTimezone?: string
    startDate?: Date | string | null
    endDate?: Date | string | null
    raised?: number | null
    postEventPage?: JsonNullValueInput | InputJsonValue
    submissions?: SubmissionCreateNestedManyWithoutEventInput
    runs?: RunCreateNestedManyWithoutEventInput
    tickets?: TicketCreateNestedManyWithoutEventInput
    volunteer?: VolunteerCreateNestedManyWithoutEventInput
    donationIncentives?: IncentiveCreateNestedManyWithoutEventInput
    logo_filesize?: number | null
    logo_extension?: string | null
    logo_width?: number | null
    logo_height?: number | null
    logo_id?: string | null
    darkModeLogo_filesize?: number | null
    darkModeLogo_extension?: string | null
    darkModeLogo_width?: number | null
    darkModeLogo_height?: number | null
    darkModeLogo_id?: string | null
    heroImage_filesize?: number | null
    heroImage_extension?: string | null
    heroImage_width?: number | null
    heroImage_height?: number | null
    heroImage_id?: string | null
    ogImage_filesize?: number | null
    ogImage_extension?: string | null
    ogImage_width?: number | null
    ogImage_height?: number | null
    ogImage_id?: string | null
    postEventBackground_filesize?: number | null
    postEventBackground_extension?: string | null
    postEventBackground_width?: number | null
    postEventBackground_height?: number | null
    postEventBackground_id?: string | null
    pressKit_filename?: string | null
    pressKit_filesize?: number | null
    submissionInstructions?: JsonNullValueInput | InputJsonValue
    eventPage?: JsonNullValueInput | InputJsonValue
    from_Post_event?: PostCreateNestedManyWithoutEventInput
  }

  export type EventUncheckedCreateWithoutFrom_Role_eventInput = {
    id?: string
    name?: string
    shortname?: string
    published?: boolean
    acceptingSubmissions?: boolean
    acceptingTickets?: boolean
    scheduleReleased?: boolean
    acceptingVolunteers?: boolean
    acceptingBackups?: boolean
    acceptingShirts?: boolean
    eventTimezone?: string
    startDate?: Date | string | null
    endDate?: Date | string | null
    raised?: number | null
    postEventPage?: JsonNullValueInput | InputJsonValue
    submissions?: SubmissionUncheckedCreateNestedManyWithoutEventInput
    runs?: RunUncheckedCreateNestedManyWithoutEventInput
    tickets?: TicketUncheckedCreateNestedManyWithoutEventInput
    volunteer?: VolunteerUncheckedCreateNestedManyWithoutEventInput
    donationIncentives?: IncentiveUncheckedCreateNestedManyWithoutEventInput
    logo_filesize?: number | null
    logo_extension?: string | null
    logo_width?: number | null
    logo_height?: number | null
    logo_id?: string | null
    darkModeLogo_filesize?: number | null
    darkModeLogo_extension?: string | null
    darkModeLogo_width?: number | null
    darkModeLogo_height?: number | null
    darkModeLogo_id?: string | null
    heroImage_filesize?: number | null
    heroImage_extension?: string | null
    heroImage_width?: number | null
    heroImage_height?: number | null
    heroImage_id?: string | null
    ogImage_filesize?: number | null
    ogImage_extension?: string | null
    ogImage_width?: number | null
    ogImage_height?: number | null
    ogImage_id?: string | null
    postEventBackground_filesize?: number | null
    postEventBackground_extension?: string | null
    postEventBackground_width?: number | null
    postEventBackground_height?: number | null
    postEventBackground_id?: string | null
    pressKit_filename?: string | null
    pressKit_filesize?: number | null
    submissionInstructions?: JsonNullValueInput | InputJsonValue
    eventPage?: JsonNullValueInput | InputJsonValue
    from_Post_event?: PostUncheckedCreateNestedManyWithoutEventInput
  }

  export type EventCreateOrConnectWithoutFrom_Role_eventInput = {
    where: EventWhereUniqueInput
    create: XOR<EventCreateWithoutFrom_Role_eventInput, EventUncheckedCreateWithoutFrom_Role_eventInput>
  }

  export type UserUpsertWithWhereUniqueWithoutRolesInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutRolesInput, UserUncheckedUpdateWithoutRolesInput>
    create: XOR<UserCreateWithoutRolesInput, UserUncheckedCreateWithoutRolesInput>
  }

  export type UserUpdateWithWhereUniqueWithoutRolesInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutRolesInput, UserUncheckedUpdateWithoutRolesInput>
  }

  export type UserUpdateManyWithWhereWithoutRolesInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutUsersInput>
  }

  export type EventUpsertWithoutFrom_Role_eventInput = {
    update: XOR<EventUpdateWithoutFrom_Role_eventInput, EventUncheckedUpdateWithoutFrom_Role_eventInput>
    create: XOR<EventCreateWithoutFrom_Role_eventInput, EventUncheckedCreateWithoutFrom_Role_eventInput>
  }

  export type EventUpdateWithoutFrom_Role_eventInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    shortname?: StringFieldUpdateOperationsInput | string
    published?: BoolFieldUpdateOperationsInput | boolean
    acceptingSubmissions?: BoolFieldUpdateOperationsInput | boolean
    acceptingTickets?: BoolFieldUpdateOperationsInput | boolean
    scheduleReleased?: BoolFieldUpdateOperationsInput | boolean
    acceptingVolunteers?: BoolFieldUpdateOperationsInput | boolean
    acceptingBackups?: BoolFieldUpdateOperationsInput | boolean
    acceptingShirts?: BoolFieldUpdateOperationsInput | boolean
    eventTimezone?: StringFieldUpdateOperationsInput | string
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raised?: NullableFloatFieldUpdateOperationsInput | number | null
    postEventPage?: JsonNullValueInput | InputJsonValue
    submissions?: SubmissionUpdateManyWithoutEventNestedInput
    runs?: RunUpdateManyWithoutEventNestedInput
    tickets?: TicketUpdateManyWithoutEventNestedInput
    volunteer?: VolunteerUpdateManyWithoutEventNestedInput
    donationIncentives?: IncentiveUpdateManyWithoutEventNestedInput
    logo_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    logo_extension?: NullableStringFieldUpdateOperationsInput | string | null
    logo_width?: NullableIntFieldUpdateOperationsInput | number | null
    logo_height?: NullableIntFieldUpdateOperationsInput | number | null
    logo_id?: NullableStringFieldUpdateOperationsInput | string | null
    darkModeLogo_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_extension?: NullableStringFieldUpdateOperationsInput | string | null
    darkModeLogo_width?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_height?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_id?: NullableStringFieldUpdateOperationsInput | string | null
    heroImage_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_extension?: NullableStringFieldUpdateOperationsInput | string | null
    heroImage_width?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_height?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_id?: NullableStringFieldUpdateOperationsInput | string | null
    ogImage_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_extension?: NullableStringFieldUpdateOperationsInput | string | null
    ogImage_width?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_height?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_id?: NullableStringFieldUpdateOperationsInput | string | null
    postEventBackground_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_extension?: NullableStringFieldUpdateOperationsInput | string | null
    postEventBackground_width?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_height?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_id?: NullableStringFieldUpdateOperationsInput | string | null
    pressKit_filename?: NullableStringFieldUpdateOperationsInput | string | null
    pressKit_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    submissionInstructions?: JsonNullValueInput | InputJsonValue
    eventPage?: JsonNullValueInput | InputJsonValue
    from_Post_event?: PostUpdateManyWithoutEventNestedInput
  }

  export type EventUncheckedUpdateWithoutFrom_Role_eventInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    shortname?: StringFieldUpdateOperationsInput | string
    published?: BoolFieldUpdateOperationsInput | boolean
    acceptingSubmissions?: BoolFieldUpdateOperationsInput | boolean
    acceptingTickets?: BoolFieldUpdateOperationsInput | boolean
    scheduleReleased?: BoolFieldUpdateOperationsInput | boolean
    acceptingVolunteers?: BoolFieldUpdateOperationsInput | boolean
    acceptingBackups?: BoolFieldUpdateOperationsInput | boolean
    acceptingShirts?: BoolFieldUpdateOperationsInput | boolean
    eventTimezone?: StringFieldUpdateOperationsInput | string
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raised?: NullableFloatFieldUpdateOperationsInput | number | null
    postEventPage?: JsonNullValueInput | InputJsonValue
    submissions?: SubmissionUncheckedUpdateManyWithoutEventNestedInput
    runs?: RunUncheckedUpdateManyWithoutEventNestedInput
    tickets?: TicketUncheckedUpdateManyWithoutEventNestedInput
    volunteer?: VolunteerUncheckedUpdateManyWithoutEventNestedInput
    donationIncentives?: IncentiveUncheckedUpdateManyWithoutEventNestedInput
    logo_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    logo_extension?: NullableStringFieldUpdateOperationsInput | string | null
    logo_width?: NullableIntFieldUpdateOperationsInput | number | null
    logo_height?: NullableIntFieldUpdateOperationsInput | number | null
    logo_id?: NullableStringFieldUpdateOperationsInput | string | null
    darkModeLogo_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_extension?: NullableStringFieldUpdateOperationsInput | string | null
    darkModeLogo_width?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_height?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_id?: NullableStringFieldUpdateOperationsInput | string | null
    heroImage_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_extension?: NullableStringFieldUpdateOperationsInput | string | null
    heroImage_width?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_height?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_id?: NullableStringFieldUpdateOperationsInput | string | null
    ogImage_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_extension?: NullableStringFieldUpdateOperationsInput | string | null
    ogImage_width?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_height?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_id?: NullableStringFieldUpdateOperationsInput | string | null
    postEventBackground_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_extension?: NullableStringFieldUpdateOperationsInput | string | null
    postEventBackground_width?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_height?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_id?: NullableStringFieldUpdateOperationsInput | string | null
    pressKit_filename?: NullableStringFieldUpdateOperationsInput | string | null
    pressKit_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    submissionInstructions?: JsonNullValueInput | InputJsonValue
    eventPage?: JsonNullValueInput | InputJsonValue
    from_Post_event?: PostUncheckedUpdateManyWithoutEventNestedInput
  }

  export type UserCreateWithoutRunsInput = {
    id?: string
    name?: string
    username?: string
    email?: string
    password: string
    accountCreated?: Date | string | null
    dateOfBirth?: Date | string | null
    pronouns?: string
    submissions?: SubmissionCreateNestedManyWithoutRunnerInput
    roles?: RoleCreateNestedManyWithoutUsersInput
    verified?: boolean
    state?: UserStateType | null
    sentVerification?: Date | string | null
    discord?: string
    twitter?: string
    twitch?: string
    tickets?: TicketCreateNestedManyWithoutUserInput
    volunteer?: VolunteerCreateNestedManyWithoutVolunteerInput
    shirts?: ShirtOrderCreateNestedManyWithoutUserInput
    passwordResetToken?: string | null
    passwordResetIssuedAt?: Date | string | null
    passwordResetRedeemedAt?: Date | string | null
    from_Post_author?: PostCreateNestedManyWithoutAuthorInput
  }

  export type UserUncheckedCreateWithoutRunsInput = {
    id?: string
    name?: string
    username?: string
    email?: string
    password: string
    accountCreated?: Date | string | null
    dateOfBirth?: Date | string | null
    pronouns?: string
    submissions?: SubmissionUncheckedCreateNestedManyWithoutRunnerInput
    roles?: RoleUncheckedCreateNestedManyWithoutUsersInput
    verified?: boolean
    state?: UserStateType | null
    sentVerification?: Date | string | null
    discord?: string
    twitter?: string
    twitch?: string
    tickets?: TicketUncheckedCreateNestedManyWithoutUserInput
    volunteer?: VolunteerUncheckedCreateNestedManyWithoutVolunteerInput
    shirts?: ShirtOrderUncheckedCreateNestedManyWithoutUserInput
    passwordResetToken?: string | null
    passwordResetIssuedAt?: Date | string | null
    passwordResetRedeemedAt?: Date | string | null
    from_Post_author?: PostUncheckedCreateNestedManyWithoutAuthorInput
  }

  export type UserCreateOrConnectWithoutRunsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutRunsInput, UserUncheckedCreateWithoutRunsInput>
  }

  export type SubmissionCreateWithoutFrom_Run_originalSubmissionInput = {
    id?: string
    runner?: UserCreateNestedOneWithoutSubmissionsInput
    created?: Date | string | null
    game?: string
    category?: string
    platform?: string
    estimate?: string
    ageRating?: SubmissionAgeRatingType | null
    donationIncentive?: string
    specialReqs?: string
    availability?: NullableJsonNullValueInput | InputJsonValue
    race?: SubmissionRaceType | null
    racer?: string
    coop?: boolean
    video?: string
    status?: SubmissionStatusType | null
    event?: EventCreateNestedOneWithoutSubmissionsInput
    willingBackup?: boolean
  }

  export type SubmissionUncheckedCreateWithoutFrom_Run_originalSubmissionInput = {
    id?: string
    runnerId?: string | null
    created?: Date | string | null
    game?: string
    category?: string
    platform?: string
    estimate?: string
    ageRating?: SubmissionAgeRatingType | null
    donationIncentive?: string
    specialReqs?: string
    availability?: NullableJsonNullValueInput | InputJsonValue
    race?: SubmissionRaceType | null
    racer?: string
    coop?: boolean
    video?: string
    status?: SubmissionStatusType | null
    eventId?: string | null
    willingBackup?: boolean
  }

  export type SubmissionCreateOrConnectWithoutFrom_Run_originalSubmissionInput = {
    where: SubmissionWhereUniqueInput
    create: XOR<SubmissionCreateWithoutFrom_Run_originalSubmissionInput, SubmissionUncheckedCreateWithoutFrom_Run_originalSubmissionInput>
  }

  export type EventCreateWithoutRunsInput = {
    id?: string
    name?: string
    shortname?: string
    published?: boolean
    acceptingSubmissions?: boolean
    acceptingTickets?: boolean
    scheduleReleased?: boolean
    acceptingVolunteers?: boolean
    acceptingBackups?: boolean
    acceptingShirts?: boolean
    eventTimezone?: string
    startDate?: Date | string | null
    endDate?: Date | string | null
    raised?: number | null
    postEventPage?: JsonNullValueInput | InputJsonValue
    submissions?: SubmissionCreateNestedManyWithoutEventInput
    tickets?: TicketCreateNestedManyWithoutEventInput
    volunteer?: VolunteerCreateNestedManyWithoutEventInput
    donationIncentives?: IncentiveCreateNestedManyWithoutEventInput
    logo_filesize?: number | null
    logo_extension?: string | null
    logo_width?: number | null
    logo_height?: number | null
    logo_id?: string | null
    darkModeLogo_filesize?: number | null
    darkModeLogo_extension?: string | null
    darkModeLogo_width?: number | null
    darkModeLogo_height?: number | null
    darkModeLogo_id?: string | null
    heroImage_filesize?: number | null
    heroImage_extension?: string | null
    heroImage_width?: number | null
    heroImage_height?: number | null
    heroImage_id?: string | null
    ogImage_filesize?: number | null
    ogImage_extension?: string | null
    ogImage_width?: number | null
    ogImage_height?: number | null
    ogImage_id?: string | null
    postEventBackground_filesize?: number | null
    postEventBackground_extension?: string | null
    postEventBackground_width?: number | null
    postEventBackground_height?: number | null
    postEventBackground_id?: string | null
    pressKit_filename?: string | null
    pressKit_filesize?: number | null
    submissionInstructions?: JsonNullValueInput | InputJsonValue
    eventPage?: JsonNullValueInput | InputJsonValue
    from_Post_event?: PostCreateNestedManyWithoutEventInput
    from_Role_event?: RoleCreateNestedManyWithoutEventInput
  }

  export type EventUncheckedCreateWithoutRunsInput = {
    id?: string
    name?: string
    shortname?: string
    published?: boolean
    acceptingSubmissions?: boolean
    acceptingTickets?: boolean
    scheduleReleased?: boolean
    acceptingVolunteers?: boolean
    acceptingBackups?: boolean
    acceptingShirts?: boolean
    eventTimezone?: string
    startDate?: Date | string | null
    endDate?: Date | string | null
    raised?: number | null
    postEventPage?: JsonNullValueInput | InputJsonValue
    submissions?: SubmissionUncheckedCreateNestedManyWithoutEventInput
    tickets?: TicketUncheckedCreateNestedManyWithoutEventInput
    volunteer?: VolunteerUncheckedCreateNestedManyWithoutEventInput
    donationIncentives?: IncentiveUncheckedCreateNestedManyWithoutEventInput
    logo_filesize?: number | null
    logo_extension?: string | null
    logo_width?: number | null
    logo_height?: number | null
    logo_id?: string | null
    darkModeLogo_filesize?: number | null
    darkModeLogo_extension?: string | null
    darkModeLogo_width?: number | null
    darkModeLogo_height?: number | null
    darkModeLogo_id?: string | null
    heroImage_filesize?: number | null
    heroImage_extension?: string | null
    heroImage_width?: number | null
    heroImage_height?: number | null
    heroImage_id?: string | null
    ogImage_filesize?: number | null
    ogImage_extension?: string | null
    ogImage_width?: number | null
    ogImage_height?: number | null
    ogImage_id?: string | null
    postEventBackground_filesize?: number | null
    postEventBackground_extension?: string | null
    postEventBackground_width?: number | null
    postEventBackground_height?: number | null
    postEventBackground_id?: string | null
    pressKit_filename?: string | null
    pressKit_filesize?: number | null
    submissionInstructions?: JsonNullValueInput | InputJsonValue
    eventPage?: JsonNullValueInput | InputJsonValue
    from_Post_event?: PostUncheckedCreateNestedManyWithoutEventInput
    from_Role_event?: RoleUncheckedCreateNestedManyWithoutEventInput
  }

  export type EventCreateOrConnectWithoutRunsInput = {
    where: EventWhereUniqueInput
    create: XOR<EventCreateWithoutRunsInput, EventUncheckedCreateWithoutRunsInput>
  }

  export type IncentiveCreateWithoutRunInput = {
    id?: string
    event?: EventCreateNestedOneWithoutDonationIncentivesInput
    title?: string
    notes?: string
    type?: string
    data?: NullableJsonNullValueInput | InputJsonValue
    active?: boolean
  }

  export type IncentiveUncheckedCreateWithoutRunInput = {
    id?: string
    eventId?: string | null
    title?: string
    notes?: string
    type?: string
    data?: NullableJsonNullValueInput | InputJsonValue
    active?: boolean
  }

  export type IncentiveCreateOrConnectWithoutRunInput = {
    where: IncentiveWhereUniqueInput
    create: XOR<IncentiveCreateWithoutRunInput, IncentiveUncheckedCreateWithoutRunInput>
  }

  export type IncentiveCreateManyRunInputEnvelope = {
    data: Enumerable<IncentiveCreateManyRunInput>
    skipDuplicates?: boolean
  }

  export type UserUpsertWithWhereUniqueWithoutRunsInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutRunsInput, UserUncheckedUpdateWithoutRunsInput>
    create: XOR<UserCreateWithoutRunsInput, UserUncheckedCreateWithoutRunsInput>
  }

  export type UserUpdateWithWhereUniqueWithoutRunsInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutRunsInput, UserUncheckedUpdateWithoutRunsInput>
  }

  export type UserUpdateManyWithWhereWithoutRunsInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutRunnersInput>
  }

  export type SubmissionUpsertWithoutFrom_Run_originalSubmissionInput = {
    update: XOR<SubmissionUpdateWithoutFrom_Run_originalSubmissionInput, SubmissionUncheckedUpdateWithoutFrom_Run_originalSubmissionInput>
    create: XOR<SubmissionCreateWithoutFrom_Run_originalSubmissionInput, SubmissionUncheckedCreateWithoutFrom_Run_originalSubmissionInput>
  }

  export type SubmissionUpdateWithoutFrom_Run_originalSubmissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    runner?: UserUpdateOneWithoutSubmissionsNestedInput
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    game?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    platform?: StringFieldUpdateOperationsInput | string
    estimate?: StringFieldUpdateOperationsInput | string
    ageRating?: NullableEnumSubmissionAgeRatingTypeFieldUpdateOperationsInput | SubmissionAgeRatingType | null
    donationIncentive?: StringFieldUpdateOperationsInput | string
    specialReqs?: StringFieldUpdateOperationsInput | string
    availability?: NullableJsonNullValueInput | InputJsonValue
    race?: NullableEnumSubmissionRaceTypeFieldUpdateOperationsInput | SubmissionRaceType | null
    racer?: StringFieldUpdateOperationsInput | string
    coop?: BoolFieldUpdateOperationsInput | boolean
    video?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumSubmissionStatusTypeFieldUpdateOperationsInput | SubmissionStatusType | null
    event?: EventUpdateOneWithoutSubmissionsNestedInput
    willingBackup?: BoolFieldUpdateOperationsInput | boolean
  }

  export type SubmissionUncheckedUpdateWithoutFrom_Run_originalSubmissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    runnerId?: NullableStringFieldUpdateOperationsInput | string | null
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    game?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    platform?: StringFieldUpdateOperationsInput | string
    estimate?: StringFieldUpdateOperationsInput | string
    ageRating?: NullableEnumSubmissionAgeRatingTypeFieldUpdateOperationsInput | SubmissionAgeRatingType | null
    donationIncentive?: StringFieldUpdateOperationsInput | string
    specialReqs?: StringFieldUpdateOperationsInput | string
    availability?: NullableJsonNullValueInput | InputJsonValue
    race?: NullableEnumSubmissionRaceTypeFieldUpdateOperationsInput | SubmissionRaceType | null
    racer?: StringFieldUpdateOperationsInput | string
    coop?: BoolFieldUpdateOperationsInput | boolean
    video?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumSubmissionStatusTypeFieldUpdateOperationsInput | SubmissionStatusType | null
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
    willingBackup?: BoolFieldUpdateOperationsInput | boolean
  }

  export type EventUpsertWithoutRunsInput = {
    update: XOR<EventUpdateWithoutRunsInput, EventUncheckedUpdateWithoutRunsInput>
    create: XOR<EventCreateWithoutRunsInput, EventUncheckedCreateWithoutRunsInput>
  }

  export type EventUpdateWithoutRunsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    shortname?: StringFieldUpdateOperationsInput | string
    published?: BoolFieldUpdateOperationsInput | boolean
    acceptingSubmissions?: BoolFieldUpdateOperationsInput | boolean
    acceptingTickets?: BoolFieldUpdateOperationsInput | boolean
    scheduleReleased?: BoolFieldUpdateOperationsInput | boolean
    acceptingVolunteers?: BoolFieldUpdateOperationsInput | boolean
    acceptingBackups?: BoolFieldUpdateOperationsInput | boolean
    acceptingShirts?: BoolFieldUpdateOperationsInput | boolean
    eventTimezone?: StringFieldUpdateOperationsInput | string
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raised?: NullableFloatFieldUpdateOperationsInput | number | null
    postEventPage?: JsonNullValueInput | InputJsonValue
    submissions?: SubmissionUpdateManyWithoutEventNestedInput
    tickets?: TicketUpdateManyWithoutEventNestedInput
    volunteer?: VolunteerUpdateManyWithoutEventNestedInput
    donationIncentives?: IncentiveUpdateManyWithoutEventNestedInput
    logo_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    logo_extension?: NullableStringFieldUpdateOperationsInput | string | null
    logo_width?: NullableIntFieldUpdateOperationsInput | number | null
    logo_height?: NullableIntFieldUpdateOperationsInput | number | null
    logo_id?: NullableStringFieldUpdateOperationsInput | string | null
    darkModeLogo_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_extension?: NullableStringFieldUpdateOperationsInput | string | null
    darkModeLogo_width?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_height?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_id?: NullableStringFieldUpdateOperationsInput | string | null
    heroImage_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_extension?: NullableStringFieldUpdateOperationsInput | string | null
    heroImage_width?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_height?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_id?: NullableStringFieldUpdateOperationsInput | string | null
    ogImage_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_extension?: NullableStringFieldUpdateOperationsInput | string | null
    ogImage_width?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_height?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_id?: NullableStringFieldUpdateOperationsInput | string | null
    postEventBackground_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_extension?: NullableStringFieldUpdateOperationsInput | string | null
    postEventBackground_width?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_height?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_id?: NullableStringFieldUpdateOperationsInput | string | null
    pressKit_filename?: NullableStringFieldUpdateOperationsInput | string | null
    pressKit_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    submissionInstructions?: JsonNullValueInput | InputJsonValue
    eventPage?: JsonNullValueInput | InputJsonValue
    from_Post_event?: PostUpdateManyWithoutEventNestedInput
    from_Role_event?: RoleUpdateManyWithoutEventNestedInput
  }

  export type EventUncheckedUpdateWithoutRunsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    shortname?: StringFieldUpdateOperationsInput | string
    published?: BoolFieldUpdateOperationsInput | boolean
    acceptingSubmissions?: BoolFieldUpdateOperationsInput | boolean
    acceptingTickets?: BoolFieldUpdateOperationsInput | boolean
    scheduleReleased?: BoolFieldUpdateOperationsInput | boolean
    acceptingVolunteers?: BoolFieldUpdateOperationsInput | boolean
    acceptingBackups?: BoolFieldUpdateOperationsInput | boolean
    acceptingShirts?: BoolFieldUpdateOperationsInput | boolean
    eventTimezone?: StringFieldUpdateOperationsInput | string
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raised?: NullableFloatFieldUpdateOperationsInput | number | null
    postEventPage?: JsonNullValueInput | InputJsonValue
    submissions?: SubmissionUncheckedUpdateManyWithoutEventNestedInput
    tickets?: TicketUncheckedUpdateManyWithoutEventNestedInput
    volunteer?: VolunteerUncheckedUpdateManyWithoutEventNestedInput
    donationIncentives?: IncentiveUncheckedUpdateManyWithoutEventNestedInput
    logo_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    logo_extension?: NullableStringFieldUpdateOperationsInput | string | null
    logo_width?: NullableIntFieldUpdateOperationsInput | number | null
    logo_height?: NullableIntFieldUpdateOperationsInput | number | null
    logo_id?: NullableStringFieldUpdateOperationsInput | string | null
    darkModeLogo_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_extension?: NullableStringFieldUpdateOperationsInput | string | null
    darkModeLogo_width?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_height?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_id?: NullableStringFieldUpdateOperationsInput | string | null
    heroImage_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_extension?: NullableStringFieldUpdateOperationsInput | string | null
    heroImage_width?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_height?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_id?: NullableStringFieldUpdateOperationsInput | string | null
    ogImage_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_extension?: NullableStringFieldUpdateOperationsInput | string | null
    ogImage_width?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_height?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_id?: NullableStringFieldUpdateOperationsInput | string | null
    postEventBackground_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_extension?: NullableStringFieldUpdateOperationsInput | string | null
    postEventBackground_width?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_height?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_id?: NullableStringFieldUpdateOperationsInput | string | null
    pressKit_filename?: NullableStringFieldUpdateOperationsInput | string | null
    pressKit_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    submissionInstructions?: JsonNullValueInput | InputJsonValue
    eventPage?: JsonNullValueInput | InputJsonValue
    from_Post_event?: PostUncheckedUpdateManyWithoutEventNestedInput
    from_Role_event?: RoleUncheckedUpdateManyWithoutEventNestedInput
  }

  export type IncentiveUpsertWithWhereUniqueWithoutRunInput = {
    where: IncentiveWhereUniqueInput
    update: XOR<IncentiveUpdateWithoutRunInput, IncentiveUncheckedUpdateWithoutRunInput>
    create: XOR<IncentiveCreateWithoutRunInput, IncentiveUncheckedCreateWithoutRunInput>
  }

  export type IncentiveUpdateWithWhereUniqueWithoutRunInput = {
    where: IncentiveWhereUniqueInput
    data: XOR<IncentiveUpdateWithoutRunInput, IncentiveUncheckedUpdateWithoutRunInput>
  }

  export type IncentiveUpdateManyWithWhereWithoutRunInput = {
    where: IncentiveScalarWhereInput
    data: XOR<IncentiveUpdateManyMutationInput, IncentiveUncheckedUpdateManyWithoutDonationIncentiveObjectInput>
  }

  export type UserCreateWithoutTicketsInput = {
    id?: string
    name?: string
    username?: string
    email?: string
    password: string
    accountCreated?: Date | string | null
    dateOfBirth?: Date | string | null
    pronouns?: string
    submissions?: SubmissionCreateNestedManyWithoutRunnerInput
    roles?: RoleCreateNestedManyWithoutUsersInput
    runs?: RunCreateNestedManyWithoutRunnersInput
    verified?: boolean
    state?: UserStateType | null
    sentVerification?: Date | string | null
    discord?: string
    twitter?: string
    twitch?: string
    volunteer?: VolunteerCreateNestedManyWithoutVolunteerInput
    shirts?: ShirtOrderCreateNestedManyWithoutUserInput
    passwordResetToken?: string | null
    passwordResetIssuedAt?: Date | string | null
    passwordResetRedeemedAt?: Date | string | null
    from_Post_author?: PostCreateNestedManyWithoutAuthorInput
  }

  export type UserUncheckedCreateWithoutTicketsInput = {
    id?: string
    name?: string
    username?: string
    email?: string
    password: string
    accountCreated?: Date | string | null
    dateOfBirth?: Date | string | null
    pronouns?: string
    submissions?: SubmissionUncheckedCreateNestedManyWithoutRunnerInput
    roles?: RoleUncheckedCreateNestedManyWithoutUsersInput
    runs?: RunUncheckedCreateNestedManyWithoutRunnersInput
    verified?: boolean
    state?: UserStateType | null
    sentVerification?: Date | string | null
    discord?: string
    twitter?: string
    twitch?: string
    volunteer?: VolunteerUncheckedCreateNestedManyWithoutVolunteerInput
    shirts?: ShirtOrderUncheckedCreateNestedManyWithoutUserInput
    passwordResetToken?: string | null
    passwordResetIssuedAt?: Date | string | null
    passwordResetRedeemedAt?: Date | string | null
    from_Post_author?: PostUncheckedCreateNestedManyWithoutAuthorInput
  }

  export type UserCreateOrConnectWithoutTicketsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutTicketsInput, UserUncheckedCreateWithoutTicketsInput>
  }

  export type EventCreateWithoutTicketsInput = {
    id?: string
    name?: string
    shortname?: string
    published?: boolean
    acceptingSubmissions?: boolean
    acceptingTickets?: boolean
    scheduleReleased?: boolean
    acceptingVolunteers?: boolean
    acceptingBackups?: boolean
    acceptingShirts?: boolean
    eventTimezone?: string
    startDate?: Date | string | null
    endDate?: Date | string | null
    raised?: number | null
    postEventPage?: JsonNullValueInput | InputJsonValue
    submissions?: SubmissionCreateNestedManyWithoutEventInput
    runs?: RunCreateNestedManyWithoutEventInput
    volunteer?: VolunteerCreateNestedManyWithoutEventInput
    donationIncentives?: IncentiveCreateNestedManyWithoutEventInput
    logo_filesize?: number | null
    logo_extension?: string | null
    logo_width?: number | null
    logo_height?: number | null
    logo_id?: string | null
    darkModeLogo_filesize?: number | null
    darkModeLogo_extension?: string | null
    darkModeLogo_width?: number | null
    darkModeLogo_height?: number | null
    darkModeLogo_id?: string | null
    heroImage_filesize?: number | null
    heroImage_extension?: string | null
    heroImage_width?: number | null
    heroImage_height?: number | null
    heroImage_id?: string | null
    ogImage_filesize?: number | null
    ogImage_extension?: string | null
    ogImage_width?: number | null
    ogImage_height?: number | null
    ogImage_id?: string | null
    postEventBackground_filesize?: number | null
    postEventBackground_extension?: string | null
    postEventBackground_width?: number | null
    postEventBackground_height?: number | null
    postEventBackground_id?: string | null
    pressKit_filename?: string | null
    pressKit_filesize?: number | null
    submissionInstructions?: JsonNullValueInput | InputJsonValue
    eventPage?: JsonNullValueInput | InputJsonValue
    from_Post_event?: PostCreateNestedManyWithoutEventInput
    from_Role_event?: RoleCreateNestedManyWithoutEventInput
  }

  export type EventUncheckedCreateWithoutTicketsInput = {
    id?: string
    name?: string
    shortname?: string
    published?: boolean
    acceptingSubmissions?: boolean
    acceptingTickets?: boolean
    scheduleReleased?: boolean
    acceptingVolunteers?: boolean
    acceptingBackups?: boolean
    acceptingShirts?: boolean
    eventTimezone?: string
    startDate?: Date | string | null
    endDate?: Date | string | null
    raised?: number | null
    postEventPage?: JsonNullValueInput | InputJsonValue
    submissions?: SubmissionUncheckedCreateNestedManyWithoutEventInput
    runs?: RunUncheckedCreateNestedManyWithoutEventInput
    volunteer?: VolunteerUncheckedCreateNestedManyWithoutEventInput
    donationIncentives?: IncentiveUncheckedCreateNestedManyWithoutEventInput
    logo_filesize?: number | null
    logo_extension?: string | null
    logo_width?: number | null
    logo_height?: number | null
    logo_id?: string | null
    darkModeLogo_filesize?: number | null
    darkModeLogo_extension?: string | null
    darkModeLogo_width?: number | null
    darkModeLogo_height?: number | null
    darkModeLogo_id?: string | null
    heroImage_filesize?: number | null
    heroImage_extension?: string | null
    heroImage_width?: number | null
    heroImage_height?: number | null
    heroImage_id?: string | null
    ogImage_filesize?: number | null
    ogImage_extension?: string | null
    ogImage_width?: number | null
    ogImage_height?: number | null
    ogImage_id?: string | null
    postEventBackground_filesize?: number | null
    postEventBackground_extension?: string | null
    postEventBackground_width?: number | null
    postEventBackground_height?: number | null
    postEventBackground_id?: string | null
    pressKit_filename?: string | null
    pressKit_filesize?: number | null
    submissionInstructions?: JsonNullValueInput | InputJsonValue
    eventPage?: JsonNullValueInput | InputJsonValue
    from_Post_event?: PostUncheckedCreateNestedManyWithoutEventInput
    from_Role_event?: RoleUncheckedCreateNestedManyWithoutEventInput
  }

  export type EventCreateOrConnectWithoutTicketsInput = {
    where: EventWhereUniqueInput
    create: XOR<EventCreateWithoutTicketsInput, EventUncheckedCreateWithoutTicketsInput>
  }

  export type UserUpsertWithoutTicketsInput = {
    update: XOR<UserUpdateWithoutTicketsInput, UserUncheckedUpdateWithoutTicketsInput>
    create: XOR<UserCreateWithoutTicketsInput, UserUncheckedCreateWithoutTicketsInput>
  }

  export type UserUpdateWithoutTicketsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    accountCreated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pronouns?: StringFieldUpdateOperationsInput | string
    submissions?: SubmissionUpdateManyWithoutRunnerNestedInput
    roles?: RoleUpdateManyWithoutUsersNestedInput
    runs?: RunUpdateManyWithoutRunnersNestedInput
    verified?: BoolFieldUpdateOperationsInput | boolean
    state?: NullableEnumUserStateTypeFieldUpdateOperationsInput | UserStateType | null
    sentVerification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discord?: StringFieldUpdateOperationsInput | string
    twitter?: StringFieldUpdateOperationsInput | string
    twitch?: StringFieldUpdateOperationsInput | string
    volunteer?: VolunteerUpdateManyWithoutVolunteerNestedInput
    shirts?: ShirtOrderUpdateManyWithoutUserNestedInput
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetIssuedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordResetRedeemedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    from_Post_author?: PostUpdateManyWithoutAuthorNestedInput
  }

  export type UserUncheckedUpdateWithoutTicketsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    accountCreated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pronouns?: StringFieldUpdateOperationsInput | string
    submissions?: SubmissionUncheckedUpdateManyWithoutRunnerNestedInput
    roles?: RoleUncheckedUpdateManyWithoutUsersNestedInput
    runs?: RunUncheckedUpdateManyWithoutRunnersNestedInput
    verified?: BoolFieldUpdateOperationsInput | boolean
    state?: NullableEnumUserStateTypeFieldUpdateOperationsInput | UserStateType | null
    sentVerification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discord?: StringFieldUpdateOperationsInput | string
    twitter?: StringFieldUpdateOperationsInput | string
    twitch?: StringFieldUpdateOperationsInput | string
    volunteer?: VolunteerUncheckedUpdateManyWithoutVolunteerNestedInput
    shirts?: ShirtOrderUncheckedUpdateManyWithoutUserNestedInput
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetIssuedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordResetRedeemedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    from_Post_author?: PostUncheckedUpdateManyWithoutAuthorNestedInput
  }

  export type EventUpsertWithoutTicketsInput = {
    update: XOR<EventUpdateWithoutTicketsInput, EventUncheckedUpdateWithoutTicketsInput>
    create: XOR<EventCreateWithoutTicketsInput, EventUncheckedCreateWithoutTicketsInput>
  }

  export type EventUpdateWithoutTicketsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    shortname?: StringFieldUpdateOperationsInput | string
    published?: BoolFieldUpdateOperationsInput | boolean
    acceptingSubmissions?: BoolFieldUpdateOperationsInput | boolean
    acceptingTickets?: BoolFieldUpdateOperationsInput | boolean
    scheduleReleased?: BoolFieldUpdateOperationsInput | boolean
    acceptingVolunteers?: BoolFieldUpdateOperationsInput | boolean
    acceptingBackups?: BoolFieldUpdateOperationsInput | boolean
    acceptingShirts?: BoolFieldUpdateOperationsInput | boolean
    eventTimezone?: StringFieldUpdateOperationsInput | string
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raised?: NullableFloatFieldUpdateOperationsInput | number | null
    postEventPage?: JsonNullValueInput | InputJsonValue
    submissions?: SubmissionUpdateManyWithoutEventNestedInput
    runs?: RunUpdateManyWithoutEventNestedInput
    volunteer?: VolunteerUpdateManyWithoutEventNestedInput
    donationIncentives?: IncentiveUpdateManyWithoutEventNestedInput
    logo_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    logo_extension?: NullableStringFieldUpdateOperationsInput | string | null
    logo_width?: NullableIntFieldUpdateOperationsInput | number | null
    logo_height?: NullableIntFieldUpdateOperationsInput | number | null
    logo_id?: NullableStringFieldUpdateOperationsInput | string | null
    darkModeLogo_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_extension?: NullableStringFieldUpdateOperationsInput | string | null
    darkModeLogo_width?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_height?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_id?: NullableStringFieldUpdateOperationsInput | string | null
    heroImage_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_extension?: NullableStringFieldUpdateOperationsInput | string | null
    heroImage_width?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_height?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_id?: NullableStringFieldUpdateOperationsInput | string | null
    ogImage_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_extension?: NullableStringFieldUpdateOperationsInput | string | null
    ogImage_width?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_height?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_id?: NullableStringFieldUpdateOperationsInput | string | null
    postEventBackground_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_extension?: NullableStringFieldUpdateOperationsInput | string | null
    postEventBackground_width?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_height?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_id?: NullableStringFieldUpdateOperationsInput | string | null
    pressKit_filename?: NullableStringFieldUpdateOperationsInput | string | null
    pressKit_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    submissionInstructions?: JsonNullValueInput | InputJsonValue
    eventPage?: JsonNullValueInput | InputJsonValue
    from_Post_event?: PostUpdateManyWithoutEventNestedInput
    from_Role_event?: RoleUpdateManyWithoutEventNestedInput
  }

  export type EventUncheckedUpdateWithoutTicketsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    shortname?: StringFieldUpdateOperationsInput | string
    published?: BoolFieldUpdateOperationsInput | boolean
    acceptingSubmissions?: BoolFieldUpdateOperationsInput | boolean
    acceptingTickets?: BoolFieldUpdateOperationsInput | boolean
    scheduleReleased?: BoolFieldUpdateOperationsInput | boolean
    acceptingVolunteers?: BoolFieldUpdateOperationsInput | boolean
    acceptingBackups?: BoolFieldUpdateOperationsInput | boolean
    acceptingShirts?: BoolFieldUpdateOperationsInput | boolean
    eventTimezone?: StringFieldUpdateOperationsInput | string
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raised?: NullableFloatFieldUpdateOperationsInput | number | null
    postEventPage?: JsonNullValueInput | InputJsonValue
    submissions?: SubmissionUncheckedUpdateManyWithoutEventNestedInput
    runs?: RunUncheckedUpdateManyWithoutEventNestedInput
    volunteer?: VolunteerUncheckedUpdateManyWithoutEventNestedInput
    donationIncentives?: IncentiveUncheckedUpdateManyWithoutEventNestedInput
    logo_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    logo_extension?: NullableStringFieldUpdateOperationsInput | string | null
    logo_width?: NullableIntFieldUpdateOperationsInput | number | null
    logo_height?: NullableIntFieldUpdateOperationsInput | number | null
    logo_id?: NullableStringFieldUpdateOperationsInput | string | null
    darkModeLogo_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_extension?: NullableStringFieldUpdateOperationsInput | string | null
    darkModeLogo_width?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_height?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_id?: NullableStringFieldUpdateOperationsInput | string | null
    heroImage_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_extension?: NullableStringFieldUpdateOperationsInput | string | null
    heroImage_width?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_height?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_id?: NullableStringFieldUpdateOperationsInput | string | null
    ogImage_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_extension?: NullableStringFieldUpdateOperationsInput | string | null
    ogImage_width?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_height?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_id?: NullableStringFieldUpdateOperationsInput | string | null
    postEventBackground_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_extension?: NullableStringFieldUpdateOperationsInput | string | null
    postEventBackground_width?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_height?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_id?: NullableStringFieldUpdateOperationsInput | string | null
    pressKit_filename?: NullableStringFieldUpdateOperationsInput | string | null
    pressKit_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    submissionInstructions?: JsonNullValueInput | InputJsonValue
    eventPage?: JsonNullValueInput | InputJsonValue
    from_Post_event?: PostUncheckedUpdateManyWithoutEventNestedInput
    from_Role_event?: RoleUncheckedUpdateManyWithoutEventNestedInput
  }

  export type UserCreateWithoutVolunteerInput = {
    id?: string
    name?: string
    username?: string
    email?: string
    password: string
    accountCreated?: Date | string | null
    dateOfBirth?: Date | string | null
    pronouns?: string
    submissions?: SubmissionCreateNestedManyWithoutRunnerInput
    roles?: RoleCreateNestedManyWithoutUsersInput
    runs?: RunCreateNestedManyWithoutRunnersInput
    verified?: boolean
    state?: UserStateType | null
    sentVerification?: Date | string | null
    discord?: string
    twitter?: string
    twitch?: string
    tickets?: TicketCreateNestedManyWithoutUserInput
    shirts?: ShirtOrderCreateNestedManyWithoutUserInput
    passwordResetToken?: string | null
    passwordResetIssuedAt?: Date | string | null
    passwordResetRedeemedAt?: Date | string | null
    from_Post_author?: PostCreateNestedManyWithoutAuthorInput
  }

  export type UserUncheckedCreateWithoutVolunteerInput = {
    id?: string
    name?: string
    username?: string
    email?: string
    password: string
    accountCreated?: Date | string | null
    dateOfBirth?: Date | string | null
    pronouns?: string
    submissions?: SubmissionUncheckedCreateNestedManyWithoutRunnerInput
    roles?: RoleUncheckedCreateNestedManyWithoutUsersInput
    runs?: RunUncheckedCreateNestedManyWithoutRunnersInput
    verified?: boolean
    state?: UserStateType | null
    sentVerification?: Date | string | null
    discord?: string
    twitter?: string
    twitch?: string
    tickets?: TicketUncheckedCreateNestedManyWithoutUserInput
    shirts?: ShirtOrderUncheckedCreateNestedManyWithoutUserInput
    passwordResetToken?: string | null
    passwordResetIssuedAt?: Date | string | null
    passwordResetRedeemedAt?: Date | string | null
    from_Post_author?: PostUncheckedCreateNestedManyWithoutAuthorInput
  }

  export type UserCreateOrConnectWithoutVolunteerInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutVolunteerInput, UserUncheckedCreateWithoutVolunteerInput>
  }

  export type EventCreateWithoutVolunteerInput = {
    id?: string
    name?: string
    shortname?: string
    published?: boolean
    acceptingSubmissions?: boolean
    acceptingTickets?: boolean
    scheduleReleased?: boolean
    acceptingVolunteers?: boolean
    acceptingBackups?: boolean
    acceptingShirts?: boolean
    eventTimezone?: string
    startDate?: Date | string | null
    endDate?: Date | string | null
    raised?: number | null
    postEventPage?: JsonNullValueInput | InputJsonValue
    submissions?: SubmissionCreateNestedManyWithoutEventInput
    runs?: RunCreateNestedManyWithoutEventInput
    tickets?: TicketCreateNestedManyWithoutEventInput
    donationIncentives?: IncentiveCreateNestedManyWithoutEventInput
    logo_filesize?: number | null
    logo_extension?: string | null
    logo_width?: number | null
    logo_height?: number | null
    logo_id?: string | null
    darkModeLogo_filesize?: number | null
    darkModeLogo_extension?: string | null
    darkModeLogo_width?: number | null
    darkModeLogo_height?: number | null
    darkModeLogo_id?: string | null
    heroImage_filesize?: number | null
    heroImage_extension?: string | null
    heroImage_width?: number | null
    heroImage_height?: number | null
    heroImage_id?: string | null
    ogImage_filesize?: number | null
    ogImage_extension?: string | null
    ogImage_width?: number | null
    ogImage_height?: number | null
    ogImage_id?: string | null
    postEventBackground_filesize?: number | null
    postEventBackground_extension?: string | null
    postEventBackground_width?: number | null
    postEventBackground_height?: number | null
    postEventBackground_id?: string | null
    pressKit_filename?: string | null
    pressKit_filesize?: number | null
    submissionInstructions?: JsonNullValueInput | InputJsonValue
    eventPage?: JsonNullValueInput | InputJsonValue
    from_Post_event?: PostCreateNestedManyWithoutEventInput
    from_Role_event?: RoleCreateNestedManyWithoutEventInput
  }

  export type EventUncheckedCreateWithoutVolunteerInput = {
    id?: string
    name?: string
    shortname?: string
    published?: boolean
    acceptingSubmissions?: boolean
    acceptingTickets?: boolean
    scheduleReleased?: boolean
    acceptingVolunteers?: boolean
    acceptingBackups?: boolean
    acceptingShirts?: boolean
    eventTimezone?: string
    startDate?: Date | string | null
    endDate?: Date | string | null
    raised?: number | null
    postEventPage?: JsonNullValueInput | InputJsonValue
    submissions?: SubmissionUncheckedCreateNestedManyWithoutEventInput
    runs?: RunUncheckedCreateNestedManyWithoutEventInput
    tickets?: TicketUncheckedCreateNestedManyWithoutEventInput
    donationIncentives?: IncentiveUncheckedCreateNestedManyWithoutEventInput
    logo_filesize?: number | null
    logo_extension?: string | null
    logo_width?: number | null
    logo_height?: number | null
    logo_id?: string | null
    darkModeLogo_filesize?: number | null
    darkModeLogo_extension?: string | null
    darkModeLogo_width?: number | null
    darkModeLogo_height?: number | null
    darkModeLogo_id?: string | null
    heroImage_filesize?: number | null
    heroImage_extension?: string | null
    heroImage_width?: number | null
    heroImage_height?: number | null
    heroImage_id?: string | null
    ogImage_filesize?: number | null
    ogImage_extension?: string | null
    ogImage_width?: number | null
    ogImage_height?: number | null
    ogImage_id?: string | null
    postEventBackground_filesize?: number | null
    postEventBackground_extension?: string | null
    postEventBackground_width?: number | null
    postEventBackground_height?: number | null
    postEventBackground_id?: string | null
    pressKit_filename?: string | null
    pressKit_filesize?: number | null
    submissionInstructions?: JsonNullValueInput | InputJsonValue
    eventPage?: JsonNullValueInput | InputJsonValue
    from_Post_event?: PostUncheckedCreateNestedManyWithoutEventInput
    from_Role_event?: RoleUncheckedCreateNestedManyWithoutEventInput
  }

  export type EventCreateOrConnectWithoutVolunteerInput = {
    where: EventWhereUniqueInput
    create: XOR<EventCreateWithoutVolunteerInput, EventUncheckedCreateWithoutVolunteerInput>
  }

  export type UserUpsertWithoutVolunteerInput = {
    update: XOR<UserUpdateWithoutVolunteerInput, UserUncheckedUpdateWithoutVolunteerInput>
    create: XOR<UserCreateWithoutVolunteerInput, UserUncheckedCreateWithoutVolunteerInput>
  }

  export type UserUpdateWithoutVolunteerInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    accountCreated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pronouns?: StringFieldUpdateOperationsInput | string
    submissions?: SubmissionUpdateManyWithoutRunnerNestedInput
    roles?: RoleUpdateManyWithoutUsersNestedInput
    runs?: RunUpdateManyWithoutRunnersNestedInput
    verified?: BoolFieldUpdateOperationsInput | boolean
    state?: NullableEnumUserStateTypeFieldUpdateOperationsInput | UserStateType | null
    sentVerification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discord?: StringFieldUpdateOperationsInput | string
    twitter?: StringFieldUpdateOperationsInput | string
    twitch?: StringFieldUpdateOperationsInput | string
    tickets?: TicketUpdateManyWithoutUserNestedInput
    shirts?: ShirtOrderUpdateManyWithoutUserNestedInput
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetIssuedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordResetRedeemedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    from_Post_author?: PostUpdateManyWithoutAuthorNestedInput
  }

  export type UserUncheckedUpdateWithoutVolunteerInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    accountCreated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pronouns?: StringFieldUpdateOperationsInput | string
    submissions?: SubmissionUncheckedUpdateManyWithoutRunnerNestedInput
    roles?: RoleUncheckedUpdateManyWithoutUsersNestedInput
    runs?: RunUncheckedUpdateManyWithoutRunnersNestedInput
    verified?: BoolFieldUpdateOperationsInput | boolean
    state?: NullableEnumUserStateTypeFieldUpdateOperationsInput | UserStateType | null
    sentVerification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discord?: StringFieldUpdateOperationsInput | string
    twitter?: StringFieldUpdateOperationsInput | string
    twitch?: StringFieldUpdateOperationsInput | string
    tickets?: TicketUncheckedUpdateManyWithoutUserNestedInput
    shirts?: ShirtOrderUncheckedUpdateManyWithoutUserNestedInput
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetIssuedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordResetRedeemedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    from_Post_author?: PostUncheckedUpdateManyWithoutAuthorNestedInput
  }

  export type EventUpsertWithoutVolunteerInput = {
    update: XOR<EventUpdateWithoutVolunteerInput, EventUncheckedUpdateWithoutVolunteerInput>
    create: XOR<EventCreateWithoutVolunteerInput, EventUncheckedCreateWithoutVolunteerInput>
  }

  export type EventUpdateWithoutVolunteerInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    shortname?: StringFieldUpdateOperationsInput | string
    published?: BoolFieldUpdateOperationsInput | boolean
    acceptingSubmissions?: BoolFieldUpdateOperationsInput | boolean
    acceptingTickets?: BoolFieldUpdateOperationsInput | boolean
    scheduleReleased?: BoolFieldUpdateOperationsInput | boolean
    acceptingVolunteers?: BoolFieldUpdateOperationsInput | boolean
    acceptingBackups?: BoolFieldUpdateOperationsInput | boolean
    acceptingShirts?: BoolFieldUpdateOperationsInput | boolean
    eventTimezone?: StringFieldUpdateOperationsInput | string
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raised?: NullableFloatFieldUpdateOperationsInput | number | null
    postEventPage?: JsonNullValueInput | InputJsonValue
    submissions?: SubmissionUpdateManyWithoutEventNestedInput
    runs?: RunUpdateManyWithoutEventNestedInput
    tickets?: TicketUpdateManyWithoutEventNestedInput
    donationIncentives?: IncentiveUpdateManyWithoutEventNestedInput
    logo_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    logo_extension?: NullableStringFieldUpdateOperationsInput | string | null
    logo_width?: NullableIntFieldUpdateOperationsInput | number | null
    logo_height?: NullableIntFieldUpdateOperationsInput | number | null
    logo_id?: NullableStringFieldUpdateOperationsInput | string | null
    darkModeLogo_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_extension?: NullableStringFieldUpdateOperationsInput | string | null
    darkModeLogo_width?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_height?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_id?: NullableStringFieldUpdateOperationsInput | string | null
    heroImage_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_extension?: NullableStringFieldUpdateOperationsInput | string | null
    heroImage_width?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_height?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_id?: NullableStringFieldUpdateOperationsInput | string | null
    ogImage_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_extension?: NullableStringFieldUpdateOperationsInput | string | null
    ogImage_width?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_height?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_id?: NullableStringFieldUpdateOperationsInput | string | null
    postEventBackground_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_extension?: NullableStringFieldUpdateOperationsInput | string | null
    postEventBackground_width?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_height?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_id?: NullableStringFieldUpdateOperationsInput | string | null
    pressKit_filename?: NullableStringFieldUpdateOperationsInput | string | null
    pressKit_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    submissionInstructions?: JsonNullValueInput | InputJsonValue
    eventPage?: JsonNullValueInput | InputJsonValue
    from_Post_event?: PostUpdateManyWithoutEventNestedInput
    from_Role_event?: RoleUpdateManyWithoutEventNestedInput
  }

  export type EventUncheckedUpdateWithoutVolunteerInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    shortname?: StringFieldUpdateOperationsInput | string
    published?: BoolFieldUpdateOperationsInput | boolean
    acceptingSubmissions?: BoolFieldUpdateOperationsInput | boolean
    acceptingTickets?: BoolFieldUpdateOperationsInput | boolean
    scheduleReleased?: BoolFieldUpdateOperationsInput | boolean
    acceptingVolunteers?: BoolFieldUpdateOperationsInput | boolean
    acceptingBackups?: BoolFieldUpdateOperationsInput | boolean
    acceptingShirts?: BoolFieldUpdateOperationsInput | boolean
    eventTimezone?: StringFieldUpdateOperationsInput | string
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raised?: NullableFloatFieldUpdateOperationsInput | number | null
    postEventPage?: JsonNullValueInput | InputJsonValue
    submissions?: SubmissionUncheckedUpdateManyWithoutEventNestedInput
    runs?: RunUncheckedUpdateManyWithoutEventNestedInput
    tickets?: TicketUncheckedUpdateManyWithoutEventNestedInput
    donationIncentives?: IncentiveUncheckedUpdateManyWithoutEventNestedInput
    logo_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    logo_extension?: NullableStringFieldUpdateOperationsInput | string | null
    logo_width?: NullableIntFieldUpdateOperationsInput | number | null
    logo_height?: NullableIntFieldUpdateOperationsInput | number | null
    logo_id?: NullableStringFieldUpdateOperationsInput | string | null
    darkModeLogo_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_extension?: NullableStringFieldUpdateOperationsInput | string | null
    darkModeLogo_width?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_height?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_id?: NullableStringFieldUpdateOperationsInput | string | null
    heroImage_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_extension?: NullableStringFieldUpdateOperationsInput | string | null
    heroImage_width?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_height?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_id?: NullableStringFieldUpdateOperationsInput | string | null
    ogImage_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_extension?: NullableStringFieldUpdateOperationsInput | string | null
    ogImage_width?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_height?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_id?: NullableStringFieldUpdateOperationsInput | string | null
    postEventBackground_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_extension?: NullableStringFieldUpdateOperationsInput | string | null
    postEventBackground_width?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_height?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_id?: NullableStringFieldUpdateOperationsInput | string | null
    pressKit_filename?: NullableStringFieldUpdateOperationsInput | string | null
    pressKit_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    submissionInstructions?: JsonNullValueInput | InputJsonValue
    eventPage?: JsonNullValueInput | InputJsonValue
    from_Post_event?: PostUncheckedUpdateManyWithoutEventNestedInput
    from_Role_event?: RoleUncheckedUpdateManyWithoutEventNestedInput
  }

  export type UserCreateWithoutShirtsInput = {
    id?: string
    name?: string
    username?: string
    email?: string
    password: string
    accountCreated?: Date | string | null
    dateOfBirth?: Date | string | null
    pronouns?: string
    submissions?: SubmissionCreateNestedManyWithoutRunnerInput
    roles?: RoleCreateNestedManyWithoutUsersInput
    runs?: RunCreateNestedManyWithoutRunnersInput
    verified?: boolean
    state?: UserStateType | null
    sentVerification?: Date | string | null
    discord?: string
    twitter?: string
    twitch?: string
    tickets?: TicketCreateNestedManyWithoutUserInput
    volunteer?: VolunteerCreateNestedManyWithoutVolunteerInput
    passwordResetToken?: string | null
    passwordResetIssuedAt?: Date | string | null
    passwordResetRedeemedAt?: Date | string | null
    from_Post_author?: PostCreateNestedManyWithoutAuthorInput
  }

  export type UserUncheckedCreateWithoutShirtsInput = {
    id?: string
    name?: string
    username?: string
    email?: string
    password: string
    accountCreated?: Date | string | null
    dateOfBirth?: Date | string | null
    pronouns?: string
    submissions?: SubmissionUncheckedCreateNestedManyWithoutRunnerInput
    roles?: RoleUncheckedCreateNestedManyWithoutUsersInput
    runs?: RunUncheckedCreateNestedManyWithoutRunnersInput
    verified?: boolean
    state?: UserStateType | null
    sentVerification?: Date | string | null
    discord?: string
    twitter?: string
    twitch?: string
    tickets?: TicketUncheckedCreateNestedManyWithoutUserInput
    volunteer?: VolunteerUncheckedCreateNestedManyWithoutVolunteerInput
    passwordResetToken?: string | null
    passwordResetIssuedAt?: Date | string | null
    passwordResetRedeemedAt?: Date | string | null
    from_Post_author?: PostUncheckedCreateNestedManyWithoutAuthorInput
  }

  export type UserCreateOrConnectWithoutShirtsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutShirtsInput, UserUncheckedCreateWithoutShirtsInput>
  }

  export type UserUpsertWithoutShirtsInput = {
    update: XOR<UserUpdateWithoutShirtsInput, UserUncheckedUpdateWithoutShirtsInput>
    create: XOR<UserCreateWithoutShirtsInput, UserUncheckedCreateWithoutShirtsInput>
  }

  export type UserUpdateWithoutShirtsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    accountCreated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pronouns?: StringFieldUpdateOperationsInput | string
    submissions?: SubmissionUpdateManyWithoutRunnerNestedInput
    roles?: RoleUpdateManyWithoutUsersNestedInput
    runs?: RunUpdateManyWithoutRunnersNestedInput
    verified?: BoolFieldUpdateOperationsInput | boolean
    state?: NullableEnumUserStateTypeFieldUpdateOperationsInput | UserStateType | null
    sentVerification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discord?: StringFieldUpdateOperationsInput | string
    twitter?: StringFieldUpdateOperationsInput | string
    twitch?: StringFieldUpdateOperationsInput | string
    tickets?: TicketUpdateManyWithoutUserNestedInput
    volunteer?: VolunteerUpdateManyWithoutVolunteerNestedInput
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetIssuedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordResetRedeemedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    from_Post_author?: PostUpdateManyWithoutAuthorNestedInput
  }

  export type UserUncheckedUpdateWithoutShirtsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    accountCreated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pronouns?: StringFieldUpdateOperationsInput | string
    submissions?: SubmissionUncheckedUpdateManyWithoutRunnerNestedInput
    roles?: RoleUncheckedUpdateManyWithoutUsersNestedInput
    runs?: RunUncheckedUpdateManyWithoutRunnersNestedInput
    verified?: BoolFieldUpdateOperationsInput | boolean
    state?: NullableEnumUserStateTypeFieldUpdateOperationsInput | UserStateType | null
    sentVerification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discord?: StringFieldUpdateOperationsInput | string
    twitter?: StringFieldUpdateOperationsInput | string
    twitch?: StringFieldUpdateOperationsInput | string
    tickets?: TicketUncheckedUpdateManyWithoutUserNestedInput
    volunteer?: VolunteerUncheckedUpdateManyWithoutVolunteerNestedInput
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetIssuedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordResetRedeemedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    from_Post_author?: PostUncheckedUpdateManyWithoutAuthorNestedInput
  }

  export type RunCreateWithoutDonationIncentiveObjectInput = {
    id?: string
    runners?: UserCreateNestedManyWithoutRunsInput
    originalSubmission?: SubmissionCreateNestedOneWithoutFrom_Run_originalSubmissionInput
    game?: string
    category?: string
    platform?: string
    estimate?: string
    finalTime?: string
    donationIncentive?: string
    race?: boolean
    racer?: string
    coop?: boolean
    twitchVOD?: string
    youtubeVOD?: string
    event?: EventCreateNestedOneWithoutRunsInput
    scheduledTime?: Date | string | null
  }

  export type RunUncheckedCreateWithoutDonationIncentiveObjectInput = {
    id?: string
    runners?: UserUncheckedCreateNestedManyWithoutRunsInput
    originalSubmissionId?: string | null
    game?: string
    category?: string
    platform?: string
    estimate?: string
    finalTime?: string
    donationIncentive?: string
    race?: boolean
    racer?: string
    coop?: boolean
    twitchVOD?: string
    youtubeVOD?: string
    eventId?: string | null
    scheduledTime?: Date | string | null
  }

  export type RunCreateOrConnectWithoutDonationIncentiveObjectInput = {
    where: RunWhereUniqueInput
    create: XOR<RunCreateWithoutDonationIncentiveObjectInput, RunUncheckedCreateWithoutDonationIncentiveObjectInput>
  }

  export type EventCreateWithoutDonationIncentivesInput = {
    id?: string
    name?: string
    shortname?: string
    published?: boolean
    acceptingSubmissions?: boolean
    acceptingTickets?: boolean
    scheduleReleased?: boolean
    acceptingVolunteers?: boolean
    acceptingBackups?: boolean
    acceptingShirts?: boolean
    eventTimezone?: string
    startDate?: Date | string | null
    endDate?: Date | string | null
    raised?: number | null
    postEventPage?: JsonNullValueInput | InputJsonValue
    submissions?: SubmissionCreateNestedManyWithoutEventInput
    runs?: RunCreateNestedManyWithoutEventInput
    tickets?: TicketCreateNestedManyWithoutEventInput
    volunteer?: VolunteerCreateNestedManyWithoutEventInput
    logo_filesize?: number | null
    logo_extension?: string | null
    logo_width?: number | null
    logo_height?: number | null
    logo_id?: string | null
    darkModeLogo_filesize?: number | null
    darkModeLogo_extension?: string | null
    darkModeLogo_width?: number | null
    darkModeLogo_height?: number | null
    darkModeLogo_id?: string | null
    heroImage_filesize?: number | null
    heroImage_extension?: string | null
    heroImage_width?: number | null
    heroImage_height?: number | null
    heroImage_id?: string | null
    ogImage_filesize?: number | null
    ogImage_extension?: string | null
    ogImage_width?: number | null
    ogImage_height?: number | null
    ogImage_id?: string | null
    postEventBackground_filesize?: number | null
    postEventBackground_extension?: string | null
    postEventBackground_width?: number | null
    postEventBackground_height?: number | null
    postEventBackground_id?: string | null
    pressKit_filename?: string | null
    pressKit_filesize?: number | null
    submissionInstructions?: JsonNullValueInput | InputJsonValue
    eventPage?: JsonNullValueInput | InputJsonValue
    from_Post_event?: PostCreateNestedManyWithoutEventInput
    from_Role_event?: RoleCreateNestedManyWithoutEventInput
  }

  export type EventUncheckedCreateWithoutDonationIncentivesInput = {
    id?: string
    name?: string
    shortname?: string
    published?: boolean
    acceptingSubmissions?: boolean
    acceptingTickets?: boolean
    scheduleReleased?: boolean
    acceptingVolunteers?: boolean
    acceptingBackups?: boolean
    acceptingShirts?: boolean
    eventTimezone?: string
    startDate?: Date | string | null
    endDate?: Date | string | null
    raised?: number | null
    postEventPage?: JsonNullValueInput | InputJsonValue
    submissions?: SubmissionUncheckedCreateNestedManyWithoutEventInput
    runs?: RunUncheckedCreateNestedManyWithoutEventInput
    tickets?: TicketUncheckedCreateNestedManyWithoutEventInput
    volunteer?: VolunteerUncheckedCreateNestedManyWithoutEventInput
    logo_filesize?: number | null
    logo_extension?: string | null
    logo_width?: number | null
    logo_height?: number | null
    logo_id?: string | null
    darkModeLogo_filesize?: number | null
    darkModeLogo_extension?: string | null
    darkModeLogo_width?: number | null
    darkModeLogo_height?: number | null
    darkModeLogo_id?: string | null
    heroImage_filesize?: number | null
    heroImage_extension?: string | null
    heroImage_width?: number | null
    heroImage_height?: number | null
    heroImage_id?: string | null
    ogImage_filesize?: number | null
    ogImage_extension?: string | null
    ogImage_width?: number | null
    ogImage_height?: number | null
    ogImage_id?: string | null
    postEventBackground_filesize?: number | null
    postEventBackground_extension?: string | null
    postEventBackground_width?: number | null
    postEventBackground_height?: number | null
    postEventBackground_id?: string | null
    pressKit_filename?: string | null
    pressKit_filesize?: number | null
    submissionInstructions?: JsonNullValueInput | InputJsonValue
    eventPage?: JsonNullValueInput | InputJsonValue
    from_Post_event?: PostUncheckedCreateNestedManyWithoutEventInput
    from_Role_event?: RoleUncheckedCreateNestedManyWithoutEventInput
  }

  export type EventCreateOrConnectWithoutDonationIncentivesInput = {
    where: EventWhereUniqueInput
    create: XOR<EventCreateWithoutDonationIncentivesInput, EventUncheckedCreateWithoutDonationIncentivesInput>
  }

  export type RunUpsertWithoutDonationIncentiveObjectInput = {
    update: XOR<RunUpdateWithoutDonationIncentiveObjectInput, RunUncheckedUpdateWithoutDonationIncentiveObjectInput>
    create: XOR<RunCreateWithoutDonationIncentiveObjectInput, RunUncheckedCreateWithoutDonationIncentiveObjectInput>
  }

  export type RunUpdateWithoutDonationIncentiveObjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    runners?: UserUpdateManyWithoutRunsNestedInput
    originalSubmission?: SubmissionUpdateOneWithoutFrom_Run_originalSubmissionNestedInput
    game?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    platform?: StringFieldUpdateOperationsInput | string
    estimate?: StringFieldUpdateOperationsInput | string
    finalTime?: StringFieldUpdateOperationsInput | string
    donationIncentive?: StringFieldUpdateOperationsInput | string
    race?: BoolFieldUpdateOperationsInput | boolean
    racer?: StringFieldUpdateOperationsInput | string
    coop?: BoolFieldUpdateOperationsInput | boolean
    twitchVOD?: StringFieldUpdateOperationsInput | string
    youtubeVOD?: StringFieldUpdateOperationsInput | string
    event?: EventUpdateOneWithoutRunsNestedInput
    scheduledTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RunUncheckedUpdateWithoutDonationIncentiveObjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    runners?: UserUncheckedUpdateManyWithoutRunsNestedInput
    originalSubmissionId?: NullableStringFieldUpdateOperationsInput | string | null
    game?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    platform?: StringFieldUpdateOperationsInput | string
    estimate?: StringFieldUpdateOperationsInput | string
    finalTime?: StringFieldUpdateOperationsInput | string
    donationIncentive?: StringFieldUpdateOperationsInput | string
    race?: BoolFieldUpdateOperationsInput | boolean
    racer?: StringFieldUpdateOperationsInput | string
    coop?: BoolFieldUpdateOperationsInput | boolean
    twitchVOD?: StringFieldUpdateOperationsInput | string
    youtubeVOD?: StringFieldUpdateOperationsInput | string
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type EventUpsertWithoutDonationIncentivesInput = {
    update: XOR<EventUpdateWithoutDonationIncentivesInput, EventUncheckedUpdateWithoutDonationIncentivesInput>
    create: XOR<EventCreateWithoutDonationIncentivesInput, EventUncheckedCreateWithoutDonationIncentivesInput>
  }

  export type EventUpdateWithoutDonationIncentivesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    shortname?: StringFieldUpdateOperationsInput | string
    published?: BoolFieldUpdateOperationsInput | boolean
    acceptingSubmissions?: BoolFieldUpdateOperationsInput | boolean
    acceptingTickets?: BoolFieldUpdateOperationsInput | boolean
    scheduleReleased?: BoolFieldUpdateOperationsInput | boolean
    acceptingVolunteers?: BoolFieldUpdateOperationsInput | boolean
    acceptingBackups?: BoolFieldUpdateOperationsInput | boolean
    acceptingShirts?: BoolFieldUpdateOperationsInput | boolean
    eventTimezone?: StringFieldUpdateOperationsInput | string
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raised?: NullableFloatFieldUpdateOperationsInput | number | null
    postEventPage?: JsonNullValueInput | InputJsonValue
    submissions?: SubmissionUpdateManyWithoutEventNestedInput
    runs?: RunUpdateManyWithoutEventNestedInput
    tickets?: TicketUpdateManyWithoutEventNestedInput
    volunteer?: VolunteerUpdateManyWithoutEventNestedInput
    logo_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    logo_extension?: NullableStringFieldUpdateOperationsInput | string | null
    logo_width?: NullableIntFieldUpdateOperationsInput | number | null
    logo_height?: NullableIntFieldUpdateOperationsInput | number | null
    logo_id?: NullableStringFieldUpdateOperationsInput | string | null
    darkModeLogo_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_extension?: NullableStringFieldUpdateOperationsInput | string | null
    darkModeLogo_width?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_height?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_id?: NullableStringFieldUpdateOperationsInput | string | null
    heroImage_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_extension?: NullableStringFieldUpdateOperationsInput | string | null
    heroImage_width?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_height?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_id?: NullableStringFieldUpdateOperationsInput | string | null
    ogImage_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_extension?: NullableStringFieldUpdateOperationsInput | string | null
    ogImage_width?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_height?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_id?: NullableStringFieldUpdateOperationsInput | string | null
    postEventBackground_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_extension?: NullableStringFieldUpdateOperationsInput | string | null
    postEventBackground_width?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_height?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_id?: NullableStringFieldUpdateOperationsInput | string | null
    pressKit_filename?: NullableStringFieldUpdateOperationsInput | string | null
    pressKit_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    submissionInstructions?: JsonNullValueInput | InputJsonValue
    eventPage?: JsonNullValueInput | InputJsonValue
    from_Post_event?: PostUpdateManyWithoutEventNestedInput
    from_Role_event?: RoleUpdateManyWithoutEventNestedInput
  }

  export type EventUncheckedUpdateWithoutDonationIncentivesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    shortname?: StringFieldUpdateOperationsInput | string
    published?: BoolFieldUpdateOperationsInput | boolean
    acceptingSubmissions?: BoolFieldUpdateOperationsInput | boolean
    acceptingTickets?: BoolFieldUpdateOperationsInput | boolean
    scheduleReleased?: BoolFieldUpdateOperationsInput | boolean
    acceptingVolunteers?: BoolFieldUpdateOperationsInput | boolean
    acceptingBackups?: BoolFieldUpdateOperationsInput | boolean
    acceptingShirts?: BoolFieldUpdateOperationsInput | boolean
    eventTimezone?: StringFieldUpdateOperationsInput | string
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raised?: NullableFloatFieldUpdateOperationsInput | number | null
    postEventPage?: JsonNullValueInput | InputJsonValue
    submissions?: SubmissionUncheckedUpdateManyWithoutEventNestedInput
    runs?: RunUncheckedUpdateManyWithoutEventNestedInput
    tickets?: TicketUncheckedUpdateManyWithoutEventNestedInput
    volunteer?: VolunteerUncheckedUpdateManyWithoutEventNestedInput
    logo_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    logo_extension?: NullableStringFieldUpdateOperationsInput | string | null
    logo_width?: NullableIntFieldUpdateOperationsInput | number | null
    logo_height?: NullableIntFieldUpdateOperationsInput | number | null
    logo_id?: NullableStringFieldUpdateOperationsInput | string | null
    darkModeLogo_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_extension?: NullableStringFieldUpdateOperationsInput | string | null
    darkModeLogo_width?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_height?: NullableIntFieldUpdateOperationsInput | number | null
    darkModeLogo_id?: NullableStringFieldUpdateOperationsInput | string | null
    heroImage_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_extension?: NullableStringFieldUpdateOperationsInput | string | null
    heroImage_width?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_height?: NullableIntFieldUpdateOperationsInput | number | null
    heroImage_id?: NullableStringFieldUpdateOperationsInput | string | null
    ogImage_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_extension?: NullableStringFieldUpdateOperationsInput | string | null
    ogImage_width?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_height?: NullableIntFieldUpdateOperationsInput | number | null
    ogImage_id?: NullableStringFieldUpdateOperationsInput | string | null
    postEventBackground_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_extension?: NullableStringFieldUpdateOperationsInput | string | null
    postEventBackground_width?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_height?: NullableIntFieldUpdateOperationsInput | number | null
    postEventBackground_id?: NullableStringFieldUpdateOperationsInput | string | null
    pressKit_filename?: NullableStringFieldUpdateOperationsInput | string | null
    pressKit_filesize?: NullableIntFieldUpdateOperationsInput | number | null
    submissionInstructions?: JsonNullValueInput | InputJsonValue
    eventPage?: JsonNullValueInput | InputJsonValue
    from_Post_event?: PostUncheckedUpdateManyWithoutEventNestedInput
    from_Role_event?: RoleUncheckedUpdateManyWithoutEventNestedInput
  }

  export type UserUpdateWithoutFrom_Post_authorInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    accountCreated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pronouns?: StringFieldUpdateOperationsInput | string
    submissions?: SubmissionUpdateManyWithoutRunnerNestedInput
    roles?: RoleUpdateManyWithoutUsersNestedInput
    runs?: RunUpdateManyWithoutRunnersNestedInput
    verified?: BoolFieldUpdateOperationsInput | boolean
    state?: NullableEnumUserStateTypeFieldUpdateOperationsInput | UserStateType | null
    sentVerification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discord?: StringFieldUpdateOperationsInput | string
    twitter?: StringFieldUpdateOperationsInput | string
    twitch?: StringFieldUpdateOperationsInput | string
    tickets?: TicketUpdateManyWithoutUserNestedInput
    volunteer?: VolunteerUpdateManyWithoutVolunteerNestedInput
    shirts?: ShirtOrderUpdateManyWithoutUserNestedInput
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetIssuedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordResetRedeemedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserUncheckedUpdateWithoutFrom_Post_authorInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    accountCreated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pronouns?: StringFieldUpdateOperationsInput | string
    submissions?: SubmissionUncheckedUpdateManyWithoutRunnerNestedInput
    roles?: RoleUncheckedUpdateManyWithoutUsersNestedInput
    runs?: RunUncheckedUpdateManyWithoutRunnersNestedInput
    verified?: BoolFieldUpdateOperationsInput | boolean
    state?: NullableEnumUserStateTypeFieldUpdateOperationsInput | UserStateType | null
    sentVerification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discord?: StringFieldUpdateOperationsInput | string
    twitter?: StringFieldUpdateOperationsInput | string
    twitch?: StringFieldUpdateOperationsInput | string
    tickets?: TicketUncheckedUpdateManyWithoutUserNestedInput
    volunteer?: VolunteerUncheckedUpdateManyWithoutVolunteerNestedInput
    shirts?: ShirtOrderUncheckedUpdateManyWithoutUserNestedInput
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetIssuedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordResetRedeemedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserUncheckedUpdateManyWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    accountCreated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pronouns?: StringFieldUpdateOperationsInput | string
    verified?: BoolFieldUpdateOperationsInput | boolean
    state?: NullableEnumUserStateTypeFieldUpdateOperationsInput | UserStateType | null
    sentVerification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discord?: StringFieldUpdateOperationsInput | string
    twitter?: StringFieldUpdateOperationsInput | string
    twitch?: StringFieldUpdateOperationsInput | string
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetIssuedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordResetRedeemedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SubmissionCreateManyRunnerInput = {
    id?: string
    created?: Date | string | null
    game?: string
    category?: string
    platform?: string
    estimate?: string
    ageRating?: SubmissionAgeRatingType | null
    donationIncentive?: string
    specialReqs?: string
    availability?: NullableJsonNullValueInput | InputJsonValue
    race?: SubmissionRaceType | null
    racer?: string
    coop?: boolean
    video?: string
    status?: SubmissionStatusType | null
    eventId?: string | null
    willingBackup?: boolean
  }

  export type TicketCreateManyUserInput = {
    id?: string
    eventId?: string | null
    taken?: boolean
    method: TicketMethodType
    ticketID?: string
    paid?: boolean
    notes?: string
    numberOfTickets?: number | null
    stripeID?: string
    created?: Date | string | null
  }

  export type VolunteerCreateManyVolunteerInput = {
    id?: string
    jobType?: VolunteerJobTypeType | null
    eventHostTime?: number | null
    maxDailyHostTime?: number | null
    dayTimes?: NullableJsonNullValueInput | InputJsonValue
    specificGame?: string
    specificRunner?: string
    additionalInfo?: string
    experience?: string
    favMeme?: string
    runnerManagementAvailability?: string
    techAvailablity?: string
    techExperience?: string
    eventId?: string | null
  }

  export type ShirtOrderCreateManyUserInput = {
    id?: string
    taken?: boolean
    method: ShirtOrderMethodType
    shirtID?: string
    paid?: boolean
    notes?: string
    size: ShirtOrderSizeType
    colour: ShirtOrderColourType
    stripeID?: string
    created?: Date | string | null
  }

  export type SubmissionUpdateWithoutRunnerInput = {
    id?: StringFieldUpdateOperationsInput | string
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    game?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    platform?: StringFieldUpdateOperationsInput | string
    estimate?: StringFieldUpdateOperationsInput | string
    ageRating?: NullableEnumSubmissionAgeRatingTypeFieldUpdateOperationsInput | SubmissionAgeRatingType | null
    donationIncentive?: StringFieldUpdateOperationsInput | string
    specialReqs?: StringFieldUpdateOperationsInput | string
    availability?: NullableJsonNullValueInput | InputJsonValue
    race?: NullableEnumSubmissionRaceTypeFieldUpdateOperationsInput | SubmissionRaceType | null
    racer?: StringFieldUpdateOperationsInput | string
    coop?: BoolFieldUpdateOperationsInput | boolean
    video?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumSubmissionStatusTypeFieldUpdateOperationsInput | SubmissionStatusType | null
    event?: EventUpdateOneWithoutSubmissionsNestedInput
    willingBackup?: BoolFieldUpdateOperationsInput | boolean
    from_Run_originalSubmission?: RunUpdateManyWithoutOriginalSubmissionNestedInput
  }

  export type SubmissionUncheckedUpdateWithoutRunnerInput = {
    id?: StringFieldUpdateOperationsInput | string
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    game?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    platform?: StringFieldUpdateOperationsInput | string
    estimate?: StringFieldUpdateOperationsInput | string
    ageRating?: NullableEnumSubmissionAgeRatingTypeFieldUpdateOperationsInput | SubmissionAgeRatingType | null
    donationIncentive?: StringFieldUpdateOperationsInput | string
    specialReqs?: StringFieldUpdateOperationsInput | string
    availability?: NullableJsonNullValueInput | InputJsonValue
    race?: NullableEnumSubmissionRaceTypeFieldUpdateOperationsInput | SubmissionRaceType | null
    racer?: StringFieldUpdateOperationsInput | string
    coop?: BoolFieldUpdateOperationsInput | boolean
    video?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumSubmissionStatusTypeFieldUpdateOperationsInput | SubmissionStatusType | null
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
    willingBackup?: BoolFieldUpdateOperationsInput | boolean
    from_Run_originalSubmission?: RunUncheckedUpdateManyWithoutOriginalSubmissionNestedInput
  }

  export type SubmissionUncheckedUpdateManyWithoutSubmissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    game?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    platform?: StringFieldUpdateOperationsInput | string
    estimate?: StringFieldUpdateOperationsInput | string
    ageRating?: NullableEnumSubmissionAgeRatingTypeFieldUpdateOperationsInput | SubmissionAgeRatingType | null
    donationIncentive?: StringFieldUpdateOperationsInput | string
    specialReqs?: StringFieldUpdateOperationsInput | string
    availability?: NullableJsonNullValueInput | InputJsonValue
    race?: NullableEnumSubmissionRaceTypeFieldUpdateOperationsInput | SubmissionRaceType | null
    racer?: StringFieldUpdateOperationsInput | string
    coop?: BoolFieldUpdateOperationsInput | boolean
    video?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumSubmissionStatusTypeFieldUpdateOperationsInput | SubmissionStatusType | null
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
    willingBackup?: BoolFieldUpdateOperationsInput | boolean
  }

  export type RoleUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    admin?: BoolFieldUpdateOperationsInput | boolean
    canManageContent?: BoolFieldUpdateOperationsInput | boolean
    canManageUsers?: BoolFieldUpdateOperationsInput | boolean
    runner?: BoolFieldUpdateOperationsInput | boolean
    volunteer?: BoolFieldUpdateOperationsInput | boolean
    event?: EventUpdateOneWithoutFrom_Role_eventNestedInput
    show?: BoolFieldUpdateOperationsInput | boolean
    colour?: StringFieldUpdateOperationsInput | string
    textColour?: NullableEnumRoleTextColourTypeFieldUpdateOperationsInput | RoleTextColourType | null
  }

  export type RoleUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    admin?: BoolFieldUpdateOperationsInput | boolean
    canManageContent?: BoolFieldUpdateOperationsInput | boolean
    canManageUsers?: BoolFieldUpdateOperationsInput | boolean
    runner?: BoolFieldUpdateOperationsInput | boolean
    volunteer?: BoolFieldUpdateOperationsInput | boolean
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
    show?: BoolFieldUpdateOperationsInput | boolean
    colour?: StringFieldUpdateOperationsInput | string
    textColour?: NullableEnumRoleTextColourTypeFieldUpdateOperationsInput | RoleTextColourType | null
  }

  export type RoleUncheckedUpdateManyWithoutRolesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    admin?: BoolFieldUpdateOperationsInput | boolean
    canManageContent?: BoolFieldUpdateOperationsInput | boolean
    canManageUsers?: BoolFieldUpdateOperationsInput | boolean
    runner?: BoolFieldUpdateOperationsInput | boolean
    volunteer?: BoolFieldUpdateOperationsInput | boolean
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
    show?: BoolFieldUpdateOperationsInput | boolean
    colour?: StringFieldUpdateOperationsInput | string
    textColour?: NullableEnumRoleTextColourTypeFieldUpdateOperationsInput | RoleTextColourType | null
  }

  export type RunUpdateWithoutRunnersInput = {
    id?: StringFieldUpdateOperationsInput | string
    originalSubmission?: SubmissionUpdateOneWithoutFrom_Run_originalSubmissionNestedInput
    game?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    platform?: StringFieldUpdateOperationsInput | string
    estimate?: StringFieldUpdateOperationsInput | string
    finalTime?: StringFieldUpdateOperationsInput | string
    donationIncentive?: StringFieldUpdateOperationsInput | string
    race?: BoolFieldUpdateOperationsInput | boolean
    racer?: StringFieldUpdateOperationsInput | string
    coop?: BoolFieldUpdateOperationsInput | boolean
    twitchVOD?: StringFieldUpdateOperationsInput | string
    youtubeVOD?: StringFieldUpdateOperationsInput | string
    event?: EventUpdateOneWithoutRunsNestedInput
    donationIncentiveObject?: IncentiveUpdateManyWithoutRunNestedInput
    scheduledTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RunUncheckedUpdateWithoutRunnersInput = {
    id?: StringFieldUpdateOperationsInput | string
    originalSubmissionId?: NullableStringFieldUpdateOperationsInput | string | null
    game?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    platform?: StringFieldUpdateOperationsInput | string
    estimate?: StringFieldUpdateOperationsInput | string
    finalTime?: StringFieldUpdateOperationsInput | string
    donationIncentive?: StringFieldUpdateOperationsInput | string
    race?: BoolFieldUpdateOperationsInput | boolean
    racer?: StringFieldUpdateOperationsInput | string
    coop?: BoolFieldUpdateOperationsInput | boolean
    twitchVOD?: StringFieldUpdateOperationsInput | string
    youtubeVOD?: StringFieldUpdateOperationsInput | string
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
    donationIncentiveObject?: IncentiveUncheckedUpdateManyWithoutRunNestedInput
    scheduledTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RunUncheckedUpdateManyWithoutRunsInput = {
    id?: StringFieldUpdateOperationsInput | string
    originalSubmissionId?: NullableStringFieldUpdateOperationsInput | string | null
    game?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    platform?: StringFieldUpdateOperationsInput | string
    estimate?: StringFieldUpdateOperationsInput | string
    finalTime?: StringFieldUpdateOperationsInput | string
    donationIncentive?: StringFieldUpdateOperationsInput | string
    race?: BoolFieldUpdateOperationsInput | boolean
    racer?: StringFieldUpdateOperationsInput | string
    coop?: BoolFieldUpdateOperationsInput | boolean
    twitchVOD?: StringFieldUpdateOperationsInput | string
    youtubeVOD?: StringFieldUpdateOperationsInput | string
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TicketUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    event?: EventUpdateOneWithoutTicketsNestedInput
    taken?: BoolFieldUpdateOperationsInput | boolean
    method?: EnumTicketMethodTypeFieldUpdateOperationsInput | TicketMethodType
    ticketID?: StringFieldUpdateOperationsInput | string
    paid?: BoolFieldUpdateOperationsInput | boolean
    notes?: StringFieldUpdateOperationsInput | string
    numberOfTickets?: NullableIntFieldUpdateOperationsInput | number | null
    stripeID?: StringFieldUpdateOperationsInput | string
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TicketUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
    taken?: BoolFieldUpdateOperationsInput | boolean
    method?: EnumTicketMethodTypeFieldUpdateOperationsInput | TicketMethodType
    ticketID?: StringFieldUpdateOperationsInput | string
    paid?: BoolFieldUpdateOperationsInput | boolean
    notes?: StringFieldUpdateOperationsInput | string
    numberOfTickets?: NullableIntFieldUpdateOperationsInput | number | null
    stripeID?: StringFieldUpdateOperationsInput | string
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TicketUncheckedUpdateManyWithoutTicketsInput = {
    id?: StringFieldUpdateOperationsInput | string
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
    taken?: BoolFieldUpdateOperationsInput | boolean
    method?: EnumTicketMethodTypeFieldUpdateOperationsInput | TicketMethodType
    ticketID?: StringFieldUpdateOperationsInput | string
    paid?: BoolFieldUpdateOperationsInput | boolean
    notes?: StringFieldUpdateOperationsInput | string
    numberOfTickets?: NullableIntFieldUpdateOperationsInput | number | null
    stripeID?: StringFieldUpdateOperationsInput | string
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type VolunteerUpdateWithoutVolunteerInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobType?: NullableEnumVolunteerJobTypeTypeFieldUpdateOperationsInput | VolunteerJobTypeType | null
    eventHostTime?: NullableIntFieldUpdateOperationsInput | number | null
    maxDailyHostTime?: NullableIntFieldUpdateOperationsInput | number | null
    dayTimes?: NullableJsonNullValueInput | InputJsonValue
    specificGame?: StringFieldUpdateOperationsInput | string
    specificRunner?: StringFieldUpdateOperationsInput | string
    additionalInfo?: StringFieldUpdateOperationsInput | string
    experience?: StringFieldUpdateOperationsInput | string
    favMeme?: StringFieldUpdateOperationsInput | string
    runnerManagementAvailability?: StringFieldUpdateOperationsInput | string
    techAvailablity?: StringFieldUpdateOperationsInput | string
    techExperience?: StringFieldUpdateOperationsInput | string
    event?: EventUpdateOneWithoutVolunteerNestedInput
  }

  export type VolunteerUncheckedUpdateWithoutVolunteerInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobType?: NullableEnumVolunteerJobTypeTypeFieldUpdateOperationsInput | VolunteerJobTypeType | null
    eventHostTime?: NullableIntFieldUpdateOperationsInput | number | null
    maxDailyHostTime?: NullableIntFieldUpdateOperationsInput | number | null
    dayTimes?: NullableJsonNullValueInput | InputJsonValue
    specificGame?: StringFieldUpdateOperationsInput | string
    specificRunner?: StringFieldUpdateOperationsInput | string
    additionalInfo?: StringFieldUpdateOperationsInput | string
    experience?: StringFieldUpdateOperationsInput | string
    favMeme?: StringFieldUpdateOperationsInput | string
    runnerManagementAvailability?: StringFieldUpdateOperationsInput | string
    techAvailablity?: StringFieldUpdateOperationsInput | string
    techExperience?: StringFieldUpdateOperationsInput | string
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type VolunteerUncheckedUpdateManyWithoutVolunteerInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobType?: NullableEnumVolunteerJobTypeTypeFieldUpdateOperationsInput | VolunteerJobTypeType | null
    eventHostTime?: NullableIntFieldUpdateOperationsInput | number | null
    maxDailyHostTime?: NullableIntFieldUpdateOperationsInput | number | null
    dayTimes?: NullableJsonNullValueInput | InputJsonValue
    specificGame?: StringFieldUpdateOperationsInput | string
    specificRunner?: StringFieldUpdateOperationsInput | string
    additionalInfo?: StringFieldUpdateOperationsInput | string
    experience?: StringFieldUpdateOperationsInput | string
    favMeme?: StringFieldUpdateOperationsInput | string
    runnerManagementAvailability?: StringFieldUpdateOperationsInput | string
    techAvailablity?: StringFieldUpdateOperationsInput | string
    techExperience?: StringFieldUpdateOperationsInput | string
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ShirtOrderUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    taken?: BoolFieldUpdateOperationsInput | boolean
    method?: EnumShirtOrderMethodTypeFieldUpdateOperationsInput | ShirtOrderMethodType
    shirtID?: StringFieldUpdateOperationsInput | string
    paid?: BoolFieldUpdateOperationsInput | boolean
    notes?: StringFieldUpdateOperationsInput | string
    size?: EnumShirtOrderSizeTypeFieldUpdateOperationsInput | ShirtOrderSizeType
    colour?: EnumShirtOrderColourTypeFieldUpdateOperationsInput | ShirtOrderColourType
    stripeID?: StringFieldUpdateOperationsInput | string
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ShirtOrderUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    taken?: BoolFieldUpdateOperationsInput | boolean
    method?: EnumShirtOrderMethodTypeFieldUpdateOperationsInput | ShirtOrderMethodType
    shirtID?: StringFieldUpdateOperationsInput | string
    paid?: BoolFieldUpdateOperationsInput | boolean
    notes?: StringFieldUpdateOperationsInput | string
    size?: EnumShirtOrderSizeTypeFieldUpdateOperationsInput | ShirtOrderSizeType
    colour?: EnumShirtOrderColourTypeFieldUpdateOperationsInput | ShirtOrderColourType
    stripeID?: StringFieldUpdateOperationsInput | string
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ShirtOrderUncheckedUpdateManyWithoutShirtsInput = {
    id?: StringFieldUpdateOperationsInput | string
    taken?: BoolFieldUpdateOperationsInput | boolean
    method?: EnumShirtOrderMethodTypeFieldUpdateOperationsInput | ShirtOrderMethodType
    shirtID?: StringFieldUpdateOperationsInput | string
    paid?: BoolFieldUpdateOperationsInput | boolean
    notes?: StringFieldUpdateOperationsInput | string
    size?: EnumShirtOrderSizeTypeFieldUpdateOperationsInput | ShirtOrderSizeType
    colour?: EnumShirtOrderColourTypeFieldUpdateOperationsInput | ShirtOrderColourType
    stripeID?: StringFieldUpdateOperationsInput | string
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PostUpdateWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    published?: BoolFieldUpdateOperationsInput | boolean
    publishedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    editedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: NullableEnumPostRoleTypeFieldUpdateOperationsInput | PostRoleType | null
    content?: JsonNullValueInput | InputJsonValue
    intro?: StringFieldUpdateOperationsInput | string
    event?: EventUpdateOneWithoutFrom_Post_eventNestedInput
  }

  export type PostUncheckedUpdateWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    published?: BoolFieldUpdateOperationsInput | boolean
    publishedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    editedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: NullableEnumPostRoleTypeFieldUpdateOperationsInput | PostRoleType | null
    content?: JsonNullValueInput | InputJsonValue
    intro?: StringFieldUpdateOperationsInput | string
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PostUncheckedUpdateManyWithoutFrom_Post_authorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    published?: BoolFieldUpdateOperationsInput | boolean
    publishedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    editedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: NullableEnumPostRoleTypeFieldUpdateOperationsInput | PostRoleType | null
    content?: JsonNullValueInput | InputJsonValue
    intro?: StringFieldUpdateOperationsInput | string
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RunCreateManyOriginalSubmissionInput = {
    id?: string
    game?: string
    category?: string
    platform?: string
    estimate?: string
    finalTime?: string
    donationIncentive?: string
    race?: boolean
    racer?: string
    coop?: boolean
    twitchVOD?: string
    youtubeVOD?: string
    eventId?: string | null
    scheduledTime?: Date | string | null
  }

  export type RunUpdateWithoutOriginalSubmissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    runners?: UserUpdateManyWithoutRunsNestedInput
    game?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    platform?: StringFieldUpdateOperationsInput | string
    estimate?: StringFieldUpdateOperationsInput | string
    finalTime?: StringFieldUpdateOperationsInput | string
    donationIncentive?: StringFieldUpdateOperationsInput | string
    race?: BoolFieldUpdateOperationsInput | boolean
    racer?: StringFieldUpdateOperationsInput | string
    coop?: BoolFieldUpdateOperationsInput | boolean
    twitchVOD?: StringFieldUpdateOperationsInput | string
    youtubeVOD?: StringFieldUpdateOperationsInput | string
    event?: EventUpdateOneWithoutRunsNestedInput
    donationIncentiveObject?: IncentiveUpdateManyWithoutRunNestedInput
    scheduledTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RunUncheckedUpdateWithoutOriginalSubmissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    runners?: UserUncheckedUpdateManyWithoutRunsNestedInput
    game?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    platform?: StringFieldUpdateOperationsInput | string
    estimate?: StringFieldUpdateOperationsInput | string
    finalTime?: StringFieldUpdateOperationsInput | string
    donationIncentive?: StringFieldUpdateOperationsInput | string
    race?: BoolFieldUpdateOperationsInput | boolean
    racer?: StringFieldUpdateOperationsInput | string
    coop?: BoolFieldUpdateOperationsInput | boolean
    twitchVOD?: StringFieldUpdateOperationsInput | string
    youtubeVOD?: StringFieldUpdateOperationsInput | string
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
    donationIncentiveObject?: IncentiveUncheckedUpdateManyWithoutRunNestedInput
    scheduledTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RunUncheckedUpdateManyWithoutFrom_Run_originalSubmissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    game?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    platform?: StringFieldUpdateOperationsInput | string
    estimate?: StringFieldUpdateOperationsInput | string
    finalTime?: StringFieldUpdateOperationsInput | string
    donationIncentive?: StringFieldUpdateOperationsInput | string
    race?: BoolFieldUpdateOperationsInput | boolean
    racer?: StringFieldUpdateOperationsInput | string
    coop?: BoolFieldUpdateOperationsInput | boolean
    twitchVOD?: StringFieldUpdateOperationsInput | string
    youtubeVOD?: StringFieldUpdateOperationsInput | string
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SubmissionCreateManyEventInput = {
    id?: string
    runnerId?: string | null
    created?: Date | string | null
    game?: string
    category?: string
    platform?: string
    estimate?: string
    ageRating?: SubmissionAgeRatingType | null
    donationIncentive?: string
    specialReqs?: string
    availability?: NullableJsonNullValueInput | InputJsonValue
    race?: SubmissionRaceType | null
    racer?: string
    coop?: boolean
    video?: string
    status?: SubmissionStatusType | null
    willingBackup?: boolean
  }

  export type RunCreateManyEventInput = {
    id?: string
    originalSubmissionId?: string | null
    game?: string
    category?: string
    platform?: string
    estimate?: string
    finalTime?: string
    donationIncentive?: string
    race?: boolean
    racer?: string
    coop?: boolean
    twitchVOD?: string
    youtubeVOD?: string
    scheduledTime?: Date | string | null
  }

  export type TicketCreateManyEventInput = {
    id?: string
    userId?: string | null
    taken?: boolean
    method: TicketMethodType
    ticketID?: string
    paid?: boolean
    notes?: string
    numberOfTickets?: number | null
    stripeID?: string
    created?: Date | string | null
  }

  export type VolunteerCreateManyEventInput = {
    id?: string
    volunteerId?: string | null
    jobType?: VolunteerJobTypeType | null
    eventHostTime?: number | null
    maxDailyHostTime?: number | null
    dayTimes?: NullableJsonNullValueInput | InputJsonValue
    specificGame?: string
    specificRunner?: string
    additionalInfo?: string
    experience?: string
    favMeme?: string
    runnerManagementAvailability?: string
    techAvailablity?: string
    techExperience?: string
  }

  export type IncentiveCreateManyEventInput = {
    id?: string
    runId?: string | null
    title?: string
    notes?: string
    type?: string
    data?: NullableJsonNullValueInput | InputJsonValue
    active?: boolean
  }

  export type PostCreateManyEventInput = {
    id?: string
    title?: string
    slug?: string
    published?: boolean
    publishedDate?: Date | string | null
    editedDate?: Date | string | null
    role?: PostRoleType | null
    content?: JsonNullValueInput | InputJsonValue
    intro?: string
  }

  export type RoleCreateManyEventInput = {
    id?: string
    name?: string
    admin?: boolean
    canManageContent?: boolean
    canManageUsers?: boolean
    runner?: boolean
    volunteer?: boolean
    show?: boolean
    colour?: string
    textColour?: RoleTextColourType | null
  }

  export type SubmissionUpdateWithoutEventInput = {
    id?: StringFieldUpdateOperationsInput | string
    runner?: UserUpdateOneWithoutSubmissionsNestedInput
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    game?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    platform?: StringFieldUpdateOperationsInput | string
    estimate?: StringFieldUpdateOperationsInput | string
    ageRating?: NullableEnumSubmissionAgeRatingTypeFieldUpdateOperationsInput | SubmissionAgeRatingType | null
    donationIncentive?: StringFieldUpdateOperationsInput | string
    specialReqs?: StringFieldUpdateOperationsInput | string
    availability?: NullableJsonNullValueInput | InputJsonValue
    race?: NullableEnumSubmissionRaceTypeFieldUpdateOperationsInput | SubmissionRaceType | null
    racer?: StringFieldUpdateOperationsInput | string
    coop?: BoolFieldUpdateOperationsInput | boolean
    video?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumSubmissionStatusTypeFieldUpdateOperationsInput | SubmissionStatusType | null
    willingBackup?: BoolFieldUpdateOperationsInput | boolean
    from_Run_originalSubmission?: RunUpdateManyWithoutOriginalSubmissionNestedInput
  }

  export type SubmissionUncheckedUpdateWithoutEventInput = {
    id?: StringFieldUpdateOperationsInput | string
    runnerId?: NullableStringFieldUpdateOperationsInput | string | null
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    game?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    platform?: StringFieldUpdateOperationsInput | string
    estimate?: StringFieldUpdateOperationsInput | string
    ageRating?: NullableEnumSubmissionAgeRatingTypeFieldUpdateOperationsInput | SubmissionAgeRatingType | null
    donationIncentive?: StringFieldUpdateOperationsInput | string
    specialReqs?: StringFieldUpdateOperationsInput | string
    availability?: NullableJsonNullValueInput | InputJsonValue
    race?: NullableEnumSubmissionRaceTypeFieldUpdateOperationsInput | SubmissionRaceType | null
    racer?: StringFieldUpdateOperationsInput | string
    coop?: BoolFieldUpdateOperationsInput | boolean
    video?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumSubmissionStatusTypeFieldUpdateOperationsInput | SubmissionStatusType | null
    willingBackup?: BoolFieldUpdateOperationsInput | boolean
    from_Run_originalSubmission?: RunUncheckedUpdateManyWithoutOriginalSubmissionNestedInput
  }

  export type RunUpdateWithoutEventInput = {
    id?: StringFieldUpdateOperationsInput | string
    runners?: UserUpdateManyWithoutRunsNestedInput
    originalSubmission?: SubmissionUpdateOneWithoutFrom_Run_originalSubmissionNestedInput
    game?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    platform?: StringFieldUpdateOperationsInput | string
    estimate?: StringFieldUpdateOperationsInput | string
    finalTime?: StringFieldUpdateOperationsInput | string
    donationIncentive?: StringFieldUpdateOperationsInput | string
    race?: BoolFieldUpdateOperationsInput | boolean
    racer?: StringFieldUpdateOperationsInput | string
    coop?: BoolFieldUpdateOperationsInput | boolean
    twitchVOD?: StringFieldUpdateOperationsInput | string
    youtubeVOD?: StringFieldUpdateOperationsInput | string
    donationIncentiveObject?: IncentiveUpdateManyWithoutRunNestedInput
    scheduledTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RunUncheckedUpdateWithoutEventInput = {
    id?: StringFieldUpdateOperationsInput | string
    runners?: UserUncheckedUpdateManyWithoutRunsNestedInput
    originalSubmissionId?: NullableStringFieldUpdateOperationsInput | string | null
    game?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    platform?: StringFieldUpdateOperationsInput | string
    estimate?: StringFieldUpdateOperationsInput | string
    finalTime?: StringFieldUpdateOperationsInput | string
    donationIncentive?: StringFieldUpdateOperationsInput | string
    race?: BoolFieldUpdateOperationsInput | boolean
    racer?: StringFieldUpdateOperationsInput | string
    coop?: BoolFieldUpdateOperationsInput | boolean
    twitchVOD?: StringFieldUpdateOperationsInput | string
    youtubeVOD?: StringFieldUpdateOperationsInput | string
    donationIncentiveObject?: IncentiveUncheckedUpdateManyWithoutRunNestedInput
    scheduledTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TicketUpdateWithoutEventInput = {
    id?: StringFieldUpdateOperationsInput | string
    user?: UserUpdateOneWithoutTicketsNestedInput
    taken?: BoolFieldUpdateOperationsInput | boolean
    method?: EnumTicketMethodTypeFieldUpdateOperationsInput | TicketMethodType
    ticketID?: StringFieldUpdateOperationsInput | string
    paid?: BoolFieldUpdateOperationsInput | boolean
    notes?: StringFieldUpdateOperationsInput | string
    numberOfTickets?: NullableIntFieldUpdateOperationsInput | number | null
    stripeID?: StringFieldUpdateOperationsInput | string
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TicketUncheckedUpdateWithoutEventInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    taken?: BoolFieldUpdateOperationsInput | boolean
    method?: EnumTicketMethodTypeFieldUpdateOperationsInput | TicketMethodType
    ticketID?: StringFieldUpdateOperationsInput | string
    paid?: BoolFieldUpdateOperationsInput | boolean
    notes?: StringFieldUpdateOperationsInput | string
    numberOfTickets?: NullableIntFieldUpdateOperationsInput | number | null
    stripeID?: StringFieldUpdateOperationsInput | string
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type VolunteerUpdateWithoutEventInput = {
    id?: StringFieldUpdateOperationsInput | string
    volunteer?: UserUpdateOneWithoutVolunteerNestedInput
    jobType?: NullableEnumVolunteerJobTypeTypeFieldUpdateOperationsInput | VolunteerJobTypeType | null
    eventHostTime?: NullableIntFieldUpdateOperationsInput | number | null
    maxDailyHostTime?: NullableIntFieldUpdateOperationsInput | number | null
    dayTimes?: NullableJsonNullValueInput | InputJsonValue
    specificGame?: StringFieldUpdateOperationsInput | string
    specificRunner?: StringFieldUpdateOperationsInput | string
    additionalInfo?: StringFieldUpdateOperationsInput | string
    experience?: StringFieldUpdateOperationsInput | string
    favMeme?: StringFieldUpdateOperationsInput | string
    runnerManagementAvailability?: StringFieldUpdateOperationsInput | string
    techAvailablity?: StringFieldUpdateOperationsInput | string
    techExperience?: StringFieldUpdateOperationsInput | string
  }

  export type VolunteerUncheckedUpdateWithoutEventInput = {
    id?: StringFieldUpdateOperationsInput | string
    volunteerId?: NullableStringFieldUpdateOperationsInput | string | null
    jobType?: NullableEnumVolunteerJobTypeTypeFieldUpdateOperationsInput | VolunteerJobTypeType | null
    eventHostTime?: NullableIntFieldUpdateOperationsInput | number | null
    maxDailyHostTime?: NullableIntFieldUpdateOperationsInput | number | null
    dayTimes?: NullableJsonNullValueInput | InputJsonValue
    specificGame?: StringFieldUpdateOperationsInput | string
    specificRunner?: StringFieldUpdateOperationsInput | string
    additionalInfo?: StringFieldUpdateOperationsInput | string
    experience?: StringFieldUpdateOperationsInput | string
    favMeme?: StringFieldUpdateOperationsInput | string
    runnerManagementAvailability?: StringFieldUpdateOperationsInput | string
    techAvailablity?: StringFieldUpdateOperationsInput | string
    techExperience?: StringFieldUpdateOperationsInput | string
  }

  export type IncentiveUpdateWithoutEventInput = {
    id?: StringFieldUpdateOperationsInput | string
    run?: RunUpdateOneWithoutDonationIncentiveObjectNestedInput
    title?: StringFieldUpdateOperationsInput | string
    notes?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    data?: NullableJsonNullValueInput | InputJsonValue
    active?: BoolFieldUpdateOperationsInput | boolean
  }

  export type IncentiveUncheckedUpdateWithoutEventInput = {
    id?: StringFieldUpdateOperationsInput | string
    runId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    notes?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    data?: NullableJsonNullValueInput | InputJsonValue
    active?: BoolFieldUpdateOperationsInput | boolean
  }

  export type IncentiveUncheckedUpdateManyWithoutDonationIncentivesInput = {
    id?: StringFieldUpdateOperationsInput | string
    runId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    notes?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    data?: NullableJsonNullValueInput | InputJsonValue
    active?: BoolFieldUpdateOperationsInput | boolean
  }

  export type PostUpdateWithoutEventInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    author?: UserUpdateManyWithoutFrom_Post_authorNestedInput
    published?: BoolFieldUpdateOperationsInput | boolean
    publishedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    editedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: NullableEnumPostRoleTypeFieldUpdateOperationsInput | PostRoleType | null
    content?: JsonNullValueInput | InputJsonValue
    intro?: StringFieldUpdateOperationsInput | string
  }

  export type PostUncheckedUpdateWithoutEventInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    author?: UserUncheckedUpdateManyWithoutFrom_Post_authorNestedInput
    published?: BoolFieldUpdateOperationsInput | boolean
    publishedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    editedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: NullableEnumPostRoleTypeFieldUpdateOperationsInput | PostRoleType | null
    content?: JsonNullValueInput | InputJsonValue
    intro?: StringFieldUpdateOperationsInput | string
  }

  export type PostUncheckedUpdateManyWithoutFrom_Post_eventInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    published?: BoolFieldUpdateOperationsInput | boolean
    publishedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    editedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: NullableEnumPostRoleTypeFieldUpdateOperationsInput | PostRoleType | null
    content?: JsonNullValueInput | InputJsonValue
    intro?: StringFieldUpdateOperationsInput | string
  }

  export type RoleUpdateWithoutEventInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    admin?: BoolFieldUpdateOperationsInput | boolean
    canManageContent?: BoolFieldUpdateOperationsInput | boolean
    canManageUsers?: BoolFieldUpdateOperationsInput | boolean
    runner?: BoolFieldUpdateOperationsInput | boolean
    volunteer?: BoolFieldUpdateOperationsInput | boolean
    users?: UserUpdateManyWithoutRolesNestedInput
    show?: BoolFieldUpdateOperationsInput | boolean
    colour?: StringFieldUpdateOperationsInput | string
    textColour?: NullableEnumRoleTextColourTypeFieldUpdateOperationsInput | RoleTextColourType | null
  }

  export type RoleUncheckedUpdateWithoutEventInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    admin?: BoolFieldUpdateOperationsInput | boolean
    canManageContent?: BoolFieldUpdateOperationsInput | boolean
    canManageUsers?: BoolFieldUpdateOperationsInput | boolean
    runner?: BoolFieldUpdateOperationsInput | boolean
    volunteer?: BoolFieldUpdateOperationsInput | boolean
    users?: UserUncheckedUpdateManyWithoutRolesNestedInput
    show?: BoolFieldUpdateOperationsInput | boolean
    colour?: StringFieldUpdateOperationsInput | string
    textColour?: NullableEnumRoleTextColourTypeFieldUpdateOperationsInput | RoleTextColourType | null
  }

  export type RoleUncheckedUpdateManyWithoutFrom_Role_eventInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    admin?: BoolFieldUpdateOperationsInput | boolean
    canManageContent?: BoolFieldUpdateOperationsInput | boolean
    canManageUsers?: BoolFieldUpdateOperationsInput | boolean
    runner?: BoolFieldUpdateOperationsInput | boolean
    volunteer?: BoolFieldUpdateOperationsInput | boolean
    show?: BoolFieldUpdateOperationsInput | boolean
    colour?: StringFieldUpdateOperationsInput | string
    textColour?: NullableEnumRoleTextColourTypeFieldUpdateOperationsInput | RoleTextColourType | null
  }

  export type UserUpdateWithoutRolesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    accountCreated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pronouns?: StringFieldUpdateOperationsInput | string
    submissions?: SubmissionUpdateManyWithoutRunnerNestedInput
    runs?: RunUpdateManyWithoutRunnersNestedInput
    verified?: BoolFieldUpdateOperationsInput | boolean
    state?: NullableEnumUserStateTypeFieldUpdateOperationsInput | UserStateType | null
    sentVerification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discord?: StringFieldUpdateOperationsInput | string
    twitter?: StringFieldUpdateOperationsInput | string
    twitch?: StringFieldUpdateOperationsInput | string
    tickets?: TicketUpdateManyWithoutUserNestedInput
    volunteer?: VolunteerUpdateManyWithoutVolunteerNestedInput
    shirts?: ShirtOrderUpdateManyWithoutUserNestedInput
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetIssuedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordResetRedeemedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    from_Post_author?: PostUpdateManyWithoutAuthorNestedInput
  }

  export type UserUncheckedUpdateWithoutRolesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    accountCreated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pronouns?: StringFieldUpdateOperationsInput | string
    submissions?: SubmissionUncheckedUpdateManyWithoutRunnerNestedInput
    runs?: RunUncheckedUpdateManyWithoutRunnersNestedInput
    verified?: BoolFieldUpdateOperationsInput | boolean
    state?: NullableEnumUserStateTypeFieldUpdateOperationsInput | UserStateType | null
    sentVerification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discord?: StringFieldUpdateOperationsInput | string
    twitter?: StringFieldUpdateOperationsInput | string
    twitch?: StringFieldUpdateOperationsInput | string
    tickets?: TicketUncheckedUpdateManyWithoutUserNestedInput
    volunteer?: VolunteerUncheckedUpdateManyWithoutVolunteerNestedInput
    shirts?: ShirtOrderUncheckedUpdateManyWithoutUserNestedInput
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetIssuedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordResetRedeemedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    from_Post_author?: PostUncheckedUpdateManyWithoutAuthorNestedInput
  }

  export type UserUncheckedUpdateManyWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    accountCreated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pronouns?: StringFieldUpdateOperationsInput | string
    verified?: BoolFieldUpdateOperationsInput | boolean
    state?: NullableEnumUserStateTypeFieldUpdateOperationsInput | UserStateType | null
    sentVerification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discord?: StringFieldUpdateOperationsInput | string
    twitter?: StringFieldUpdateOperationsInput | string
    twitch?: StringFieldUpdateOperationsInput | string
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetIssuedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordResetRedeemedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IncentiveCreateManyRunInput = {
    id?: string
    eventId?: string | null
    title?: string
    notes?: string
    type?: string
    data?: NullableJsonNullValueInput | InputJsonValue
    active?: boolean
  }

  export type UserUpdateWithoutRunsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    accountCreated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pronouns?: StringFieldUpdateOperationsInput | string
    submissions?: SubmissionUpdateManyWithoutRunnerNestedInput
    roles?: RoleUpdateManyWithoutUsersNestedInput
    verified?: BoolFieldUpdateOperationsInput | boolean
    state?: NullableEnumUserStateTypeFieldUpdateOperationsInput | UserStateType | null
    sentVerification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discord?: StringFieldUpdateOperationsInput | string
    twitter?: StringFieldUpdateOperationsInput | string
    twitch?: StringFieldUpdateOperationsInput | string
    tickets?: TicketUpdateManyWithoutUserNestedInput
    volunteer?: VolunteerUpdateManyWithoutVolunteerNestedInput
    shirts?: ShirtOrderUpdateManyWithoutUserNestedInput
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetIssuedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordResetRedeemedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    from_Post_author?: PostUpdateManyWithoutAuthorNestedInput
  }

  export type UserUncheckedUpdateWithoutRunsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    accountCreated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pronouns?: StringFieldUpdateOperationsInput | string
    submissions?: SubmissionUncheckedUpdateManyWithoutRunnerNestedInput
    roles?: RoleUncheckedUpdateManyWithoutUsersNestedInput
    verified?: BoolFieldUpdateOperationsInput | boolean
    state?: NullableEnumUserStateTypeFieldUpdateOperationsInput | UserStateType | null
    sentVerification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discord?: StringFieldUpdateOperationsInput | string
    twitter?: StringFieldUpdateOperationsInput | string
    twitch?: StringFieldUpdateOperationsInput | string
    tickets?: TicketUncheckedUpdateManyWithoutUserNestedInput
    volunteer?: VolunteerUncheckedUpdateManyWithoutVolunteerNestedInput
    shirts?: ShirtOrderUncheckedUpdateManyWithoutUserNestedInput
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetIssuedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordResetRedeemedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    from_Post_author?: PostUncheckedUpdateManyWithoutAuthorNestedInput
  }

  export type UserUncheckedUpdateManyWithoutRunnersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    accountCreated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pronouns?: StringFieldUpdateOperationsInput | string
    verified?: BoolFieldUpdateOperationsInput | boolean
    state?: NullableEnumUserStateTypeFieldUpdateOperationsInput | UserStateType | null
    sentVerification?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discord?: StringFieldUpdateOperationsInput | string
    twitter?: StringFieldUpdateOperationsInput | string
    twitch?: StringFieldUpdateOperationsInput | string
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetIssuedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passwordResetRedeemedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IncentiveUpdateWithoutRunInput = {
    id?: StringFieldUpdateOperationsInput | string
    event?: EventUpdateOneWithoutDonationIncentivesNestedInput
    title?: StringFieldUpdateOperationsInput | string
    notes?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    data?: NullableJsonNullValueInput | InputJsonValue
    active?: BoolFieldUpdateOperationsInput | boolean
  }

  export type IncentiveUncheckedUpdateWithoutRunInput = {
    id?: StringFieldUpdateOperationsInput | string
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    notes?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    data?: NullableJsonNullValueInput | InputJsonValue
    active?: BoolFieldUpdateOperationsInput | boolean
  }

  export type IncentiveUncheckedUpdateManyWithoutDonationIncentiveObjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    notes?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    data?: NullableJsonNullValueInput | InputJsonValue
    active?: BoolFieldUpdateOperationsInput | boolean
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}